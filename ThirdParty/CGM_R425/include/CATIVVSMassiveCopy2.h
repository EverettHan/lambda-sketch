//===================================================================
// COPYRIGHT [!output company] 2010/06/28
//===================================================================
// CATIVVSDirectVaultUrlAccess.cpp
// Header definition of interface CATIVVSMassiveCopy2
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/06/28 Creation: Code generated by the 3DS wizard         VCS
//===================================================================
#ifndef CATIVVSMassiveCopy2_H
#define CATIVVSMassiveCopy2_H
/**
* @level Private
* @usage U3
*/
#include "CATVVSNetBase.h"
#include "CATBaseUnknown.h"
#include "CATListOfCATVVSUrl.h"
#include "CATIVVSMassiveCopy.h"
#include "CATVVSObserver.h"
#include "CATVVSUtils.h"
#include "CATOmxArray.h"
#include "CATVVSUrl.h"
#include "CATIAV5Level.h"

class CATVVSMassiveCopyStatus;
 
#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByVVSNetBase IID IID_CATIVVSMassiveCopy2;
#else
extern "C" const IID IID_CATIVVSMassiveCopy2 ;
#endif


/**  
*  Class providing general services for massive url copies and direct output access to streams.
*/

class ExportedByVVSNetBase CATIVVSMassiveCopy2 : public CATIVVSMassiveCopy
{
public:

  /**
   * Check out urls using FCS Client.
   * <b>Role</b>:Check out urls using async FCS Client.
   * @param iFromUrlList [in]
   *   the list of pointers to URLs to be copied.
   * @param iToUrlList [in]
   *   the list of pointers to URLs to copy to.
   * @return
   *   <b>Legal values</b>:
   *   <br><tt> S_OK :</tt>on Success for all lockbytes.
   *   <br><tt> STG_E_READFAULT :</tt> problem while reading.
   *   <br><tt> STG_E_INVALIDPARAMETER :</tt> invalid arguments.
   *   <br><tt> STG_E_ACCESSDENIED:</tt> No sufficient permission to read.
   *   <br><tt> STG_E_UNKNOWN :</tt> unexpected error.
   *   <br><tt> E_NOTIMPL :</tt> if not implemented.
   */
  virtual  HRESULT __stdcall Copy(const CATOmxArray<CATVVSUrl> &iFromUrlList,const CATOmxArray<CATVVSUrl> &iToUrlList, 
                                  const CATVVSMassiveCopyStatus * iCopyStatus, CATBoolean iMD5ToBeCheckedByFCS) = 0;
};

template<> inline const IID& CATOmxGetIID<CATIVVSMassiveCopy2>(const CATIVVSMassiveCopy2* )
{
  return IID_CATIVVSMassiveCopy2;
}

#endif
