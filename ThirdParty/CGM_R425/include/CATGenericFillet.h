#ifndef CATGenericFillet_h
#define CATGenericFillet_h

//=============================================================================
// COPYRIGHT DASSAULT SYSTEMES 1999
//=============================================================================
//
// CATGenericFillet:
//    Header file for a generic fillet.
//
//=============================================================================
// Usage notes:
//=============================================================================
// 13/06/16 R1Y Added access functions for extrapolation variables.
// 19/07/16 R1Y Added ReplaceOnePoint().
// 10/10/16 R1Y Added GetMeanRadius().
// 14/11/17 R1Y Added GetTrackParamsV().
// 22/06/22 SMT1 GetDeformationInfo
//=============================================================================

/**
 * Interface representing a circular sweep.
 *<br> The CATGenericFillet is created by the <tt>CreateGenericFillet</tt>
 * method of the <tt>CATGeoFactory</tt> interface. 
 *<br>A CATCirculatSweep is the surface generated by the smallest circle arcs
 * of <tt>CenterPoints</tt> centers and passing through <tt>Surface1Points</tt> 
 * and <tt>Surface2Points</tt> points. 
 */
#include "CATBaseUnknown.h"

class CATMathSetOfPointsND;
class CATGeometry;

#include "CATSurface.h"

#include "ExportedByCATGMGeometricInterfaces.h"
#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATGMGeometricInterfaces IID IID_CATGenericFillet ;
#else
extern "C" const IID IID_CATGenericFillet ;
#endif

class ExportedByCATGMGeometricInterfaces CATGenericFillet : public CATSurface
{
  CATDeclareInterface;

public:

/**
 * Returns the definition params, points, tangents and second derivatives of a CATGenericFillet
 * as 4 CATMathSetOfPointsND of dimension 10.
 */
  virtual void GetCreationData(CATMathSetOfPointsND & oParams,
                               CATMathSetOfPointsND & oPoints,
                               CATMathSetOfPointsND & oTangents,
                               CATMathSetOfPointsND & oSecondDeriv) const = 0; 

/**
 * Returns the definition points in 3D of the center curve which include a given SurLimits
 * with the sag as a CATMathSetOfPointsND of dimension 3.
 */
  virtual void GetCenterCurvePoints(const CATSurLimits & iSurLimits,
                                    CATMathSetOfPointsND & oPoints,
                                    double & oSag) const = 0;
  
/**
 *  Returns the params, tangent and second deriv on the spine for a CATGenericFillet
 *  for a variable fillet
 */

  virtual void GetParamOnSpine(CATLONG32 &oNumberOfPoints, 
                               const double * &oPointSpine,
                               const double * &oTangentSpine,
                               const double * &oSecondDerivSpine) const = 0;

  virtual void SetParamOnSpine(const CATMathSetOfPointsND &iPoints,
                               const CATMathSetOfPointsND &iTangents,
                               const CATMathSetOfPointsND &iSecondDerivatives,
                               const CATLONG32             iParamOnSpineIndex) = 0;
  
/**
 * Adds a point to a the surface.
 * @param iRankNumber
 * The position of the added point
 * (1 to be inserted between the first and the second point).
 * @param iParam
 * The parameter of the added point
 * @param iPoint 
 * The point in an array of doubles
 * @param iTangent
 * The tangent in an array of doubles
 * @param iSecondDerivative
 * The second derivative in an array of doubles
 */
  virtual CATBoolean AddOnePoint(const CATLONG32 iRankNumber,
                                 const double iParam,
                                 const double * iPoint,
                                 const double * iTangent,
                                 const double * iSecondDerivative,
                                 const CATLONG32 iFirstTraceIndex,
                                 const CATLONG32 iSecondTraceIndex,
                                 const CATLONG32 iCenterCurveIndex,
                                 const CATLONG32 iAngleIndex) = 0;
 
/**
 * @nodoc
 * Internal use only.
 * Replaces one point in the surface definition.
 * The value of "iRankNumber" should be 1 for the first point, and the number of points for the last point.
 */
  virtual CATBoolean ReplaceOnePoint(const CATLONG32 iRankNumber,
                                     const double iParam,
                                     const double * iPoint,
                                     const double * iTangent,
                                     const double * iSecondDerivative,
                                     const CATLONG32 iFirstTraceIndex,
                                     const CATLONG32 iSecondTraceIndex,
                                     const CATLONG32 iCenterCurveIndex,
                                     const CATLONG32 iAngleIndex) = 0;

/**
 * Gives the orientation of the generic fillet surface
 */
  virtual CATLONG32 GetSurfaceOrientation() = 0;
  
/**
 * Gives the radius of the fillet surface at point iParam
 */
  virtual CATPositiveLength GetRadiusAtPoint(const CATSurParam &iParam) const = 0;

/**
 * @nodoc
 * Gives the mean radius of the fillet surface
 */
  virtual double GetMeanRadius() const = 0;

/**
 * @nodoc
 * Gives the v-parameter values that correspond to the two fillet tracks.
 */
  virtual void GetTrackParamsV(double & oTrackParamV0,
                               double & oTrackParamV1) const = 0;

/*
 * Extrapol the fillet along v coordinate (angle coordinate) such that it contains the value iV.
 * The returned boolean is 1 if the operation was possible, 0 else.
 */
  virtual CATBoolean ExtrapolV(const double iV, CATBoolean iCheck=TRUE) = 0;

/**
 * @nodoc
 * Extrapolation of the fillet along u; the input params must connect
 * with the existing params on either side
 */
  virtual void ExtrapolU(const CATMathSetOfPointsND * iParams,
                         const CATMathSetOfPointsND * iPoints,
                         const CATMathSetOfPointsND * iTangents,
                         const CATMathSetOfPointsND * iSecondDerivatives,
                         const CATLONG32 iFirstTraceIndex,
                         const CATLONG32 iSecondTraceIndex,
                         const CATLONG32 iCentreCurveIndex,
                         const CATLONG32 iAngleIndex,
                         const CATLONG32 iParamOnSpineIndex = -1) = 0;

  /**
  * @nodoc
  * Internal use only.
  */
  virtual CATBoolean Unextrapol ( const CATSurLimits &iNewLimits,CATLONG32 iSplitMode) = 0;

  /**
  * @nodoc
  * Internal use only.
  * Access functions for extrapolation variables for the minimum and maximum U-parameter directions.
  */
  virtual CATBoolean GetIsExtrapolatedMinU() const = 0;
  virtual CATBoolean GetIsExtrapolatedMaxU() const = 0;
  virtual CATBoolean GetExtrapolationReachedMinU() const = 0;
  virtual CATBoolean GetExtrapolationReachedMaxU() const = 0;
  virtual double GetInitialMinU() const = 0;
  virtual double GetInitialMaxU() const = 0;
  virtual void SetExtrapolationReachedMinU(const CATBoolean iExtrapolationReachedMinU) = 0;
  virtual void SetExtrapolationReachedMaxU(const CATBoolean iExtrapolationReachedMaxU) = 0;
  virtual void GetDeformationInfo(CATBoolean & ioStart, CATBoolean & ioEnd) = 0;
};
CATDeclareHandler(CATGenericFillet,CATSurface);

#endif
