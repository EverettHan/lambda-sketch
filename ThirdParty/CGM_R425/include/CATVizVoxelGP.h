// COPYRIGHT Dassault Systemes 2003
//===================================================================
//
// CATVizVoxelGP.h
// Header definition of CATVizVoxelGP
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Apr 2003  Creation: Code generated by the CAA wizard  svq
//===================================================================
#ifndef CATVizVoxelGP_H
#define CATVizVoxelGP_H

#include "SGInfra.h"
#include "CATDynamicGP.h"
#include "CATVizPtrList.h"
#include "CATMathPointf.h"
#include "CATVizOctree.h"

class CAT4x4Matrix;
//-----------------------------------------------------------------------

/**
* Describe your class here.
* <p>
* Using this prefered syntax will enable mkdoc to document your class.
*/


class ExportedBySGInfra CATVizVoxelGP: public CATGraphicPrimitive
{
   CATDeclareClass;
   
public:
   
   // Standard constructors and destructors
   // -------------------------------------
   CATVizVoxelGP();
   CATVizVoxelGP(const CATMathPointf & center, float halfSize, const CATVizPtrList<CATVizVoxelLevel> & levels);
   

   void BuildLevels(int level,int nbBoxes, unsigned char *boxesDef, int & cursor);	
   void ComputeLevelSize(int level,int nbBoxes, unsigned char *boxesDef, int & cursor);
   static void GetChildPosition(CATMathPointf & iCenter, float iHalfSize, int iPosition, CATMathPointf & oCenter, float & oHalfSizes);
  
#if defined(REMOVE_USELESS_INCLUDE)
#pragma message(" BADREM : AZX 27102022 " __FILE__ " Its forbiden to override Draw function.")
#endif
   virtual void Draw(CATRender & iRender) GP_FUNC_OVERRIDE_FINAL;
   void AddLevel(CATVizVoxelLevel *level);
   virtual void Stream(CATStreamer & streamer);
   virtual void UnStream(CATStreamer & streamer);
   
   unsigned int GetCurrentNbLevels() {return _voxelTree->GetCurrentNbLevels();};
   unsigned int GetNbLevels() {return _voxelTree->GetNbLevels();};
   float GetHalfSize() {return _voxelTree->GetHalfSize();};
   const float *GetCenter() {return _voxelTree->GetCenter();};
   void ClearAllLevels(); 
   void ClearLastLevel(); 
   const CATVizPtrList<CATVizVoxelLevel> & GetLevels() {return _voxelTree->GetLevels();};
   
   CATVizOctree *GetOctree() {return _voxelTree;};

   CATVizVoxelLevel *UnstreamLevel(CATStreamer *streamer,unsigned int number);
   unsigned int ComputeStreamSize() const;
  
   // Copy constructor and equal operator
   // -----------------------------------
   CATVizVoxelGP (CATVizVoxelGP &);
   CATVizVoxelGP& operator=(CATVizVoxelGP&);
   
   static int Intersection(CATVizVoxelGP * iVoxelGP1, CATVizVoxelGP *iVoxelGP2, float iClearance = 0.0f, const CAT4x4Matrix * iMatrixGP1 = NULL, const CAT4x4Matrix * iMatrixGP2 = NULL);
   static int Intersection(CATVizVoxelGP * iVoxelGP, float iPlane[4], float iClearance = 0.0f, const CAT4x4Matrix * iMatrixGP = NULL);

protected:
  virtual ~CATVizVoxelGP();
      
protected:
	CATVizOctree *_voxelTree;
};

//-----------------------------------------------------------------------

#endif
