// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATIInfoForMICInstance.h
// Define the CATIInfoForMICInstance interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Dec 2006  Creation: Code generated by the CAA wizard  FCA
//===================================================================
#ifndef CATIInfoForMICInstance_H
#define CATIInfoForMICInstance_H

/**
* @level Private
* @usage U3
*/

#include "CATPLMModelerOccInterfaces.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMModelerOccInterfaces IID IID_CATIInfoForMICInstance;
#else
extern "C" const IID IID_CATIInfoForMICInstance ;
#endif

//------------------------------------------------------------------

/**
* This interface caracterizes a MIC (Model In Context) instance and links it to the occurrence model.
*/

class ExportedByCATPLMModelerOccInterfaces CATIInfoForMICInstance: public CATBaseUnknown
{
  CATDeclareInterface;

public:

  /**
  * Checks if the current instance belongs to a MIC structure.
  *   @return
  *     TRUE if the instance belongs to a MIC.
  *     FALSE otherwise.
  */ 
  virtual CATBoolean IsMICInstance() = 0;

  /**
  * Sets the root occurrence.
  *   @return
  *     HRESULT S_OK if succeeded.
  *     E_FAIL otherwise.
  */ 
  virtual HRESULT SetRootOccurrence(const CATBaseUnknown* RootOccurrence) = 0;

  /**
  * Gets the root occurrence.
  *   @return
  *     HRESULT S_OK if succeeded.
  *     E_FAIL otherwise.
  */ 
  virtual HRESULT GetRootOccurrence(CATBaseUnknown*& RootOccurrence) const = 0;


  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------
CATDeclareHandler(CATIInfoForMICInstance, CATBaseUnknown);
#endif
