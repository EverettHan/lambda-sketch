
//===================================================================
// COPYRIGHT Dassault Systemes 2014/04/29
//===================================================================
// CATAfrDashboardProxyBase.cpp
// Header definition of class CATAfrDashboardProxyBase
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2014/04/29 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATAfrDashboardProxyBase_H
#define CATAfrDashboardProxyBase_H

#include "CATAfrItf.h"
#include "CATBaseUnknown.h"
//---------------------------------------------------------------------- System
#include "CATUnicodeString.h"


//-----------------------------------------------------------------------


class CATSYPEventHandler;
class CATSYPEventArgs;
class CATSYPEventFactory;
class CATSYPEvent;
class CATSYPEventHandlersSupport;
/**
* The base class to a dashboard proxy. All proxies must derived this class and dispatch dedicated events when gets datas
*/

class ExportedByCATAfrItf CATAfrDashboardProxyBase: public CATBaseUnknown

{
CATDeclareClass;

public:
  //======================================================================================
  //                                    Events
  //======================================================================================
  /* Get the event DashboardList. 
  This event should be dispathed when the proxy gets a list of dashboards.
  This list is specified in the derived argument CATAfrDashboardProxyResult.
  @return the event DashboardList. 
  */
  static CATSYPEvent *  DashboardList();
  /* Get the event DashboardTabList. 
  This event should be dispathed after the current dashboard changed : {@link #OnOnCurrentDashboardChanged} must be override. 
  If the call is synchrone, dispatch this event directly in this method.
  The result of this call should provide a list of dashboard tabs which is specified in the derived argument CATAfrDashboardProxyResult.
  @return the event DashboardTabList. 
  */
  static CATSYPEvent *  DashboardTabList();



// Standard constructors and destructors
// -------------------------------------
CATAfrDashboardProxyBase ();
virtual ~CATAfrDashboardProxyBase ();




/**
*
* <br><b>Role</b>: Update the list of dashboards. Dispatch the event DashboardList with the list after the retrieving.
* 
* @return
* <dl>
* <dt><code>S_OK</code> <dd>: the call is succesful
* <dt><code>E_FAIL</code> <dd>: the call fails for an unknown reason, may be loss connection
* </dl>
*/
virtual HRESULT UpdateDashboardsList() = 0;

/**
*
* <br><b>Role</b>:Initialize the proxy
* 
*/
virtual void Initialize(){};
/**
*
* <br><b>Role</b>:Request the creation of a new dashboard by the user
* 
*/
virtual void RequestNewDashboard(){};

/**
*
* <br><b>Role</b>:Request the creation of a new dashboard tab by the user
* 
*/
virtual void RequestNewDashboardTab(){};

/** Get the current dashboard id, previously set */
const CATUnicodeString & GetCurrentDashboard() const; 
/**Set the current dashboard*/
void SetCurrentDashboard(const CATUnicodeString &i_currentDashboard);


/** Get / Set the property TabSelected. */
const CATUnicodeString & GetTabSelected() const;
void SetTabSelected(const CATUnicodeString &i_tabSelected);

int AddHandler(CATSYPEvent *i_pEvent, CATSYPEventHandler *i_pHandler, int i_handleConsumedEvents = 0);
int RemoveHandler(CATSYPEvent *i_pEvent, CATSYPEventHandler *i_pHandler);
int Dispatch(CATSYPEventArgs *i_pArgs);
static CATSYPEventFactory *GetEventFactory();

/** Sets DashboardUrl */
virtual void SetDashboardUrl(const CATUnicodeString & i_dashboardUrl);

/** Gets DashboardUrl */
const CATUnicodeString &  GetDashboardUrl( );

protected:
 virtual void OnCurrentDashboardChanged(const CATUnicodeString & i_PrevDashboard_id,const CATUnicodeString & i_NewDashboard_id) = 0;
 virtual void OnCurrentDashboardTabChanged(const CATUnicodeString & i_PrevDashboard_Tab_id,const CATUnicodeString & i_NewDashboard_Tab_id) = 0;
  int Dispatch(CATSYPEvent * i_pEvent);

private:
// Copy constructor and equal operator
// -----------------------------------
CATAfrDashboardProxyBase (CATAfrDashboardProxyBase &);
CATAfrDashboardProxyBase& operator=(CATAfrDashboardProxyBase&);
CATUnicodeString       _currentDashboard;
CATUnicodeString       _tabSelected;
CATUnicodeString       _dashboardUrl;
  /** the support to manage events*/
CATSYPEventHandlersSupport * _pSupport;
    /**
  * The factory of events for widgets.
  *
  * It will be instantiated  the first time it is needed.
  *
  * @see #GetEventFactory
  */
  static CATSYPEventFactory *     _pEventFactory;
};

//-----------------------------------------------------------------------

#endif

