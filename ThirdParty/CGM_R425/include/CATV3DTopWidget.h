//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2012/05/15
//===================================================================
//  2012/05/15 Creation: Code generated by jov
//===================================================================
#ifndef CATV3DTopWidget_H
#define CATV3DTopWidget_H
#include <VisuImmersive3D.h>
#include <CATV3DLayPresenter.h>
#include <CATMathInline.h>
#include <CATV3DPickMode.h>
class CATVidTriggerArea;
class CATViewpoint;
class CATV3DLay3DConstraints;

/**
 * This class defines a special widget that can be layouted directly in a viewer.
 *
 * @par Role
 * A V3D top widget is always the higher widget of its widgets hierarchy.
 * A V3D widgets hierarchy always has a top widget. A V3D top widget is layouted
 * in a viewer through its interface methods #SetViewpoint and #SetLay3DConstraints.
 *
 * @par Usage
 * Any instanciable widget derives from CATV3DTopWidget. Though not any widget
 * has access to the top widget interface, only the one who is truly on top of its
 * widgets hierarchy (its parent widget is NULL).
 * The reason is that an intanciable widget can be used as is (e.g. #CATV3DCtlHandle)
 * or be part of a complex widget (e.g #CATV3DCtlRobot).
 * Any methods that is accessed through a widget that is not the top widget of its 
 * hierarchy will assert.
 *
 * @ingroup V3DCore
 */
class ExportedByVisuImmersive3D CATV3DTopWidget : public CATV3DLayPresenter
{
  CATDeclareClass;
public:
  /** Constructor*/
  CATV3DTopWidget();

  /** Sets the viewpoint to associate the top widget to. */
  void SetViewpoint(CATViewpoint* i_pViewpoint);
  /** @return the viewpoint associated to the top widget. */
  CATViewpoint* GetViewpoint() const;

  /**
   * Sets the constraints of this top widget in its associated viewer.
   * Note that this will assert when called on a widget that is not the main top widget.
   */
  void SetLay3DConstraints(const CATV3DLay3DConstraints& i_constraints);
  /** @return the constraints of this top widget in its associated viewer. */
  CATV3DLay3DConstraints GetLay3DConstraints() const;

  /**
   * Sets a flag to embed the V3D widget in the same viewpoint than the main visu scene.
   */
  void SetImmersiveInVisuSceneFlag(int i_immersiveInVisuSceneFlag);
  /** @return the flag that allow to embed the V3D widget in the same viewpoint than the main visu scene. */
  int GetImmersiveInVisuSceneFlag() const;

  /**
   * Set the flag corresponding to the visibility in NoShow space
   * @param iVisibleInNoShowFlag  0 if not displayed in NoShow space, 1 otherwise
   * Default value is 0
   */
  void SetVisibleInNoShowFlag(int iVisibleInNoShowFlag);

  /**
   * TO REMOVE
   */
  void SetTriggerArea(CATVidTriggerArea* ipTriggerArea);
  /** @return TO REMOVE */
  CATVidTriggerArea* GetTriggerArea();

  /**
   * Set the pick mode on the letter
   * @param iPickMode  the pick mode enum
   * Default value is Undefined
   */
  void SetPickMode(CATV3DPickMode::PickMode iPickMode);
  /** @return the letter's pick mode */
  CATV3DPickMode::PickMode& GetPickMode();

protected:
  /** Destructor*/
  virtual ~CATV3DTopWidget ();
  /** Constructor */
  CATV3DTopWidget (CreateV3DLetterFunc i_pCreateLetterFunc);
private:
  CATV3DTopWidget (CATV3DTopWidget &);
  CATV3DTopWidget& operator=(CATV3DTopWidget&);
};

#endif
