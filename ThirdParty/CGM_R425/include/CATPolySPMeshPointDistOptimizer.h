// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATPolySPMeshPointDistOptimizer.h
// Header definition of CATPolySPMeshPointDistOptimizer
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2006  Creation: Code generated by the CAA wizard  RZT
//===================================================================
#ifndef CATPolySPMeshPointDistOptimizer_H
#define CATPolySPMeshPointDistOptimizer_H

#include "CATPolySpatialPartitions.h"

#include "CATMathBox.h"
#include "CATMathPoint.h"
#include "CATListOfInt.h"
#include "CATListPV.h"

class CATPolySPOctreePartition;
class CATIPolyMesh;
class CATPolySPOctreeNode;

//-----------------------------------------------------------------------

class ExportedByCATPolySpatialPartitions CATPolySPMeshPointDistOptimizer
{

public:

  // Standard constructors and destructors
  // -------------------------------------
  CATPolySPMeshPointDistOptimizer(CATIPolyMesh& iPolyMesh, CATMathBox &iBox, int iRefinementLevel);
  
  CATPolySPMeshPointDistOptimizer(CATPolySPOctreePartition* pPartition);
  
  virtual ~CATPolySPMeshPointDistOptimizer ();


  // =========================================
  // Get triangles into a cube of limited size
  // =========================================
  void DoCubeProcess(CATMathPoint& iStartingPoint, double iMaximumDistance, CATListOfInt& oInsideTriangles);


private:

	void GiveTrianglesFromMacroVoxel(CATPolySPOctreeNode *iMacroVoxel, CATListOfInt& oInsideTriangles);

	// Give the box of a child from father one
	static void GiveChildBox(double iFatherBox[3][2], int iChildIdx, double oChildBox[3][2]);

	// Fields
	CATPolySPOctreePartition * _pPartition;

	double _VoxelSize;

	int _MaximumDepth;

	CATMathBox _IntersectingBox;
  CATMathBox _CurrentBox;

};

//-----------------------------------------------------------------------

#endif
