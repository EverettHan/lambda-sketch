// COPYRIGHT Dassault Systemes 2005
//===================================================================
//
// CATICkeKnowledgeEnoviaLinkListener.h
// Define the CATICkeKnowledgeEnoviaLinkListener interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Jun 2005  Creation: Code generated by the CAA wizard  sgq
//===================================================================
#ifndef CATICkeKnowledgeEnoviaLinkListener_H
#define CATICkeKnowledgeEnoviaLinkListener_H

#include "KnowledgeItf.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByKnowledgeItf IID IID_CATICkeKnowledgeEnoviaLinkListener;
#else
extern "C" const IID IID_CATICkeKnowledgeEnoviaLinkListener ;
#endif

class CATIProxyObject_var;
class CATICkeLinkableAtom_var;

//------------------------------------------------------------------

/**
* Interface used for monitoring @href CATICkeKnowledgeEnoviaLink .
*
* @href CATICkeKnowledgeEnoviaLink, CATICkeKnowledgeEnoviaLinkFactory.
*/
class ExportedByKnowledgeItf CATICkeKnowledgeEnoviaLinkListener: public CATBaseUnknown
{
	CATDeclareInterface;

public:

	virtual void TargetIsLoaded (CATIProxyObject_var& spProxy, CATICkeLinkableAtom_var& spRealPointed) = 0;

	virtual void Reroute () = 0;

	virtual void TargetIsUnloaded (CATIProxyObject_var& spProxy, CATICkeLinkableAtom_var& spRealPointed) = 0;

	// No constructors or destructors on this pure virtual base class
	// --------------------------------------------------------------
};

//------------------------------------------------------------------
CATDeclareHandler(CATICkeKnowledgeEnoviaLinkListener, CATBaseUnknown);

#endif
