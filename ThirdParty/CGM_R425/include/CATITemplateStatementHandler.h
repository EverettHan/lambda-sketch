// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATITemplateStatementHandler.h
// Define the CATITemplateStatementHandler interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  May 2007  Creation: Code generated by the CAA wizard  HSU
//===================================================================
#ifndef CATITemplateStatementHandler_H
#define CATITemplateStatementHandler_H
/**
* @level Private
* @usage U3 CATStatementHandlerAdapter
*/
#include "CATPLMQLCPPParser.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMQLCPPParser IID IID_CATITemplateStatementHandler;
#else
extern "C" const IID IID_CATITemplateStatementHandler ;
#endif
//

class CATUnicodeString;
class CATPLMTypeId;
class CATPLMID;
class CATPLMCEStamp;

//------------------------------------------------------------------

/*
CATITemplateStatementHandler Uses this enum for differentiating different types of values.
*/
enum CATPLMQLTemplateParamType
{ 
  CATPLMQLTemplateParamType_ATTR,     /* for normal Attributes */
  CATPLMQLTemplateParamType_PLMID,    /* for PLMID             */
  CATPLMQLTemplateParamType_TESTUUID, /* for UUID              */
  CATPLMQLTemplateParamType_CESTAMP,  /* for CEStamp           */
  CATPLMQLTemplateParamType_INVALID   /* Invalid               */
};

//------------------------------------------------------------------

/**
* Interface representing CATITemplateStatementHandler.
*
* <br><b>Role</b>:  PLMQL component Internally uses this interface while executing PLMQL template statement.
* This Interface method lets the PLMQL component to take right attribute values at runtime.
* <p>
* The user who want to use PLMQL Template statement feature , need to implement this  Interface .
* This Interface has only one api GetValueFor.
*

*
* @href CATITemplatePLMQLbnfStatement 
*/
class ExportedByCATPLMQLCPPParser CATITemplateStatementHandler: public CATBaseUnknown
{
	CATDeclareInterface;

public:

	/**
	* <dl>
	* <dt><b>GetValueFor:</b>
	* <pre>
	*       
	*   GetValueFor returns appropriate  attributevalue  as out argment in oValue.
	*   @param iPlaceHolderType[In]
	*      a reference to CATPLMQLTemplateParamType enum value i.e. Attribute type.
	*   @param iPlaceHolderIndex[In]
	*      Attribute Place Holder Index in CATPLMQLTemplateParamType atrribute.
	*   @param oValue[out]
	*	  CATUnicodeString is the appropriate type for the oValue parameter (only for type: ATTR & UUID).
	*   @return
	*      Error code of function.
	*     <dt>S_OK</dt>
	*     <dd>Statement is successfully executed .</dd>
	*     <dt>E_FAIL </dt>
	*     <dd>A problem occurs during the Statement .</dd>
	* 
	* 
	* </pre>
	* </dl>
	*/
	virtual HRESULT GetValueFor(CATPLMQLTemplateParamType & iPlaceHolderType, int & iPlaceHolderIndex, CATUnicodeString & oValue) = 0 ;
	
	/**
	* <dl>
	* <dt><b>GetPLMIdFor:</b>
	* <pre>
	*       
	*   GetPLMIdFor returns appropriate PLMId value as output argment in oValue.
	*   @param iPlaceHolderIndex[In]
	*      PLMId Place Holder Index.
	*   @param iPLMTypeId[In]
	*      CATPLMTypeId atrribute which gives the PLMId type.
	*   @param oValue[out]
	*	     CATPLMID is the appropriate type for the oValue parameter.
	*   @return
	*      Error code of function.
	*     <dt>S_OK</dt>
	*     <dd>PLMId value is successfully returned.</dd>
	*     <dt>E_FAIL </dt>
	*     <dd>A problem occured.</dd>
	* 
	* 
	* </pre>
	* </dl>
	*/
	virtual HRESULT GetPLMIdFor(int & iPlaceHolderIndex, CATPLMTypeId & iPLMTypeId, CATPLMID & oValue) = 0 ;

	/**
	* <dl>
	* <dt><b>GetCEStampFor:</b>
	* <pre>
	*       
	*   GetCEStampFor returns appropriate CEStamp value as output argment in oValue.
	*   @param iPlaceHolderIndex[In]
	*      CEStamp Place Holder Index.
	*   @param oValue[out]
	*	     CATPLMCEStamp is the appropriate type for the oValue parameter.
	*   @return
	*      Error code of function.
	*     <dt>S_OK</dt>
	*     <dd>PLMId value is successfully returned.</dd>
	*     <dt>E_FAIL </dt>
	*     <dd>A problem occured.</dd>
	* 
	* 
	* </pre>
	* </dl>
	*/
	virtual HRESULT GetCEStampFor(int & iPlaceHolderIndex, CATPLMCEStamp & oValue) = 0 ;

};

//------------------------------------------------------------------

#endif
