/* -*-c++-*- */
#ifndef _CATPLMID_Builder_H
#define _CATPLMID_Builder_H
/* -*-c++-*- */
/**
 * @level Private
 * @usage U1       
 */

#include "IUnknown.h"
#include "CATPLMIdentificationAccess.h"

class CATPLMRepositoryName;
class CATPLMTypeId;
class CATPLMID;

/**
* Factory to generate PLMIDs.
* There are two types of PLMIDs:
* - Complete PLMIDs, which are PLMIDs for components that have already been persisted in database. Those PLMIDs are said to be
*   valid for usage.
* - Incomplete PLMIDs, which are PLMIDs for components that have not been persisted yet in database, i.e. new components. Those
*   PLMIDs are said NOT to be valid for usage.
* This factory only allows generation of incomplete PLMIDs, for new components. For other use cases, please contact PBV or QJT.
*/
class ExportedByCATPLMIdentificationAccess CATPLMID_Builder
{
public:

  /**
  * This is the only legitimate access point to create an incomplete PLMID (for a new component).
  * Generating complete PLMIDs (for non-new components) is NOT LEGITIMATE.
  * The PLMID is generated with identifiers based on CATUuid. 
  * By default : Physical, Major & Logical identifiers are equal at création.
  *
  * @param iRepositoryName : the repository name for the current session. Must be not NULL.
  * @param iTypeId : the TypeId of the component. Must be not NULL.
  * @param oGeneratedPLMID : the PLMID generated by the factory
  *
  * @result : S_OK if PLMID was generated successfully
  *           E_INVALIDARG if oGeneratedPLMID was not null or if any input parameter was null.
  */
  static HRESULT GenerateIncompletePLMID(const CATPLMRepositoryName & iRepositoryName, 
                                         const CATPLMTypeId         & iTypeId,
                                         CATPLMID                   & oGeneratedPLMID);

  /**
  * This is the only legitimate access point to create an incomplete PLMID (for a new component).
  * Generating complete PLMIDs (for non-new components) is NOT LEGITIMATE.
  * By default : Physical, Major & Logical identifiers are equal at création.
  *
  * @param iSimilarPLMID : An other similar PLMID. Must be not NULL.
  * @param oGeneratedPLMID : the PLMID generated by the factory
  *
  * @result : S_OK if PLMID was generated successfully
  *           E_INVALIDARG if oGeneratedPLMID was not null or if any input parameter was null.
  */
  static HRESULT GenerateIncompletePLMID(const CATPLMID & iSimilarPLMID, 
                                         CATPLMID       & oGeneratedPLMID);
};

#endif
