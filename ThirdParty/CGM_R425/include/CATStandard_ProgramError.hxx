// File generated by CPPExt (Exception)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
#ifndef _CATStandard_ProgramError_HeaderFile
#define _CATStandard_ProgramError_HeaderFile


#include "CATStandard_Error.h"

#if !defined No_Exception && !defined No_CATStandard_ProgramError
#define CATStandard_ProgramError_Raise_if(CONDITION,MESSAGE) \
  if (CONDITION) CATStandard_ProgramError::Raise(MESSAGE);
#else
#define CATStandard_ProgramError_Raise_if(CONDITION,MESSAGE)
#endif

#include "SysCascade.h"

class CATStandard_ProgramError : public CATStandard_Error {
/*
public:
 ExportedBySysCascade  static void Raise(const CATStandard_CString aMessage = "");
 ExportedBySysCascade  static void Raise(CATStandard_SStream& aReason);
#ifndef NO_CXX_EXCEPTION
 ExportedBySysCascade  virtual void Throw() const ;
#endif

 ExportedBySysCascade  ~CATStandard_ProgramError();

 // Type methods
 //
 ExportedBySysCascade  friend Handle_CATStandard_Type& CATStandard_ProgramError_Type_();
 ExportedBySysCascade  const Handle(CATStandard_Type)& DynamicType() const;			
 ExportedBySysCascade  CATStandard_Boolean             IsKind(const Handle(CATStandard_Type)&) const;
 */
};

#endif
