// COPYRIGHT Dassault Systemes 2003
//===================================================================
//
// CATPLMNotification.h
// Header definition of CATPLMNotification
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Aug 2003  Creation: Code generated by the CAA wizard  jvm
//===================================================================
/**
* @level Private
* @usage U1
*/
#ifndef CATPLMNotification_H
#define CATPLMNotification_H

#include "CATPLMServicesItf.h"
#include "CATNotification.h"
#include "CATLISTV_CATPLMID.h"

class CATIPLMProviderConnection;
class CATUnicodeString;
class CATPLMRepositoryName;


// JSY: Just for drop3 & VPMNav
//#define CATPLMNotificationFlag 1

//-----------------------------------------------------------------------

/** Notification Operation */
enum CATPLMNotifOperation {
  /** The provider is connected*/
  CATPLMNotification_Connect = 0,
  /** The provider is disconnected*/
  CATPLMNotification_Disconnect = 1,

  /** Deprecated */
  Connect = 8,
  /** Deprecated */
  Disconnect = 9

};


/**
 * CATPLMNotifications are the Notifications sent by modifications on the 
 * Immersive Data Model.
 */
class ExportedByCATPLMServicesItf CATPLMNotification: public CATNotification
{
 
public:
	
	// Standard constructors and destructors
	// -------------------------------------
  /**
	* Constructs a CATPLMNotification.
	* @param iProvider
	*   Specifies From which Provider the notification comes.
	* @param iOperation
	*   Specifies which operation has been done.
  */
  CATPLMNotification (CATIPLMProviderConnection * iProvider, CATPLMNotifOperation iOperation);
	
  virtual ~CATPLMNotification ();
	
	/**
	* Returns the provider repository name the notification comes from.
	*/
	HRESULT GetRepositoryName(CATPLMRepositoryName * oType);

  /**
	* Returns the provider instance id the notification comes from.
	*/
	HRESULT GetInstanceId(CATUnicodeString ** oInstanceId);

	/**
	* Returns the operation.
	*/
	HRESULT GetOperation(CATPLMNotifOperation * oOperation);

private:
	// Copy constructor and equal operator
	// -----------------------------------
	CATPLMNotification (CATPLMNotification &);
	CATPLMNotification& operator=(CATPLMNotification&);
	CATIPLMProviderConnection * _pProvider;
	CATPLMNotifOperation operation;
};

//-----------------------------------------------------------------------

#endif

