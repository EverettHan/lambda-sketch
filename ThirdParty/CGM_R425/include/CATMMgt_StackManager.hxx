// File generated by CPPExt (Value)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.

#ifndef _CATMMgt_StackManager_HeaderFile
#define _CATMMgt_StackManager_HeaderFile

#ifndef _CATStandard_Integer_HeaderFile
#include "CATStandard_Integer.hxx"
#endif
#ifndef _CATStandard_Address_HeaderFile
#include "CATStandard_Address.hxx"
#endif
#ifndef _CATStandard_OStream_HeaderFile
#include "CATStandard_OStream.hxx"
#endif
class CATStandard_OutOfMemory;
class CATStandard_ProgramError;


#ifndef _CATStandard_Macro_HeaderFile
#include "CATStandard_Macro.hxx"
#endif

#include "SysCascade.h"

class CATMMgt_StackManager  {

public:

 // Methods PUBLIC
 // 
ExportedBySysCascade  CATMMgt_StackManager();
ExportedBySysCascade    CATStandard_Address Allocate(const CATStandard_Integer size) ;
ExportedBySysCascade    void Free(CATStandard_Address& aStack,const CATStandard_Integer aSize) ;
ExportedBySysCascade    CATMMgt_StackManager ShallowCopy() const;
ExportedBySysCascade    void ShallowDump(CATStandard_OStream& S) const;
ExportedBySysCascade    void Destructor() ;
~CATMMgt_StackManager()
{
  Destructor();
}






protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 
ExportedBySysCascade    void Purge() ;


 // Fields PRIVATE
 //
CATStandard_Integer myFreeListSize;
CATStandard_Address myFreeList;


};





// other inline functions and methods (like "C++: function call" methods)
//
inline CATMMgt_StackManager ShallowCopy(const CATMMgt_StackManager& me) {
 return me.ShallowCopy();
}

inline void ShallowDump(const CATMMgt_StackManager& me,CATStandard_OStream& S) {
 me.ShallowDump(S);
}



#endif
