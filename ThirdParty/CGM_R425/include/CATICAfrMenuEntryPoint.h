//===================================================================
// COPYRIGHT Microsoft 2012/10/21
//===================================================================
// CATICAfrMenuEntryPoint.cpp
// Header definition of class CATICAfrMenuEntryPoint
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/10/21 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef CATICAfrMenuEntryPoint_H
#define CATICAfrMenuEntryPoint_H

#include "CATAfrItf.h"
#include "CATBaseUnknown.h"

class CATICAfrComponentElement;
class CATICAfrComponent;

extern ExportedByCATAfrItf  IID IID_CATICAfrMenuEntryPoint ;

/**
* Interface that allow to get an entry point on the menu you want to populate.
* <br><b>Role</b>: Provides an entry point to monitor elements of this menu.
* Each implementation has to derive from a late type that corresponds to the name of the xml file located in
* the hiearchy of accesses:
* For example, an access "MENU_A" exposes a menu, its hiearchy relative to Workbench/Workshop father is:
* <pre>
*  FATHER_MENU_A (whichi is not a type workbench or workshop)
*  -->MENU_A
*     -->ITEM1_MENU_A
*  -->MENU_B
*  ...
*    
* </pre>
* In your CNEXT directory (runtimeView), you should create an xml File in the ApplicationFrame folder with the path
* "FATHER_MENU_A/MENU_A/ &lt;YourXMLFile> ".<br>
* <b> Note:</b> Please, assure you that &lt;YourXMLFile> is unique and is not an existing type or class, otherwise, there will be a conflict.
*
* <code>CATImplementClass(**className**, DataExtension,CATBaseUnknown,**YourXMLFile**)</code>
*

*
* <br><b>Note :</b>
* Using a subclass of @href CATCAfrMenuEntryPointAdapter is mandatory when 
* implementing the <tt>CATICAfrMenuEntryPoint</tt> interface.
* <p><b>BOA information</b>: this interface CAN be implemented
* using the BOA (Basic Object Adapter).
*
*/
class ExportedByCATAfrItf CATICAfrMenuEntryPoint: public CATBaseUnknown
{
CATDeclareInterface;

public:

  /**
  *
  * <br><b>Role</b>: Called when the menu has loaded the template for headers .
  * Here you can add additional header
  * 
  * @return
  * <dl>
  * <dt><code>S_OK</code> <dd>
  * <dt><code>E_FAIL</code> <dd>
  * </dl>
  */
  virtual HRESULT OnMenuHeadersLoaded( ) = 0;  
  /**
  *
  * <br><b>Role</b>: Called when the menu has loaded the template for new elements.
  * Here you can add additionnal elements or modify existing elements .
  * @param i_piComponentMenu, the menu that contains your new elements. Do Not Release this pointer.
  * 
  * @return
  * <dl>
  * <dt><code>S_OK</code> <dd>
  * <dt><code>E_FAIL</code> <dd>
  * </dl>
  */
  virtual HRESULT OnMenuCreated(CATICAfrComponent * i_piComponentMenu ) = 0;


  /**
  *
  * <br><b>Role</b>: Called each time the menu is deployed 
  * Here you can add additionnal elements or modify existing elements .
  * @param i_piComponentMenu, the menu that contains your new elements. Do Not Release this pointer.
  * 
  * @return
  * <dl>
  * <dt><code>S_OK</code> <dd>
  * <dt><code>E_FAIL</code> <dd>
  * </dl>
  */
  virtual HRESULT OnMenuDisplayed(CATICAfrComponent * i_piComponentMenu ) = 0;

  /**
  *
  * <br><b>Role</b>: Called each time an element is added in this menu by using these same services. 
  * @param i_piComponentElement, the element that be Added. Do Not Release this pointer.
  * 
  * @return 
  * <dl>
  * <dt><code>S_OK</code> <dd> : you are agree that this item can be added in the menu
  * <dt><code>E_FAIL</code> <dd>: the item will not be added.  
  * </dl>
  */
  virtual HRESULT OnMenuItemAdded(CATICAfrComponentElement * i_piComponentElement ) = 0;

};

//-----------------------------------------------------------------------
CATDeclareHandler( CATICAfrMenuEntryPoint, CATBaseUnknown );

#endif
