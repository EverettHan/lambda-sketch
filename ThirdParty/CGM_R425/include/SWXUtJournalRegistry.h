//===================================================================
// COPYRIGHT DS SolidWorks Corporation 2012/09/18
//===================================================================
// SWXUtJournalRegistry.cpp
// Header definition of class SWXUtJournalRegistry
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/09/18 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXUtJournalRegistry_H
#define SWXUtJournalRegistry_H

#include "CATListOfCATUnicodeString.h"
#include "CATString.h"
#include "CATUnicodeString.h"
#include "SWXIUtJournalPlaybackValidation.h"
#include "SWXIUtJournalPlayer.h"
#include "SWXUtJournal.h"
#include "SWXUtMap.h"
#include "SWXUtVector.h"

class CATCommand;
class CATSysWeakRef;
class CATIDOMElement_var;
class SWXUiIxInteraction;
class SWXUtBaseOperation;
class SWXUtJournalEntry;
class SWXUtJournalFixInfo;
class SWXUtPacket;

//-----------------------------------------------------------------------

class ExportedBySWXUtJournal SWXUtJournalRegistry
{
	public:

		SWXUtJournalRegistry();
		virtual ~SWXUtJournalRegistry();

	public:

		bool ShouldBeJournalled( const CATUnicodeString& iIxFileName );
		bool ShouldBeJournalled( const CATIDOMElement_var& iIxNode );

		int ProcessCommandLineArguments( const CATListOfCATUnicodeString& iCommandLineArguments );
		HRESULT PlayJournal( const CATUnicodeString& iFileName, const CATUnicodeString& iLogFileName, const SWXUtJournalFixInfo& iFixInfo ); 
		void ProcessEndOfJournalPlay();
		void StartRecording( const CATUnicodeString& iFilename );
		void StopRecording();

		HRESULT SaveJournalToFile( const SWXUtVector<SWXUtJournalEntry*>& iJournal, const CATUnicodeString& iFileName );

		void RegisterPacket( const CATString& iName, SWXUtPacket& iPacket );
		void UnRegisterPacket( const CATString& iName );
		void RegisterOperation( SWXUtPacket* iPacket, SWXUtBaseOperation* iOperation, const CATString& iHeaderID, SWXUtOperationContext* iContext );
		void UnRegisterOperation( SWXUtPacket* iPacket, SWXUtBaseOperation* iOperation, const CATString& iHeaderID, SWXUtOperationContext* iContext );
		void RegisterCommand( const CATUnicodeString& iName, CATCommand* iCommand, bool iCommandInitialized );
		void UnRegisterCommand( CATCommand* iCommand );
		void UnRegisterCommand( const CATUnicodeString& iName );

		bool LookupCommandInitState( const CATUnicodeString& iName ) const;
		CATCommand* LookupCommand( const CATUnicodeString& iName );
		SWXUtPacket* LookupPacket( const CATUnicodeString& iName );
		SWXUtBaseOperation* LookupOperation( SWXUtPacket* iPacket );
		SWXIUtJournalPlaybackValidation_var LookupPlaybackValidator( const CATUnicodeString& iName );

		void SetCommandInitState( const CATUnicodeString& iName, bool iState );

		bool NoPerformanceDegrLog() const;
		void SetNoPerformanceDegrLog( bool iFlag );

	private:

		typedef SWXUtMap<CATUnicodeString, CATSysWeakRef*> PACKET_MAP;
		typedef SWXUtMap<CATSysWeakRef*, CATSysWeakRef*> OPERATION_MAP;
		typedef SWXUtMap<CATUnicodeString, CATSysWeakRef*> COMMAND_MAP;
		typedef SWXUtMap<CATUnicodeString, bool> COMMAND_INIT_MAP;
		typedef SWXUtMap<CATUnicodeString, SWXIUtJournalPlaybackValidation_var> COMMAND_VALIDATION_MAP;

	private:

		SWXUtJournalRegistry( SWXUtJournalRegistry& );
		SWXUtJournalRegistry& operator=( SWXUtJournalRegistry& );

	private:

		PACKET_MAP mPacketMap;
		COMMAND_MAP mCommandMap;
		COMMAND_INIT_MAP mCommandInitMap;
		OPERATION_MAP mOperationMap;
		COMMAND_VALIDATION_MAP mCommandValidationMap;

		CATListOfCATUnicodeString mJournalFiles;
		bool mExitOnJournalEnd;

		bool mProcessedCmdLineArguments;

		bool mAttemptedToCreateUiHelper;
		SWXIUtJournalPlayer_var mUiHelper;
		bool mNoPerformanceDegrLog;
};

//-----------------------------------------------------------------------

#endif
