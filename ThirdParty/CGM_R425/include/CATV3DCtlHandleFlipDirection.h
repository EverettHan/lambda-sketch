//===================================================================
// COPYRIGHT Dassault Systeme 2012/09/20
//===================================================================
// CATV3DCtlHandleFlipDirection.h
// Header definition of class CATV3DCtlHandleFlipDirection
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/09/20 Creation: Code generated by the 3DS wizard MF6
//===================================================================

#ifndef CATV3DCtlHandleFlipDirection_H
#define CATV3DCtlHandleFlipDirection_H

#include <VisuImmersive3D.h>
#include <CATV3DCtlHandle.h>

//-----------------------------------------------------------------------------
/**
 * This widget provides a standard styled flip direction manipulator.
 *
 * @par Role
 * A flip direction handle is used to inverse orientation along a direction.
 * Handle orientation is automaticaly inverted along his direction
 * heach time a @c Press event is received.
 * <br>
 *
 * @par Handle Position
 * Orient Handle using axis defined in @c CATV3DLay3D.Constraints
 * @see CATV3DLay3DConstraints#SetAxis
 * @see CATV3DTopWidget#SetLay3DConstraints
 *
 * @par Flip direction
 * The flip direction is always along the first direction of the constraining axis.
 * @see CATV3DLay3DConstraints#SetAxis
 *
 * @par Templates
 * Available template names : Default
 *
 * @par Creation
 * @code
 * CATV3DCtlHandleFlipDirection* pHandle = CATV3DCtlHandleFlipDirection::CreateHandleFlipDirection();
 * @endcode
 * @ingroup V3DControls
 */
class ExportedByVisuImmersive3D CATV3DCtlHandleFlipDirection : public CATV3DCtlHandle
{
  CATDeclareClass;
public:
  /** Constructor*/
  CATV3DCtlHandleFlipDirection ();
  /** Destructor*/
  virtual ~CATV3DCtlHandleFlipDirection ();

  /**
   * Constructs a CATV3DCtlHandleFlipDirection with standard style.
   */
  static CATV3DCtlHandleFlipDirection * CreateHandleFlipDirection(CATViewpoint* i_pViewpoint=NULL);
  /**
   * Constructs multiple CATV3DCtlHandleFlipDirection with standard style and given constraints.
   */
  static void CreateHandlesFlipDirection(CATViewpoint* i_pViewpoint, const CATSYPDynArray<CATV3DLay3DConstraints>& i_lConstraints, CATSYPDynArray<CATV3DCtlHandleFlipDirection*>& oHandles);

  /**
   * Get the @c Flip event.
   *
   * The @c Flip event is dispatched on the HandlePress when receiving
   * a press event.
   *
   * This event is issued from the @ref Press event @ref
   * CATV3DGraphicPrimitive#Press.
   *
   * @par EventProperties
   *   - Name: @c "Flip"
   *   - Type of propagation: @c OriginToRoot
   *   - Type of argument: @ref CATV3DMouseEventArgs
   *
   * @return the event instance. @c AddRef has NOT been called on
   * the returned pointer.
   */
  static CATSYPEvent * Flip();

  /**
   * Flips the direction of the handle toward the first direction of the constraining axis.
   */
  void FlipDirection();

  /**
   * Handle press event of manipulator view. Should be private.
   */
  void HandlePress(CATBaseUnknown * i_pSender, CATV3DMouseEventArgs * i_pArgs);

  /**
   * @copydoc l_CATV3DCtl#TemplateDataUpdated
   *
   * Here are the mandatory "syp:named" objects :
   * @li GPManip [CATV3DGraphicPrimitive]
   */
  void TemplateDataUpdated();

private:
  CATV3DCtlHandleFlipDirection (CATV3DCtlHandleFlipDirection &);
  CATV3DCtlHandleFlipDirection& operator=(CATV3DCtlHandleFlipDirection&);
};

#endif
