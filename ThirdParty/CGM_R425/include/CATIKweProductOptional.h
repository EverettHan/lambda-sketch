// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// CATIKweProductOptional.h
// Define the CATIKweProductOptional interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Jun 2008  Creation: Code generated by the CAA wizard  FRH
//===================================================================
#ifndef CATIKweProductOptional_H
#define CATIKweProductOptional_H

#include "KnowledgeItf.h"
#include "CATBaseUnknown.h"
#include "CATBoolean.h"
#include "CATListOfCATUnicodeString.h"
#include "CATListOfCATString.h"
#include "CATIType.h"
#include "CATIInstance.h"

class CATPathElement;
class CATIPLMComponent_var;
class CATIAdpPLMIdentificator;
class CATOmbLifeCycleRootsBag;
class CATUnicodeString;
class CATListPtrCATIAdpPLMIdentificator;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByKnowledgeItf IID IID_CATIKweProductOptional;
#else
extern "C" const IID IID_CATIKweProductOptional ;
#endif

//------------------------------------------------------------------

/**
* Interface to call optionaly the product if needed (at runtime
* Implemented on CATCkeRuse
*/
class ExportedByKnowledgeItf CATIKweProductOptional: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /**
	* Used by Knowledge expert 
  
     */
	virtual  CATPathElement* GetPathElement(const CATBaseUnknown_var &bu) =0;

	virtual void ChangeLoadingModeInEdit (CATBaseUnknown_var &bu, CATBoolean iForceReopen = FALSE)=0;
	virtual CATBoolean IsaProduct (CATBaseUnknown_var &bu)=0;
	virtual CATBoolean IsInEditMode (CATBaseUnknown_var &bu)=0;

	/** 
	* Used By CATDynTypesModeler
	*/
	virtual HRESULT GetRootProduct(const CATIPLMComponent_var iPLMComp, CATBaseUnknown_var& oRootProduct)=0;
    
    /**
    * Used by CATKwePathVisitor
    **/
    virtual HRESULT GetPortByName(const CATBaseUnknown_var &iRefOrRep,const CATUnicodeString &iName, CATBaseUnknown_var &oPort) = 0;
    virtual CATBaseUnknown_var GetPortPointedObject(const CATBaseUnknown_var &iPort) = 0;


    /**
	 * Used by people who do not want to load the results of queries
	 */
	virtual CATIInstance_var CreatePLMQueryResultFromIDsPath(CATListPtrCATIAdpPLMIdentificator * iID, const CATListOfCATString &iAttrIds, const CATListOfCATUnicodeString &iAttrValues, const CATIType_var &iType, CATOmbLifeCycleRootsBag * iBag) = 0;

	/**
	*
	* <br><b>Creates PLMQueryResult from object</b>:
	* @param iID : [Input] PLM Identificator.
	* @param iAttrIds : [Input] List of attributes.
	* @param ipBag : [Input] Lifecycle Bag.
	*
	* @return : Instance of "CATCkePLMQueryResult".
	*/
	virtual CATIInstance_var CreatePLMQueryResultFromId(CATIAdpPLMIdentificator* iID, const CATListOfCATString& iAttrIds, CATOmbLifeCycleRootsBag* ipBag) = 0;

	//
  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(CATIKweProductOptional, CATBaseUnknown);

//------------------------------------------------------------------

#endif
