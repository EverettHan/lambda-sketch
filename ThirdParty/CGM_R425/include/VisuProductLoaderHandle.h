//===================================================================
// COPYRIGHT Dassault Systemes 2021/02/05
//===================================================================
// VisuProductLoaderHandle.cpp
// Header definition of class VisuProductLoaderHandle
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2021/02/05 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef VisuProductLoaderHandle_H
#define VisuProductLoaderHandle_H

#include "VisuProductLoaderManager.h"
#include "CATSysErrorDef.h"

#include <cstdint>

class CAT4x4Matrix;
class CATUnicodeString;
class VisuProductLoader;
class CAT3DBagRep;


/*!
  * \brief Class to give identify each instance of  a product.
  * In case of Viewpoint filter, you need to have an handle per instance and give the matrix
  *
  * To unregister the instance, you just need to destroy the Handle. When the product has no more instance
  * it is remove from the ProductLoader.
  */
class ExportedByVisuProductLoaderManager VisuProductLoaderHandle
{
  friend class VisuProductLoader;
public:
  /*
  * This object cannot created without the VisuProductLoader
  */
  virtual ~VisuProductLoaderHandle();

  /*!
  * \param iMatrix : correspond to the resolved matrix from the root of the scenegraph.
  * this Matrix will not be set on the instance, it is only useful for the viewpoint filter query
  */
  HRESULT SetMatrix(const CAT4x4Matrix& iMatrix);

  /*!
  * \param oProductID the Product ID corresponding to the handle.
  * \return E_FAIL if the product is not found.
  */
  HRESULT GetProductID(CATUnicodeString& oProductID) const;

  /*!
  * \param oRep the Rep corresponding to the handle.
  * \return E_FAIL if the product is not found.
  */
  HRESULT GetProductRep(CAT3DBagRep*& oRep) const;

  /*!
  * \param oFilterJsonObject the filter corresponding to the handle.
  * \return E_FAIL if the product is not found.
  */
  HRESULT GetFilter(CATUnicodeString& oFilterJsonObject) const;

private:
  VisuProductLoaderHandle(VisuProductLoader* iProductLoader, std::uint32_t iID);
  VisuProductLoaderHandle(const VisuProductLoaderHandle&) = delete;
  VisuProductLoaderHandle& operator=(const VisuProductLoaderHandle&) = delete;

  VisuProductLoader* m_ProductLoader;
  std::uint32_t m_ID;
};

//-----------------------------------------------------------------------

#endif
