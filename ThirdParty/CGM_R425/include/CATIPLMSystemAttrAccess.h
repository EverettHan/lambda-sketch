// COPYRIGHT Dassault Systemes 2005
//===================================================================
//
// CATIPLMSystemAttrAccess.h
// Define the CATIPLMSystemAttrAccess interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Dec 2005  Creation: Code generated by the CAA wizard  jvm
//===================================================================
#ifndef CATIPLMSystemAttrAccess_H
#define CATIPLMSystemAttrAccess_H

#include "CATPLMServicesLimitedAccess.h"
//#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesLimitedAccess IID IID_CATIPLMSystemAttrAccess;
#else
extern "C" const IID IID_CATIPLMSystemAttrAccess ;
#endif


// class CATPLMCEStamp;

/**
 * @level Protected
 * @usage U3
 */

//------------------------------------------------------------------

/**
* Interface managing object System attributes reading. 
*/
class ExportedByCATPLMServicesLimitedAccess CATIPLMSystemAttrAccess: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

   /**
	* Returns the RepoPrivilege value of the Object.
	* @param oRepoPrivilege
	*		the RepoPrivilege
	* @return 
	*		E_FAIL may be returned if the record does not contain information on the RepoPrivilege of the object
	*/
  virtual HRESULT GetRepoPrivilege( int & oRepoPrivilege )const = 0;


   /**
	* Set the RepoPrivilege value of the Object.
	* @param oRepoPrivilege
	*		the RepoPrivilege
	* @return 
	*		E_FAIL may be returned if the Object cannot change the RepoPrivilege of the object
	*/
  virtual HRESULT SetRepoPrivilege( int iRepoPrivilege ) = 0;

   /**
	* Returns the CATPLMCEStamp on the Object.
	* @param oCEStamp
	*		the CATPLMCEStamp
	* @return 
	*		E_FAIL may be returned if the Object is in a state that do not permit to do the operation or if the link is incorrect
	*/
//	virtual HRESULT GetCEStamp( CATPLMCEStamp & oStamp )const = 0;

	/**
	* Sets the CATPLMCEStamp on the Object.
	* @param iCEStamp
	*		the CATPLMCEStamp that is to be set on the RecordWrite
	* @return 
	*		E_FAIL may be returned if the Object is in a state that do not permit to do the operation or if the link is incorrect
	*/
	// virtual HRESULT SetCEStamp( const CATPLMCEStamp & iCEStamp )= 0;
};

//------------------------------------------------------------------

#endif
