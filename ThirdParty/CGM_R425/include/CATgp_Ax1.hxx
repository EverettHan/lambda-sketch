// File generated by CPPExt (Storable)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
#ifndef _CATgp_Ax1_HeaderFile
#define _CATgp_Ax1_HeaderFile

#ifndef _CATgp_Pnt_HeaderFile
#include "CATgp_Pnt.hxx"
#endif
#ifndef _CATgp_Dir_HeaderFile
#include "CATgp_Dir.hxx"
#endif
#ifndef _CATStandard_Storable_HeaderFile
#include "CATStandard_Storable.hxx"
#endif
#ifndef _CATStandard_Boolean_HeaderFile
#include "CATStandard_Boolean.hxx"
#endif
#ifndef _CATStandard_Real_HeaderFile
#include "CATStandard_Real.hxx"
#endif
#ifndef _CATStandard_PrimitiveTypes_HeaderFile
#include "CATStandard_PrimitiveTypes.hxx"
#endif
class CATgp_Pnt;
class CATgp_Dir;
class CATgp_Ax2;
class CATgp_Trsf;
class CATgp_Vec;


#ifndef _CATStandard_Macro_HeaderFile
#include "CATStandard_Macro.hxx"
#endif



Handle_CATStandard_Type& CATgp_Ax1_Type_();

class CATgp_Ax1  {

public:

 // Methods PUBLIC
 // 
//ExportedBySysCascade inline CATgp_Ax1();
 inline CATgp_Ax1(const CATgp_Pnt& P,const CATgp_Dir& V);
/*ExportedBySysCascade inline   void SetDirection(const CATgp_Dir& V) ;
ExportedBySysCascade inline   void SetLocation(const CATgp_Pnt& P) ;
ExportedBySysCascade inline  const CATgp_Dir& Direction() const;
ExportedBySysCascade inline  const CATgp_Pnt& Location() const;
ExportedBySysCascade    CATStandard_Boolean IsCoaxial(const CATgp_Ax1& Other,const CATStandard_Real AngularTolerance,const CATStandard_Real LinearTolerance) const;
ExportedBySysCascade inline   CATStandard_Boolean IsNormal(const CATgp_Ax1& Other,const CATStandard_Real AngularTolerance) const;
ExportedBySysCascade inline   CATStandard_Boolean IsOpposite(const CATgp_Ax1& Other,const CATStandard_Real AngularTolerance) const;
ExportedBySysCascade inline   CATStandard_Boolean IsParallel(const CATgp_Ax1& Other,const CATStandard_Real AngularTolerance) const;
ExportedBySysCascade inline   CATStandard_Real Angle(const CATgp_Ax1& Other) const;
ExportedBySysCascade inline   void Reverse() ;
ExportedBySysCascade inline   CATgp_Ax1 Reversed() const;
ExportedBySysCascade    void Mirror(const CATgp_Pnt& P) ;
ExportedBySysCascade    CATgp_Ax1 Mirrored(const CATgp_Pnt& P) const;
ExportedBySysCascade    void Mirror(const CATgp_Ax1& A1) ;
ExportedBySysCascade    CATgp_Ax1 Mirrored(const CATgp_Ax1& A1) const;
ExportedBySysCascade    void Mirror(const CATgp_Ax2& A2) ;
ExportedBySysCascade    CATgp_Ax1 Mirrored(const CATgp_Ax2& A2) const;
ExportedBySysCascade inline   void Rotate(const CATgp_Ax1& A1,const CATStandard_Real Ang) ;
ExportedBySysCascade inline   CATgp_Ax1 Rotated(const CATgp_Ax1& A1,const CATStandard_Real Ang) const;
ExportedBySysCascade inline   void Scale(const CATgp_Pnt& P,const CATStandard_Real S) ;
ExportedBySysCascade inline   CATgp_Ax1 Scaled(const CATgp_Pnt& P,const CATStandard_Real S) const;
ExportedBySysCascade inline   void Transform(const CATgp_Trsf& T) ;
ExportedBySysCascade inline   CATgp_Ax1 Transformed(const CATgp_Trsf& T) const;
ExportedBySysCascade inline   void Translate(const CATgp_Vec& V) ;
ExportedBySysCascade inline   CATgp_Ax1 Translated(const CATgp_Vec& V) const;
ExportedBySysCascade inline   void Translate(const CATgp_Pnt& P1,const CATgp_Pnt& P2) ;
ExportedBySysCascade inline   CATgp_Ax1 Translated(const CATgp_Pnt& P1,const CATgp_Pnt& P2) const;
    const CATgp_Pnt& _CSFDB_GetCATgp_Ax1loc() const { return loc; }
    const CATgp_Dir& _CSFDB_GetCATgp_Ax1vdir() const { return vdir; }*/




 // Type management
 //
   friend Handle_CATStandard_Type& CATgp_Ax1_Type_();

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
CATgp_Pnt loc;
CATgp_Dir vdir;


};


#include "CATgp_Ax1.lxx"



// other ExportedBySysCascade inline functions and methods (like "C++: function call" methods)
//


#endif
