//===================================================================
// COPYRIGHT Dassault Systeme 2012/09/20
//===================================================================
// CATV3DCtl.h
// Header definition of class CATV3DCtl
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/09/20 Creation: Code generated by the 3DS wizard  jv8
//===================================================================

#ifndef CATV3DCtl_H
#define CATV3DCtl_H

#include <VisuImmersive3D.h>
#include <CATV3DTopWidget.h>
#include <CATUnicodeString.h>

class CATSYPTemplateData;

/**
 * This is the base class for all controls of V3D.
 *
 * @par Role
 * This class implements the interface CATSYPTemplateData, which allow
 * all controls to be define in XML style using introspection mechanisms.
 *
 * @ingroup V3DControls
 */
class ExportedByVisuImmersive3D CATV3DCtl : public CATV3DTopWidget
{
  CATDeclareClass;
public:
  /** Constructor*/
  CATV3DCtl ();
  CATV3DCtl (CreateV3DLetterFunc i_pCreateLetterFunc);
  /** Destructor*/
  virtual ~CATV3DCtl ();

  /**
   * Sets the style informations of a v3d control, that will allow to build the XML styled view of the control.
   * Asserts if the template is not found inside the given style sheet, or if the style sheet is not found.
   */
  void SetStyle(const CATUnicodeString& i_styleSheet, const CATUnicodeString& i_templateName, const CATUnicodeString& i_variationName = "", const CATBoolean& iAnimation = FALSE);

  /**
   * Sets the check state of the V3DCtl
   * @param i_checkState
   * The check state of the V3DCtl to set.
   *   <br>
   *   <b>Legal values</b> : It can be set to either :
   *   <dl>
   *   <dt><tt>FALSE</tt><dd> to put the V3DCtl in uncheck state,
   *   <dt><tt>TRUE</tt><dd> to put the V3DCtl in check state
   *   </dl>
   */
  void SetCheckState( const CATBoolean &i_checkState );
  /**
   * @return the check state of the V3DCtl
   *   <br>
   * The check state of the V3DCtl can be:
   *   <dl>
   *   <dt><tt>FALSE</tt><dd> V3DCtl is unchecked,
   *   <dt><tt>TRUE</tt><dd> V3DCtl is checked.
   *   </dl>
   */
  const CATBoolean &GetCheckState( void ) const;

  /**
   * @depracted
   * Set resize factor to the V3DCtl
   *  <br>
   * The widget size on screen = default size * scaleFactor.
   */
  void SetResizeFactor(const float& iResizeFactor);
  /**
   * @depracted
   * @return the resize factor of the V3DCtl
   *  <br>
   * scaleFactor = The widget size on screen / default size.
   */
  const float& GetResizeFactor() const;

  /**
   * @copydoc CATISYPTemplate#GetTemplateName
   */
  const CATUnicodeString& GetTemplateName() const;
  /**
   * @copydoc CATISYPTemplate#GetVariationName
   */
  const CATUnicodeString& GetVariationName() const;
  /**
   * @copydoc CATISYPTemplate#GetTemplateData
   */
  CATSYPTemplateData * GetTemplateData() const;
  /** 
   * @copydoc CATVidCtl#TryRetrieveSypNamedObject
   */
  CATBaseUnknown* TryRetrieveSypNamedObject(const CATUnicodeString& i_sypName);
  /** 
   * @copydoc CATVidCtl#RetrieveSypNamedObject
   */
  CATBaseUnknown* RetrieveSypNamedObject(const CATUnicodeString& i_sypName);

protected:
  /**
   * @copydoc CATISYPTemplate#SetTemplatedView
   */
  void SetTemplatedView(CATBaseUnknown_var& i_spView, CATSYPTemplateData * i_pTemplateData);
  /**
   * @copydoc CATISYPTemplate#SetTemplateName
   */
  void SetTemplateName(const CATUnicodeString& i_templateName);
  /**
   * @copydoc CATISYPTemplate#SetVariationName
   */
  void SetVariationName(const CATUnicodeString& i_variationName);

  /**
   * This function is called once the template data have been collected from the style processor.
   * You can derive it, and use it to access objects in our xml style template by their @c syp:name
   * @see RetrieveSypNamedObject, TryRetrieveSypNamedObject
   */
  virtual void TemplateDataUpdated();

  /** 
   * Used to avoid behavior (ex: animations) in ODT Mode
   */
  static CATBoolean IsODT();

private:
  /**
   * Resize the V3DCtl
   *  <br>
   * The widget size on screen = default size * scaleFactor.
   */
  void Resize(const float& scaleFactor);

private:
  CATV3DCtl (CATV3DCtl &);
  CATV3DCtl& operator=(CATV3DCtl&);

  CATBoolean _CheckState;

  float _ResizeFactor;

private:
  friend class l_CATV3DCtl;
  friend class TIECATISYPTemplateCATV3DCtl;
};

#endif
