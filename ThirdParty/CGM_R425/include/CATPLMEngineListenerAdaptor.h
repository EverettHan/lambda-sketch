// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATPLMEngineListenerAdaptor.h
// Header definition of CATPLMEngineListenerAdaptor
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  May 2004  Creation: Code generated by the CAA wizard  son
//===================================================================
/**
* @level Protected
* @usage U2
*/
#ifndef CATPLMEngineListenerAdaptor_H
#define CATPLMEngineListenerAdaptor_H

#include "CATIPLMEngineListener.h"

class CATIAdpErrorMonitorAbstract;

//-----------------------------------------------------------------------

/**
 * This class is the adaptor corresponding to the  CATIPLMEngineListener interface.
 * <br>This adaptor is supplied only for a better flexibility of CATIPLMEngineListener; CATPLMEngineListenerAdaptor's methods are not really implemented.
 */
class ExportedByCATPLMIntegrationInterfaces CATPLMEngineListenerAdaptor: public CATIPLMEngineListener
{
  public:

  // Standard constructors and destructors
    // -------------------------------------
    CATPLMEngineListenerAdaptor ();
    virtual ~CATPLMEngineListenerAdaptor ();
    
    
    
    
    //===================   Methods concerning process progression   =====================
    
    /**
    * @see CATPLMIntegrationInterfaces.CATIPLMEngineListener#Inform_ProcessSteps
    */
    HRESULT Inform_ProcessSteps (const CATListOfCATUnicodeString & iStepNames, CATBoolean & oCancelProcess) ;
    
    /**
    * @see CATPLMIntegrationInterfaces.CATIPLMEngineListener#Inform_NextStep
    */
    HRESULT Inform_NextStep (int iNsubparts, CATBoolean & oCancelProcess);
    
    
    /**
    * @see CATPLMIntegrationInterfaces.CATIPLMEngineListener#Inform_ProgressInStep
    */
    HRESULT Inform_ProgressInStep (int iProgressValue, CATBoolean & oCancelProcess);
    
    
    /**
    * @see CATPLMIntegrationInterfaces.CATIPLMEngineListener#Inform_ElementsToProcess
    */
    HRESULT Inform_ElementsToProcess (const CATIPLMListConsultation * iGlobalListAsSoFar,
      CATBoolean iDefinitiveGlobalList,
      CATBoolean & oCancelProcess);

    /**
    * @see CATPLMIntegrationInterfaces.CATIPLMEngineListener#Inform_QuantitativeView
    */
    HRESULT Inform_QuantitativeView (int iNAttr,
      int iNSemanticalRelation,
      int iNStreams,
      int iNtotalStreamSize) ;


    /**
    * @see CATPLMIntegrationInterfaces.CATIPLMEngineListener#Inform_Incident
    */
    HRESULT Inform_Incident (const CATListPtrCATIPLMErrorCell & iErrList,
      const CATUnicodeString iDefaultAlternative);

    /**
    * @see CATPLMIntegrationInterfaces.CATIPLMEngineListener#Inform_Incidents
    */
	HRESULT Inform_Incidents (const CATIAdpErrorMonitorAbstract * ipErrorMonitor,
	  const CATUnicodeString iDefaultAlternative);

    /**
    * @see CATPLMIntegrationInterfaces.CATIPLMEngineListener#AskForConfirmation_Freezing
    */
    HRESULT AskForConfirmation_Freezing(CATBoolean & oAccept);

    /**
    * @see CATPLMIntegrationInterfaces.CATIPLMEngineListener#Inform_TheEnd
    */
    HRESULT Inform_TheEnd();
    
};

//-----------------------------------------------------------------------

#endif
