// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATIPLMConfigFilterable.h
// Define the CATIPLMConfigFilterable interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  May 2007  Creation: Code generated by the CAA wizard  PTV
//===================================================================
/**
  * @level Protected
  * @usage U1
*/
#ifndef CATIPLMConfigFilterable_H
#define CATIPLMConfigFilterable_H

#include "CATPLMComponentInterfaces.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMComponentInterfaces IID IID_CATIPLMConfigFilterable;
#else
extern "C" const IID IID_CATIPLMConfigFilterable ;
#endif

class CATICfgEffectivity;
class CATICfgOperationInput;
class CATUnicodeString;
//------------------------------------------------------------------

/**
* Interface used to handle Configuration Effectivity on a PLM Entity.
*
* It is used to manage Configuration links between PLM Entities 
* and Config Effectivity/Objects.
* The Effectivity object is manipulated through 
* @href CATICfgEffectivity. <br>
* The methods of this Interface can be used successfully only if Config Information is loaded in session.
*
*/
class ExportedByCATPLMComponentInterfaces CATIPLMConfigFilterable: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

	  /** 
	  * Tells if an effectivity is already defined on this Entity.
	  *
	  * <br><b>Role</b>: Even if Configuration data is not loaded in session, 
	  * this method tells if an Effectivity has already been defined on this Entity.
	  *
	  * @return
	  *      A CATBoolean value. 
	  *     <br><b>Legal values</b>:
	  *     <dl>
	  *     <dt><tt>TRUE</tt></dt>
	  *       <dd>An effectivity is already defined on this Entity.</dd>
	  *     <dt><tt>FALSE</tt></dt>
	  *       <dd>No effectivity is defined on this Entity.</dd>
	  *     </dl>
	  *
	  */
	  virtual CATBoolean HasEffectivity() = 0;

	  /** 
	  * Gets the Effectivity defined for this Entity.
	  *
	  * <b>Role:</b> 
	  * If an Effectivity has been assigned to this Entity, gets a pointer
	  * on this Effectivity through the @href CATICfgEffectivity interface.
	  *
	  * @param opiEff [out, CATBaseUnknown#Release]
	  *   The Effectivity defined on this Entity.
	  *	  NULL if no Effectivity has been set.
	  *
	  * @return
	  *      An HRESULT value. 
	  *     <br><b>Legal values</b>:
	  *     <dl>
	  *     <dt><tt>S_OK</tt></dt>
	  *       <dd>The effectivity has been successfully retrieved.</dd>
	  *     <dt><tt>E_INVALIDARG</tt></dt>
	  *       <dd>If <tt>opiEff</tt> is not NULL at beginning of method.</dd>
	  *     <dt><tt>E_FAIL</tt></dt>
	  *       <dd>Otherwise.</dd>
	  *     </dl>
	  *     @error CATInternalError BridgeERR001
      *      Configuration Effectivity object is not loaded, impossible to access configuration information.
	  *
	  */
	  virtual HRESULT GetEffectivity(CATICfgEffectivity* & opiEff) = 0;

	  /** 
	  * Sets an Effectivity on this Entity.
	  *
	  * <b>Role:</b> 
	  * Creates and Sets an Effectivity on this Entity. 
	  * The Operation Input for the Effectivity <tt>in_operationInput</tt> must belong to the VariabilitySpace defined on the owner if this Entity.
	  * If no VariabilitySpace is defined on owner, this method will add it automatically.
	  * If an Effectivity is already defined on this Entity, the operation fails.
      * 
	  * @param in_stName [in]
	  *   The name of the Effectivity to be defined on this Entity.
      * @param in_stDescription [in]
	  *   The description of the Effectivity.
      * @param in_operationInput [in]
	  *   The definition of the Effectivity.
      *
	  * @return
	  *      An HRESULT value. 
	  *     <br><b>Legal values</b>:
	  *     <dl>
	  *     <dt><tt>S_OK</tt></dt>
	  *       <dd>The effectivity has been successfully set.</dd>
	  *     <dt><tt>E_ACCESSDENIED</tt></dt>
	  *       <dd>This filterable Entity is not VPLMControlled. Forbidden to create an Effectivity. </dd>
	  *     <dt><tt>E_FAIL</tt></dt>
	  *       <dd>An effectivity already exists on this filterable Entity or Operation failed.</dd>
	  *     </dl>	  
	  */
	  virtual HRESULT CreateEffectivity( CATUnicodeString        const & in_stName,
                                         CATUnicodeString        const & in_stDescription,
                                         CATICfgOperationInput   const & in_operationInput ) = 0;

	  /** 
	  * Removes the Effectivity defined on this Entity.
	  *
	  * <b>Role:</b> 
	  * Removes the Effectivity, if it exists.
	  *
	  * @return
	  *      An HRESULT value. 
	  *     <br><b>Legal values</b>:
	  *     <dl>
	  *     <dt><tt>S_OK</tt></dt>
	  *       <dd>The Effectivity defined on this Entity has been successfully removed.</dd>
	  *     <dt><tt>E_ACCESSDENIED</tt></dt>
	  *       <dd>This filterable Entity is not VPLMControlled: forbidden to remove Effectivity in this case.</dd>      
	  *     <dt><tt>E_FAIL</tt></dt>
	  *       <dd>No Effectivity has been defined on this Entity.</dd>
	  *     </dl>
	  *
	  */
	  virtual HRESULT RemoveEffectivity() = 0;
};

//------------------------------------------------------------------
CATDeclareHandler(CATIPLMConfigFilterable, CATBaseUnknown );

#endif
