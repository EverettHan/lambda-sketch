// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// CATIPLM3DPositionMng.h
// Define the CATIPLM3DPositionMng interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Sep 2009  Creation: Code generated by the CAA wizard  CHK
//===================================================================
#ifndef CATIPLM3DPositionMng_H
#define CATIPLM3DPositionMng_H

/**
  * @CAA2Level L1
  * @CAA2Usage U3
  */


#include "CATPLMModeler3DInterfaces.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMModeler3DInterfaces IID IID_CATIPLM3DPositionMng;
#else
extern "C" const IID IID_CATIPLM3DPositionMng ;
#endif

/**
* Singleton class Implementation.
* ::CATInstantiateComponent(CATIPLM3DPositionMng_Component,IID_CATIPLM3DPositionMng,(void **)&pPLM3DPositionMng)
*/
#define CATIPLM3DPositionMng_Component "PLM3DPositionMng"

class CATOmbObjectInContext;
class CATMathTransformation;

//------------------------------------------------------------------

/**
* Interface providing services related to 3D positioning for 3D PLM modelers.
*
* @example
*  CATIPLM3DPositionMng *pPLM3DPositionMng = NULL;
*  if (SUCCEEDED(::CATInstantiateComponent(CATIPLM3DPositionMng_Component,IID_CATIPLM3DPositionMng,(void **)&pPLM3DPositionMng))&&pPLM3DPositionMng)
*  {
*    ...
*  }
*  CATSysReleasePtr(pPLM3DPositionMng);
*/
class ExportedByCATPLMModeler3DInterfaces CATIPLM3DPositionMng: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

	  /**
	  * Method to compute the cumulated position of an object of a 3D modeler.
	  * Uses the path context of the input <tt>iObjInCtx</tt>, also taking into account any position overloadings.
	  *
	  *  @param  iObjInCtx
	  *      Pointing Object containing a Path of Instance from which absolute position has to be retrieved.
	  *      Input Parameter. <br>
	  *      This path must not be provided by caller as empty!
	  *      This path must be valid in terms of isaninstanceof/isownedby/isaninstanceof/isownedby/... relationships between its items.
	  *  @param  oPos
	  *      The absolute cumulated position of the 3D object returned. <br>
	  *      Output parameter. <br>
	  *      This parameter is correctly valuated if method succeeds. Otherwise its value (Identity) is nonsense.
	  *  @return
	  *      <code>S_OK</code> if the method succeeds. <br>
	  *      <code>E_INVALIDARG</code> if <tt>iObjInCtx</tt> parameter provided is invalid. <br>
	  *      <code>E_FAIL</code> otherwise. <br>
	  */
	  virtual HRESULT RetrievePosition (const CATOmbObjectInContext* iObjInCtx, CATMathTransformation & oPos)=0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};
CATDeclareHandler(CATIPLM3DPositionMng,CATBaseUnknown);
//------------------------------------------------------------------

#endif
