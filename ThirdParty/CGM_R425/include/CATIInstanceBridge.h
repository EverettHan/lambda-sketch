// COPYRIGHT Dassault Systemes 2002
//===================================================================
//
// CATIInstanceBridge.h
// Define the CATIInstanceBridge interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Apr 2002  Creation: Code generated by the CAA wizard  FRH
//===================================================================
#ifndef CATIInstanceBridge_H
#define CATIInstanceBridge_H

#include "KnowledgeItf.h"
#include "CATBaseUnknown.h"

class CATIInstance_var;

extern ExportedByKnowledgeItf IID IID_CATIInstanceBridge ;

//------------------------------------------------------------------

/**
 * In most cases, you won't have to use this interface.
 * When we modify a parameter that belongs to an instance, we want
 * to send the AttributeChanged event on the instance.
 * Either, the instance is the spec father of the parameter and we 
 * direclty use CATIInstance to propagate the event.
 * But if there is a hidden feature between the parameter and the instance,
 * we need to be able to find quickly this instance.
 * By implementing CATIInstanceBridge on this hidden feature that contains
 * the parameter, the parameter is able to find the instance on which it needs
 * to propagate the event.
 *
 * TO IMPLEMENT THIS INTERFACE, YOU MUST INHERIT FROM CATInstanceBridgeAdapter
 */
class ExportedByKnowledgeItf CATIInstanceBridge: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /**
     * This method returns the related instance
     * <dl>
     * <dt><b>Example:</b>
     * <pre>
     * </pre>
     * </dl>
     */
     virtual CATIInstance_var FindRelatedInstance () const = 0;
};

//------------------------------------------------------------------
CATDeclareHandler(CATIInstanceBridge,CATBaseUnknown);

#endif
