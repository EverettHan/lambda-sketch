//=============================================================================
// COPYRIGHT DASSAULT SYSTEMES 2011/06/07
//=============================================================================
// CATSYPStaticIntrospectableProvider.h
// Header definition of class CATSYPStaticIntrospectableProvider
//=============================================================================
//  2011/06/07 Creation: Code generated by the 3DS wizard LD5
//=============================================================================

#ifndef CATSYPStaticIntrospectableProvider_H
#define CATSYPStaticIntrospectableProvider_H

#include <CATISYPIntrospectableProvider.h>
#include <CATISYPIntrospectable.h>

class CATSYPDataBlock;
//-----------------------------------------------------------------------------
/**
 * Container that provides an introspectable object of any kind.
 */
class ExportedByIntroInfra CATSYPStaticIntrospectableProvider : public CATISYPIntrospectableProvider
{
CATDeclareClass;

public:
  /**
   * Default constructor.
   */
  CATSYPStaticIntrospectableProvider(CATISYPIntrospectable_var i_spiIntrospectable);
  /**
   * @return The introspectable object stored in the provider.
   */
  virtual CATISYPIntrospectable_var GetIntrospectable();

	/**
	* instantiate a datablock owning all VID tooltip properties :
	*	-Title
	*	-ShortHelp
	*	-LongHelp
	*	-Image
	* -PixelImage
	*	-ShortHelpImage
	* -ShortHelpPixelImage
	*	-LongHelpImage
	*	-LongHelpPixelImage
	*	-ImageDimension
	*	-ShortHelpImageDimension
	*	-LongHelpImageDimension
	*	-BottomMessage
	*	-HyperlinkLabel
	*	-WrapThreshold
	*	-WrapToleranceMargin
 * -AutoPopDelay
 * -InitialDelay
 * -DeactivateDelay
 * -ReshowDelay
 * -ShortToLongDelay
	* @return CATBaseUnknown#Release
	* The returned datablock owning all VID tooltip properties.
	*/
	static CATSYPDataBlock * InstantiateDataBlockWithAllVIDTooltipProperties();

protected:
  /**
   * Destructor.
   */
  virtual ~CATSYPStaticIntrospectableProvider();

private:
  /**
   * Copy constructor.
   *
   * @param the provider to copy.
   */
  CATSYPStaticIntrospectableProvider(const CATSYPStaticIntrospectableProvider &);
  /**
   * Assignement operator.
   *
   * @param the provider to assign.
   */
  CATSYPStaticIntrospectableProvider & operator= (const CATSYPStaticIntrospectableProvider &);

private:
  /**
   * The introspectable object hold by the provider.
   */
  CATISYPIntrospectable_var _spiIntrospectable;
};

//-----------------------------------------------------------------------------

#endif

