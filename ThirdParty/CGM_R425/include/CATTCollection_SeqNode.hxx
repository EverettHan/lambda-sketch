// File generated by CPPExt (Transient)
//
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
#ifndef _CATTCollection_SeqNode_HeaderFile
#define _CATTCollection_SeqNode_HeaderFile

#ifndef _Handle_CATTCollection_SeqNode_HeaderFile
#include "Handle_CATTCollection_SeqNode.hxx"
#endif

#ifndef _CATTCollection_SeqNodePtr_HeaderFile
#include "CATTCollection_SeqNodePtr.hxx"
#endif
#ifndef _CATMMgt_TShared_HeaderFile
#include "CATMMgt_TShared.hxx"
#endif


#include "SysCascade.h"

class ExportedBySysCascade CATTCollection_SeqNode : public CATMMgt_TShared {

public:

 // Methods PUBLIC
 // 
inline CATTCollection_SeqNode(const CATTCollection_SeqNodePtr& n,const CATTCollection_SeqNodePtr& p);
inline   CATTCollection_SeqNodePtr& Next() const;
inline   CATTCollection_SeqNodePtr& Previous() const;
~CATTCollection_SeqNode();


 // Type management
 //
 friend ExportedBySysCascade Handle_CATStandard_Type& CATTCollection_SeqNode_Type_();
// ExportedBySysCascade  const Handle(CATStandard_Type)& DynamicType() const;
 CATStandard_Boolean	       IsKind(const Handle(CATStandard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
CATTCollection_SeqNodePtr myNext;
CATTCollection_SeqNodePtr myPrevious;


};


#include "CATTCollection_SeqNode.lxx"



// other inline functions and methods (like "C++: function call" methods)
//


#endif
