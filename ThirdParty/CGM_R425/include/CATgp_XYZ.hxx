// File generated by CPPExt (Storable)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
#ifndef _CATgp_XYZ_HeaderFile
#define _CATgp_XYZ_HeaderFile

#ifndef _CATStandard_Real_HeaderFile
#include "CATStandard_Real.hxx"
#endif
#ifndef _CATStandard_Storable_HeaderFile
#include "CATStandard_Storable.hxx"
#endif
#ifndef _CATStandard_Integer_HeaderFile
#include "CATStandard_Integer.hxx"
#endif
#ifndef _CATStandard_Boolean_HeaderFile
#include "CATStandard_Boolean.hxx"
#endif
#ifndef _CATStandard_PrimitiveTypes_HeaderFile
#include "CATStandard_PrimitiveTypes.hxx"
#endif
class CATStandard_ConstructionError;
class CATStandard_OutOfRange;
//class CATgp_Mat;


#ifndef _CATStandard_Macro_HeaderFile
#include "CATStandard_Macro.hxx"
#endif

#include "SysCascade.h"

ExportedBySysCascade  Handle_CATStandard_Type& CATgp_XYZ_Type_();

class CATgp_XYZ  {

public:

 // Methods PUBLIC
 // 
ExportedBySysCascade inline CATgp_XYZ();
ExportedBySysCascade inline CATgp_XYZ(const CATStandard_Real X,const CATStandard_Real Y,const CATStandard_Real Z);
ExportedBySysCascade inline   void SetCoord(const CATStandard_Real X,const CATStandard_Real Y,const CATStandard_Real Z) ;
ExportedBySysCascade inline   void SetCoord(const CATStandard_Integer Index,const CATStandard_Real Xi) ;
ExportedBySysCascade inline   void SetX(const CATStandard_Real X) ;
ExportedBySysCascade inline   void SetY(const CATStandard_Real Y) ;
ExportedBySysCascade inline   void SetZ(const CATStandard_Real Z) ;
ExportedBySysCascade inline   CATStandard_Real Coord(const CATStandard_Integer Index) const;
ExportedBySysCascade inline   void Coord(CATStandard_Real& X,CATStandard_Real& Y,CATStandard_Real& Z) const;
ExportedBySysCascade inline   CATStandard_Real X() const;
ExportedBySysCascade inline   CATStandard_Real Y() const;
ExportedBySysCascade inline   CATStandard_Real Z() const;
ExportedBySysCascade inline   CATStandard_Real Modulus() const;
ExportedBySysCascade inline   CATStandard_Real SquareModulus() const;
ExportedBySysCascade    CATStandard_Boolean IsEqual(const CATgp_XYZ& Other,const CATStandard_Real Tolerance) const;
ExportedBySysCascade inline   void Add(const CATgp_XYZ& Other) ;
ExportedBySysCascade inline   void operator +=(const CATgp_XYZ& Other) 
{
  Add(Other);
}

ExportedBySysCascade inline   CATgp_XYZ Added(const CATgp_XYZ& Other) const;
ExportedBySysCascade inline   CATgp_XYZ operator +(const CATgp_XYZ& Other) const
{
  return Added(Other);
}

ExportedBySysCascade inline   void Cross(const CATgp_XYZ& Right) ;
ExportedBySysCascade inline   void operator ^=(const CATgp_XYZ& Right) 
{
  Cross(Right);
}

ExportedBySysCascade inline   CATgp_XYZ Crossed(const CATgp_XYZ& Right) const;
ExportedBySysCascade inline   CATgp_XYZ operator ^(const CATgp_XYZ& Right) const
{
  return Crossed(Right);
}

ExportedBySysCascade inline   CATStandard_Real CrossMagnitude(const CATgp_XYZ& Right) const;
ExportedBySysCascade inline   CATStandard_Real CrossSquareMagnitude(const CATgp_XYZ& Right) const;
ExportedBySysCascade inline   void CrossCross(const CATgp_XYZ& Coord1,const CATgp_XYZ& Coord2) ;
ExportedBySysCascade inline   CATgp_XYZ CrossCrossed(const CATgp_XYZ& Coord1,const CATgp_XYZ& Coord2) const;
ExportedBySysCascade inline   void Divide(const CATStandard_Real Scalar) ;
ExportedBySysCascade inline   void operator /=(const CATStandard_Real Scalar) 
{
  Divide(Scalar);
}

ExportedBySysCascade inline   CATgp_XYZ Divided(const CATStandard_Real Scalar) const;
ExportedBySysCascade inline   CATgp_XYZ operator /(const CATStandard_Real Scalar) const
{
  return Divided(Scalar);
}

ExportedBySysCascade inline   CATStandard_Real Dot(const CATgp_XYZ& Other) const;
ExportedBySysCascade inline   CATStandard_Real operator *(const CATgp_XYZ& Other) const
{
  return Dot(Other);
}

ExportedBySysCascade inline   CATStandard_Real DotCross(const CATgp_XYZ& Coord1,const CATgp_XYZ& Coord2) const;
ExportedBySysCascade inline   void Multiply(const CATStandard_Real Scalar) ;
ExportedBySysCascade inline   void operator *=(const CATStandard_Real Scalar) 
{
  Multiply(Scalar);
}

ExportedBySysCascade inline   void Multiply(const CATgp_XYZ& Other) ;
ExportedBySysCascade inline   void operator *=(const CATgp_XYZ& Other) 
{
  Multiply(Other);
}
/*
ExportedBySysCascade inline   void Multiply(const CATgp_Mat& Matrix) ;
ExportedBySysCascade inline   void operator *=(const CATgp_Mat& Matrix) 
{
  Multiply(Matrix);
}
*/
ExportedBySysCascade inline   CATgp_XYZ Multiplied(const CATStandard_Real Scalar) const;
ExportedBySysCascade inline   CATgp_XYZ operator *(const CATStandard_Real Scalar) const
{
  return Multiplied(Scalar);
}

ExportedBySysCascade inline   CATgp_XYZ Multiplied(const CATgp_XYZ& Other) const;
/*ExportedBySysCascade inline   CATgp_XYZ Multiplied(const CATgp_Mat& Matrix) const;
ExportedBySysCascade inline   CATgp_XYZ operator *(const CATgp_Mat& Matrix) const
{
  return Multiplied(Matrix);
}
*/
ExportedBySysCascade inline   void Normalize() ;
ExportedBySysCascade inline   CATgp_XYZ Normalized() const;
ExportedBySysCascade inline   void Reverse() ;
ExportedBySysCascade inline   CATgp_XYZ Reversed() const;
ExportedBySysCascade inline   void Subtract(const CATgp_XYZ& Right) ;
ExportedBySysCascade inline   void operator -=(const CATgp_XYZ& Right) 
{
  Subtract(Right);
}

ExportedBySysCascade inline   CATgp_XYZ Subtracted(const CATgp_XYZ& Right) const;
ExportedBySysCascade inline   CATgp_XYZ operator -(const CATgp_XYZ& Right) const
{
  return Subtracted(Right);
}

ExportedBySysCascade inline   void SetLinearForm(const CATStandard_Real A1,const CATgp_XYZ& XYZ1,const CATStandard_Real A2,const CATgp_XYZ& XYZ2,const CATStandard_Real A3,const CATgp_XYZ& XYZ3,const CATgp_XYZ& XYZ4) ;
ExportedBySysCascade inline   void SetLinearForm(const CATStandard_Real A1,const CATgp_XYZ& XYZ1,const CATStandard_Real A2,const CATgp_XYZ& XYZ2,const CATStandard_Real A3,const CATgp_XYZ& XYZ3) ;
ExportedBySysCascade inline   void SetLinearForm(const CATStandard_Real A1,const CATgp_XYZ& XYZ1,const CATStandard_Real A2,const CATgp_XYZ& XYZ2,const CATgp_XYZ& XYZ3) ;
ExportedBySysCascade inline   void SetLinearForm(const CATStandard_Real A1,const CATgp_XYZ& XYZ1,const CATStandard_Real A2,const CATgp_XYZ& XYZ2) ;
ExportedBySysCascade inline   void SetLinearForm(const CATStandard_Real A1,const CATgp_XYZ& XYZ1,const CATgp_XYZ& XYZ2) ;
ExportedBySysCascade inline   void SetLinearForm(const CATgp_XYZ& XYZ1,const CATgp_XYZ& XYZ2) ;
    CATStandard_Real _CSFDB_GetCATgp_XYZx() const { return x; }
    void _CSFDB_SetCATgp_XYZx(const CATStandard_Real p) { x = p; }
    CATStandard_Real _CSFDB_GetCATgp_XYZy() const { return y; }
    void _CSFDB_SetCATgp_XYZy(const CATStandard_Real p) { y = p; }
    CATStandard_Real _CSFDB_GetCATgp_XYZz() const { return z; }
    void _CSFDB_SetCATgp_XYZz(const CATStandard_Real p) { z = p; }




 // Type management
 //
 ExportedBySysCascade  friend Handle_CATStandard_Type& CATgp_XYZ_Type_();

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
CATStandard_Real x;
CATStandard_Real y;
CATStandard_Real z;


};


#include "CATgp_XYZ.lxx"



// other ExportedBySysCascade inline functions and methods (like "C++: function call" methods)
//


#endif
