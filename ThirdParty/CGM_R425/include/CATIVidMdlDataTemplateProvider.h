//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2011/10/11
//===================================================================
// CATIVidMdlDataTemplateProvider.h
// Header definition of class CATIVidMdlDataTemplateProvider
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2011/10/11 Creation: Code generated by the 3DS wizard  VV6
//===================================================================
#ifndef CATIVidMdlDataTemplateProvider_H
#define CATIVidMdlDataTemplateProvider_H

#include <VisuDialog.h>
#include <CATBaseUnknown.h>

class CATUnicodeString;
class CATVidMdlIndex;
class CATVidCtlAbstractItemsView;

extern ExportedByVisuDialog IID IID_CATIVidMdlDataTemplateProvider ;

/**
 * CATIVidMdlDataTemplateProvider is the interface to implement to be able to choose
 * a particular data template depending on the type of object on which it will be applied
 * or the particular state in which it is.
 *
 * This interface is mostly used by the item / view components like the listview
 * for example. This lets the user to specify how its data item displayed by the
 * listview are drawn on screen.
 *
 * Basically, the user specify the view of its data items using a DataTemplate
 * defined with the SYPStyle syntax (like any other templates).
 *
 */
class ExportedByVisuDialog CATIVidMdlDataTemplateProvider : public CATBaseUnknown
{
CATDeclareInterface;

public:

  /**
   * Performs the selection of the data template to use to build the view of
   * the given item using the type of the object and its current state.
   *
   * @param i_spItem the data item to which a view must be built.
   *
   * @param i_state the state in which the item is (for example selected, unselected, ...)
   *
   * @param o_styleSheet the found stylesheet in which the data template must be looked for
   *
   * @param o_dataTemplate the found data template to use to build the view of the item.
   *
   * @return 1 if a data template has been found, 0 otherwise.
   */
  virtual int SelectDataTemplate(const CATVidMdlIndex & i_index, const CATBaseUnknown_var & i_spItem, const CATVidCtlAbstractItemsView * i_view, CATUnicodeString & o_styleSheet, CATUnicodeString & o_dataTemplate) = 0;
};

CATDeclareHandler( CATIVidMdlDataTemplateProvider, CATBaseUnknown );

#endif
