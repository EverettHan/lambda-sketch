// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATIDynamicalType.h
// Define the CATIDynamicalType interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Oct 2004  Creation: Code generated by the CAA wizard  TVQ
//===================================================================
/**
 * @level Protected
 * @usage U3
 */

#ifndef CATIDynamicalType_H
#define CATIDynamicalType_H

#include "CATInteractiveInterfaces.h"
#include "CATUnicodeString.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATInteractiveInterfaces IID IID_CATIDynamicalType;
#else
extern "C" const IID IID_CATIDynamicalType ;
#endif

//------------------------------------------------------------------

/**
 * Interface dedicated to assign and  retrieve the type stored in CATGScript of a templates instance (especially User Defined Feature)
 * 
 */
class ExportedByCATInteractiveInterfaces CATIDynamicalType: public CATBaseUnknown
{
  CATDeclareInterface;

  public:
  
  /**
   * Set the type for the standard input instance
   * @param iType
   *   Name of the type
   */
  virtual HRESULT SetType(const CATUnicodeString &iType) = 0;

    /**
   * Get the type for the standard input instance
   * @param oType
   *   Name of the type
   */
  virtual HRESULT GetType(CATUnicodeString &oType) = 0;

  /**
   * Set the type for the meta input instance
   * @param iType
   *   Name of the type
   */
  virtual HRESULT SetType2(const CATUnicodeString &iType) = 0;


  /**
   * Get the type for the meta input instance
   * @param oType
   *   Name of the type
   */
  virtual HRESULT GetType2(CATUnicodeString &oType) = 0;


  /**
   * Generate the CATGScript file containing the type definition
   * @param iType
   *   Name of the type
   * @param iSuperType
   *   Name of the supertype
   * @param iMode
   *   0 standard input mode
   *   1 meta input mode
   * @param oError
   *   message if error occurs
*/
  virtual HRESULT GenerateTypeDefinitionFile(const CATUnicodeString &iType, const CATUnicodeString &iSuperType, int iMode, CATUnicodeString &oErrorMsg) = 0;
   
  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};
CATDeclareHandler(CATIDynamicalType, CATBaseUnknown);

//------------------------------------------------------------------

#endif
