//===================================================================
// COPYRIGHT Dassault Systemes 2017/12/06
//===================================================================
// IVISUINavigationBehaviour.cpp
// Header definition of class IVISUINavigationBehaviour
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2017/12/06 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef IVISUINavigationBehaviour_H
#define IVISUINavigationBehaviour_H

#include "IVInterfaces.h"
#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"

extern ExportedByIVInterfaces  IID IID_IVISUINavigationBehaviour ;


class ExportedByIVInterfaces IVISUINavigationBehaviour: public CATBaseUnknown
{
  CATDeclareInterface;

public:

  /**
  * Dynamically sets the navigation mode, which must be an existing navigation mode - i.e. one which has been entered in the scenario configuration, see any configuration XML files for examples.
  *
  * @param [in] iNavigationMode
  *   The name of the navigation mode to choose - e.g. "Fly", "Walk", "Teleport"...
  *
  * @return
  *   An HRESULT value : S_OK if the navigation mode exists and has been set, else E_FAIL.
  */
  virtual HRESULT SetCurrentNavigationMode(const CATUnicodeString& iNavigationMode) = 0;

  /**
  * Returns the current navigation mode name, e.g. "Fly", "Walk", "Teleport"...
  *
  * @return
  *   The current navigation mode name.
  */
  virtual CATUnicodeString GetCurrentNavigationModeName() = 0;

  /**
  * Dynamically sets the speed of one or several navigation transforms and/or one or several navigation modes.
  *
  * @param [in] iSpeed
  *   The speed value.
  * @param [in] iNavigationModeName
  *   The navigation mode which speed to update. If left empty, the chosen navigation transform (see parameter below) in every navigation mode will have its speed updated.
  * @param [in] iNavigationTransformName
  *   The navigation transform name which speed to update. If left empty, every transform of the chosen navigation mode (see parameter above) will have its speed updated. 
  *   If both parameters are left empty, every transform of every mode will have its speed updated.
  */
  virtual void SetSpeed(const double& iSpeed, const CATUnicodeString& iNavigationModeName = "", const CATUnicodeString& iNavigationTransformName = "") = 0;

};

//-----------------------------------------------------------------------
CATDeclareHandler( IVISUINavigationBehaviour, CATBaseUnknown );

#endif
