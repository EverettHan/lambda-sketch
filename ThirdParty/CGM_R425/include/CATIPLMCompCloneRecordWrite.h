// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATIPLMCompCloneRecordWrite.h
// Define the CATIPLMCompCloneRecordWrite interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//  Sep 2006  Creation: Code generated by the CAA wizard  jvm
//===================================================================

/**
* @level Protected
* @usage U3
*/

#ifndef CATIPLMCompCloneRecordWrite_H
#define CATIPLMCompCloneRecordWrite_H

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"
#include "CATPLMCEStamp.h"
#include "CATPLMNLVPropertiesWrite.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMCompCloneRecordWrite;
#else
extern "C" const IID IID_CATIPLMCompCloneRecordWrite;
#endif

class CATPLMID;
class CATPLMTypeId;
class CATIPLMAttrWrite;
class CATString;
class CATPLMType;

/**
* Interface belonging to the <b>Component services</b>.
* Using this level of abstraction you manipulate only Componet Id without knowing the PDM it belongs to.<br>
*
* Provides methods in order to New Version current object.
* This operation can be done under the control of a transaction of the PDM(s).
*/
class ExportedByCATPLMServicesItf CATIPLMCompCloneRecordWrite : public CATBaseUnknown
{
  CATDeclareInterface;

public:

  /**
  * Returns the CATPlmId of this Record (of the current object).
  * @param  oId
  *    The PLMId of the object to modify
  * @return
  *    Error code of function :
  *   <dl>
  *     <dt>S_OK</dt><dd>operation is successfully.</dd>
  *     <dt>E_FAIL </dt><dd>A problem occurs during the operation.</dd>
  *   </dl>
  */
  virtual HRESULT GetPLMId(CATPLMID & oId) = 0;

  /**
  * Clone the object already identified.
  *
  * @return
  *    Error code of function :
  *   <dl>
  *     <dt>S_OK</dt><dd>operation is successfully.</dd>
  *     <dt>E_FAIL </dt><dd>A problem occurs during the operation.</dd>
  *   </dl>
  */
  virtual HRESULT CloneObject() = 0;

  /**
  * Log an attributes update. This method computes a CATIPLMAttrWrite interface for the dedicated object.
  * The return interface will be used by the system to update attributes.
  *
  * @param  oAttrAccess [out, CATBaseUnknown#Release]
  *    interface managing attributes setting
  * @param  iExtensionType
  *    Applicative extension type
  *    if NULL (Default) -> Attributes belong to the Master Bloc (MBSI)
  *    if Valued -> Attributes belong to the Slave Bloc (SBSI) corresponding to iExtensionType
  * @return
  *   <dl>
  *     <dt>S_OK</dt><dd>operation is successfully.</dd>
  *     <dt>E_FAIL</dt><dd>A problem occurs during the operation.</dd>
  *   </dl>
  */
  virtual HRESULT GetAttributeAccess(CATIPLMAttrWrite ** oAttrAccess, const CATPLMTypeId *iExtensionType = NULL) = 0;

  /**
  * Log an attributes update. This method computes a CATIPLMAttrWrite interface for the dedicated object.
  * The return interface will be used by the system to update attributes.
  *
  * @param  oAttrAccess [out, CATBaseUnknown#Release]
  *    interface managing attributes setting
  * @param  iExtensionType
  *    Applicative extension type
  *    if NULL (Default) -> Attributes belong to the Master Bloc (MBSI)
  *    if Valued -> Attributes belong to the Slave Bloc (SBSI) corresponding to iExtensionType
  * @return
  *   <dl>
  *     <dt>S_OK</dt><dd>operation is successfully.</dd>
  *     <dt>E_FAIL</dt><dd>A problem occurs during the operation.</dd>
  *   </dl>
  */
  virtual HRESULT GetAttributeAccess(const CATString * iExtensionType, CATIPLMAttrWrite ** oAttrAccess) = 0;

  /**
  * Log an attributes update. This method computes a CATIPLMAttrWrite interface for the dedicated object.
  * The return interface will be used by the system to update attributes.
  *
  * @param  opAttrAccess [out, CATBaseUnknown#Release]
  *    interface managing attributes setting
  * @param  ipExtensionType
  *    Applicative extension type
  *    if NULL (Default) -> Attributes belong to the Master Bloc (MBSI)
  *    if Valued -> Attributes belong to the Slave Bloc (SBSI) corresponding to ipExtensionType
  * @return
  *   <dl>
  *     <dt>S_OK</dt><dd>operation is successfully.</dd>
  *     <dt>E_FAIL</dt><dd>A problem occurs during the operation.</dd>
  *   </dl>
  */
  virtual HRESULT GetAttributeAccess(CATPLMType* ipExtensionType, CATIPLMAttrWrite*& opAttrAccess) = 0;

  /**
  * Logs the request to keep the family ID.
  *
  * @return
  *   <dl>
  *     <dt>S_OK</dt><dd>operation is successfully.</dd>
  *     <dt>E_FAIL </dt><dd>A problem occurs during the operation.</dd>
  *   </dl>
  */
  virtual HRESULT KeepFamily() = 0;

  virtual HRESULT GetCEStamp(CATPLMCEStamp& oCEStamp) const = 0;

  virtual CATPLMCEStamp GetCEStamp() const = 0;

  virtual HRESULT GetProperties(CATPLMNLVPropertiesWrite & oProperties) = 0;

  virtual CATPLMOrderedOSetOfTypeH GetListExtension() const = 0;

  virtual HRESULT SetProperties(const CATPLMNLVPropertiesWrite & iProperties) = 0;
};

#endif
