//===================================================================
// COPYRIGHT Dassault Systemes 2020/10/16
//===================================================================
// CATOmbSdsOperation.cpp
// Header definition of class CATOmbSdsOperation
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2020/10/16 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATOmbSdsOperation_H
#define CATOmbSdsOperation_H

#include "CATOmbSelectiveLoading.h"
#include "CATOmbStreamDescriptorQualifiers.h"
#include "IUnknown.h"
#include "CATOmxOHMap.h"
#include "CATOmxArray.h"

//-----------------------------------------------------------------------

struct CATOmbStreamDescriptorQualifiers;
class CATUnicodeString;
class CATVVSUrl;
class CATOmbLoadableDataUniqueKey;
class CATPLMSDProperties;

class ExportedByCATOmbSelectiveLoading CATOmbSdsOperation
{
public:
  // Standard constructors and destructors
  // -------------------------------------

  virtual ~CATOmbSdsOperation();

  /**
  * Create a list of CATOmbStreamDescriptorQualifiers from a VStreamDesc string (for ex : SDv2(2,'',cgr,'{MD5}d31e9dd0f63d31983eae5a67b0ebf891','{MD5}b5aaf328c86cac18f11592b17357d4d8','cgr','Part2'))
  * @param oQualifiersList [out]
  *   The output StreamDescriptor CATOmbStreamDescriptorQualifiers list
  * @param iVStreamDescStr [in]
  *   The Input VStreamDescriptor
  * @param iUrlList [in]
  *   The Input CATOmbLoadableDataUniqueKey, CATVVSUrl Hash map to set the Urls
  * @param iDelimiter [in]
  *   The demimiter (by default ;)

  * @return
  * S_OK if all attributes were successfully recovered (including CATVVSUrl) E_FAIL otherwise
  */
  static
    HRESULT CreateFromVStreamDesc(
      CATOmxArray<CATOmbStreamDescriptorQualifiers>& oQualifiersList
      , const CATUnicodeString& iVStreamDescStr
      , const CATOmxOHMap<CATOmbLoadableDataUniqueKey, CATVVSUrl>& iUrlList = CATOmxOHMap<CATOmbLoadableDataUniqueKey, CATVVSUrl>()
      , const CATUnicodeString& iDelimiter = ":"
    );
  /**
  * Create a list of CATOmbStreamDescriptorQualifiers from a VStreamDesc string (for ex : SDv2(2,'',cgr,'{MD5}d31e9dd0f63d31983eae5a67b0ebf891','{MD5}b5aaf328c86cac18f11592b17357d4d8','cgr','Part2'))
  * @param oQualifiersList [out]
  *   The output StreamDescriptor CATOmbStreamDescriptorQualifiers list
  * @param iVStreamDescStr [in]
  *   The Input VStreamDescriptor
  * @param iUrlList [in]
  *   The Input CATOmbLoadableDataUniqueKey, CATVVSUrl Hash map to set the Urls
  * @param iDelimiter [in]
  *   The demimiter (by default ;)

  * @return
  * S_OK if all attributes were successfully recovered (including CATVVSUrl) E_FAIL otherwise
  */
  static
    HRESULT CreateFromVStreamDesc(
      CATOmxOHMap<CATOmbLoadableDataUniqueKey, CATOmbStreamDescriptorQualifiers>& oQualifiersList
      , const CATUnicodeString& iVStreamDescStr
      , const CATOmxOHMap<CATOmbLoadableDataUniqueKey, CATVVSUrl>& iUrlList = CATOmxOHMap<CATOmbLoadableDataUniqueKey, CATVVSUrl>()
      , const CATUnicodeString& iDelimiter = ":"
    );
  /**
  * Create a VStreamDesc string from  list of a CATOmbStreamDescriptorQualifiers (for ex : SDv2(2,'',cgr,'{MD5}d31e9dd0f63d31983eae5a67b0ebf891','{MD5}b5aaf328c86cac18f11592b17357d4d8','cgr','Part2'))
  * @param oQualifiersList [on]
  *   The Input StreamDescriptor CATOmbStreamDescriptorQualifiers list
  * @param iVStreamDescStr [out]
  *   The out VStreamDescriptor
  * @param iUrlList [in]
  *   The Input CATOmbLoadableDataUniqueKey, CATVVSUrl Hash map to set the Urls (TO BE USED AFTER TO CREATE SANDURL STRINGS => WKN3)
  * @param iDelimiter [in]
  *   The demimiter (by default ;)

  * @return
  * S_OK if all attributes were successfully unmarshalled E_FAIL otherwise
  */
  static
    HRESULT ExportToVStreamDesc(
      const CATOmxArray<CATOmbStreamDescriptorQualifiers>& iQualifiersList
      , CATUnicodeString& oVStreamDescStr
      , const CATOmxOHMap<CATOmbLoadableDataUniqueKey, CATVVSUrl>& iUrlList = CATOmxOHMap<CATOmbLoadableDataUniqueKey, CATVVSUrl>()
      , const CATUnicodeString& iDelimiter = ":"
    );
  /**
  * Returns all Sd attributes
  * @param iSd [in]
  *   The Input StreamDescriptor
  * @return
  * S_OK if all attributes were successfully recovered (including CATVVSUrl) E_FAIL otherwise
  */
  static
    HRESULT GetSDAttribues(const CATPLMSDProperties& iSd, CATUnicodeString& oRole
      , CATUnicodeString& oLateType, CATUnicodeString& oFormat
      , CATUnicodeString& oPersistencyType
      , CATUnicodeString& oPersistencyName, CATUnicodeString& oWSCUS
      , CATUnicodeString& oSSCUS, CATVVSUrl& oURL
    );

  /**
  * Returns all Sd attributes
  * @param iSd [in]
  *   The Input StreamDescriptor
  * @return
  * S_OK if all attributes were successfully recovered E_FAIL otherwise
  */

  static
    HRESULT GetSDAttribues(const CATPLMSDProperties& iSd, CATUnicodeString& oRole
      , CATUnicodeString& oLateType, CATUnicodeString& oFormat
      , CATUnicodeString& oPersistencyType
      , CATUnicodeString& oPersistencyName, CATUnicodeString& oWSCUS
      , CATUnicodeString& oSSCUS
    );
  /**
  * Returns all Sd attributes
  * @param iSd [in]
  *   The Input StreamDescriptor
  * @return
  * S_OK if all attributes were successfully recovered E_FAIL otherwise
  */

  static
    HRESULT GetSDAttribues(const CATPLMSDProperties& iSd, CATUnicodeString& oRole
      , CATUnicodeString& oLateType, CATOmbStreamDescriptorFormat& oFormat
      , CATUnicodeString& oPersistencyType
      , CATUnicodeString& oPersistencyName, CATUnicodeString& oWSCUS
      , CATUnicodeString& oSSCUS
    );
  /**
  * Returns all Sd attributes
  * @param iSd [in]
  *   The Input StreamDescriptor
  * @return
  * S_OK if all attributes were successfully recovered E_FAIL otherwise
  */

  static
    HRESULT GetSDAttribues(const CATPLMSDProperties& iSd, CATUnicodeString& oRole
      , CATUnicodeString& oLateType, CATOmbStreamDescriptorFormat& oFormat
      , CATUnicodeString& oPersistencyType
      , CATUnicodeString& oPersistencyName
    );
  /**
  * Returns the priority of a StreamDesriptor (1 is highest)
  * @param iSd [in]
  *   The Input StreamDescriptor
  * @return
  *  the priority from 1 to OMB_MAX_CATOmbStreamDescriptorFormat
  * the order is like this :
  *   Authoring => Authoring Extended => Authoring CATIAV5inV6 => AuthoringVisu => AuthoringVisu Extended => ...
  */
  static
    int GetSDPriority(const CATPLMSDProperties& iSd);

private:
  // Copy constructor and equal operator
  // -----------------------------------
  CATOmbSdsOperation();
  CATOmbSdsOperation(CATOmbSdsOperation&);
  CATOmbSdsOperation& operator=(CATOmbSdsOperation&);

};

//-----------------------------------------------------------------------

#endif
