//===================================================================
// COPYRIGHT Dassault Systemes 2014/12/08
//===================================================================
// CATIPLMWspReservationRecordWriteSet.cpp
// Header definition of class CATIPLMWspReservationRecordWriteSet
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2014/12/08 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef CATIPLMWspReservationRecordWriteSet_H
#define CATIPLMWspReservationRecordWriteSet_H

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"
class CATPLMID;
class CATIPLMCompWspReservationRecordWrite;


#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf  IID IID_CATIPLMWspReservationRecordWriteSet ;
#else
extern "C" const IID IID_CATIPLMWspReservationRecordWriteSet ;
#endif


/**
 * CATIPLMRecordWriteSet  manages the list of record (the table of data).
 * The Reserve message can be seen as a set of Record. <br>
 *
 * The <code>Next(..)</code> method is used to move to the next record of the RecordSet, making the next record become the current record.
 * you will change the reservation status in the current record.
 * When you will be finished, you will Save()/Commit() on CATIPLMTransaction.
 */
class ExportedByCATPLMServicesItf CATIPLMWspReservationRecordWriteSet : public CATBaseUnknown
{
CATDeclareInterface;

public:
  /**
  * Creates the next CATIPLMCompWspReservationRecordWrite corresponding to the given CATPlmID.
  * through the CATIPLMCompWspReservationRecordWrite interface, you can change an object reservation status.
  *
  *	@param  iObject
  *			The CATPlmID of the object to modify within the RecordWrite.
  *	@param  opRecordWrite [out, CATBaseUnknown#Release]
  *			The new CATIPLMCompWspReservationRecordWrite object.
  * @return
  *   Error code of function :
  *   <dl>
  *     <dt>S_OK</dt>
  *     <dd>successfully</dd>
  *     <dt>E_FAIL </dt>
  *     <dd>A problem occurs during the operation. get further information by using CATIPLMErrorStack</dd>
  *   </dl>
  */
  virtual HRESULT Next (const CATPLMID & iObject, CATIPLMCompWspReservationRecordWrite *& opRecordWrite) = 0;
};

//-----------------------------------------------------------------------

#endif
