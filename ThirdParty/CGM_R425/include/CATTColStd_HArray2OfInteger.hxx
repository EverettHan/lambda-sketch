// File generated by CPPExt (Transient)
//
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
#ifndef _CATTColStd_HArray2OfInteger_HeaderFile
#define _CATTColStd_HArray2OfInteger_HeaderFile

#ifndef _Handle_CATTColStd_HArray2OfInteger_HeaderFile
#include "Handle_CATTColStd_HArray2OfInteger.hxx"
#endif

#ifndef _CATTColStd_Array2OfInteger_HeaderFile
#include "CATTColStd_Array2OfInteger.hxx"
#endif
#ifndef _CATMMgt_TShared_HeaderFile
#include "CATMMgt_TShared.hxx"
#endif
#ifndef _CATStandard_Integer_HeaderFile
#include "CATStandard_Integer.hxx"
#endif
class CATStandard_RangeError;
class CATStandard_OutOfRange;
class CATStandard_OutOfMemory;
class CATStandard_DimensionMismatch;
class CATTColStd_Array2OfInteger;


#include "SysCascade.h"

class CATTColStd_HArray2OfInteger : public CATMMgt_TShared {

public:

 // Methods PUBLIC
 // 
ExportedBySysCascade  CATTColStd_HArray2OfInteger(const CATStandard_Integer R1,const CATStandard_Integer R2,const CATStandard_Integer C1,const CATStandard_Integer C2);
ExportedBySysCascade  CATTColStd_HArray2OfInteger(const CATStandard_Integer R1,const CATStandard_Integer R2,const CATStandard_Integer C1,const CATStandard_Integer C2,const CATStandard_Integer& V);
ExportedBySysCascade    void Init(const CATStandard_Integer& V) ;
inline   CATStandard_Integer ColLength() const;
inline   CATStandard_Integer RowLength() const;
inline   CATStandard_Integer LowerCol() const;
inline   CATStandard_Integer LowerRow() const;
inline   CATStandard_Integer UpperCol() const;
inline   CATStandard_Integer UpperRow() const;
inline   void SetValue(const CATStandard_Integer Row,const CATStandard_Integer Col,const CATStandard_Integer& Value) ;
ExportedBySysCascade   const CATStandard_Integer& Value(const CATStandard_Integer Row,const CATStandard_Integer Col) const;
ExportedBySysCascade    CATStandard_Integer& ChangeValue(const CATStandard_Integer Row,const CATStandard_Integer Col) ;
inline  const CATTColStd_Array2OfInteger& Array2() const;
inline   CATTColStd_Array2OfInteger& ChangeArray2() ;
ExportedBySysCascade  ~CATTColStd_HArray2OfInteger();




 // Type management
 //
 ExportedBySysCascade  friend Handle_CATStandard_Type& CATTColStd_HArray2OfInteger_Type_();
 ExportedBySysCascade  const Handle(CATStandard_Type)& DynamicType() const;
 ExportedBySysCascade  CATStandard_Boolean	       IsKind(const Handle(CATStandard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
CATTColStd_Array2OfInteger myArray;


};

#define ItemHArray2 CATStandard_Integer
#define ItemHArray2_hxx <CATStandard_Integer.hxx>
#define TheArray2 CATTColStd_Array2OfInteger
#define TheArray2_hxx <CATTColStd_Array2OfInteger.hxx>
#define CATTCollection_HArray2 CATTColStd_HArray2OfInteger
#define CATTCollection_HArray2_hxx <CATTColStd_HArray2OfInteger.hxx>
#define Handle_CATTCollection_HArray2 Handle_CATTColStd_HArray2OfInteger
#define CATTCollection_HArray2_Type_() CATTColStd_HArray2OfInteger_Type_()

#include "CATTCollection_HArray2.lxx"

#undef ItemHArray2
#undef ItemHArray2_hxx
#undef TheArray2
#undef TheArray2_hxx
#undef CATTCollection_HArray2
#undef CATTCollection_HArray2_hxx
#undef Handle_CATTCollection_HArray2
#undef CATTCollection_HArray2_Type_


// other inline functions and methods (like "C++: function call" methods)
//


#endif
