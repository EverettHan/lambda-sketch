// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// CATIParmDirectAccess.h
// This interface is RESERVED for CAA developer (not to be used by internal developer)
// The objective of this interface is to provide access to the direct children of a CAA object.
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Nov 2008  Creation: Code generated by the CAA wizard  FRH
//===================================================================
#ifndef CATIParmDirectAccess_H
#define CATIParmDirectAccess_H

/** 
 * @CAA2Level L1
 * @CAA2Usage U4 CATParmPublisherAdapter 
 */

#include "CATLifSpecs.h"
#include "CATBaseUnknown.h"
#include "CATLISTV_CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATLifSpecs IID IID_CATIParmDirectAccess;
#else
extern "C" const IID IID_CATIParmDirectAccess ;
#endif

//------------------------------------------------------------------

/**
* Interface representing an object that publishes parameters.
*
* <br><b>Role</b>: If you're a CAA feature that implements CATIParmPublisher because you publish parameters, and if you want to 
* retrieve them for your own purpose, implement also this interface.
* <p>
*
* Implementations of that interface should derive from CATParmPublisherAdapter 
*
* <p><b>BOA information</b>: this interface CANNOT be implemented
* using the BOA (Basic Object Adapter).
* To know more about the BOA, refer to the CAA Encyclopedia home page.
* Click Middleware at the bottom left, then click the Object Modeler tab page.
* Several articles deal with the BOA.</p>
*
* @href CATIParmPublisher
*/
class ExportedByCATLifSpecs CATIParmDirectAccess: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

  /**
   * Returns the children (mostly paramters) that the CAA feature aggregates.<br>
   * @param iIntfName Id of the kind of objects searched
   * @param iListToFill objects found are added to the list
   * @return classic HRESULT
   */
  virtual HRESULT RetrieveDirectChildren (CATClassId iIntfName,CATLISTV(CATBaseUnknown_var) &iListToFill)   const = 0    ;
};

CATDeclareHandler(CATIParmDirectAccess,CATBaseUnknown);

#endif
