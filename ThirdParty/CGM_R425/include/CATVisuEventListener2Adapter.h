// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// CATVisuEventListener2Adapter.h
// Define the adapter for CATIVisuEventListener2 interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Apr 2009  Creation: Code generated by the CAA wizard  jov
//===================================================================
#ifndef CATVisuEventListener2Adapter_H
#define CATVisuEventListener2Adapter_H

#include "CATVisFoundation.h"
#include "CATBaseUnknown.h"
#include "CATIVisuEventListener2.h"

class CATKeybdEvent;
class CATIMEKeybdEvent;
class CATNotification;

//------------------------------------------------------------------
/**
 * Interface to be called before device action treatment by visu. 
 */

class ExportedByCATVisFoundation CATVisuEventListener2Adapter: public CATIVisuEventListener2
{
  CATDeclareClass;
 
public:
 /**
  * Treat keyboard action, and consume or not event.
  * @return 0 to consume the event, 1 to continue the event treatment
  */
  virtual unsigned int KeyboardAction (CATKeybdEvent* i_pEvent) 
  {
    return 1;
  }
 /**
  * Treat device action, and consume or not event.
  * @return 0 to consume the event, 1 to continue the event treatment
  */
  virtual unsigned int DeviceAction(CATNotification *i_pNotification) 
  {
    return 1;
  }
  /**
  * Treat IME keyboard action, and consume or not event.
  * @return 0 to consume the event, 1 to continue the event treatment
  */
  virtual unsigned int IMEKeyboardAction (CATIMEKeybdEvent* i_pEvent)
  {
    return 1;
  }
  /**
  * Treat keyboard action, and consume or not event after the visu treatment.
  * @return 0 to consume the event, 1 to continue the event treatment
  */
  virtual unsigned int KeyboardAction_post (CATKeybdEvent* i_pEvent)
  {
    return 1;
  }
 /**
  * Treat device action, and consume or not event.
  * @return 0 to consume the event, 1 to continue the event treatment
  */
  virtual unsigned int DeviceAction_post(CATNotification *i_pNotification) 
  {
    return 1;
  }
};


#endif



