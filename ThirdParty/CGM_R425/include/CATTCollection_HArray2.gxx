#include "CATStandard_OutOfRange.hxx"
#include "CATStandard_DimensionMismatch.hxx"
#include "CATStandard_RangeError.hxx"
#include "CATStandard_OutOfMemory.hxx"

//=======================================================================
//function : CATTCollection_HArray2
//purpose  : 
//=======================================================================

CATTCollection_HArray2::CATTCollection_HArray2 (const CATStandard_Integer R1, 
					  const CATStandard_Integer R2,
					  const CATStandard_Integer C1, 
					  const CATStandard_Integer C2) :
       myArray(R1,R2,C1,C2)
{}


//=======================================================================
//function : CATTCollection_HArray2
//purpose  : 
//=======================================================================

CATTCollection_HArray2::CATTCollection_HArray2 (const CATStandard_Integer R1, 
					  const CATStandard_Integer R2,
					  const CATStandard_Integer C1, 
					  const CATStandard_Integer C2,
					  const ItemHArray2& V) :
       myArray(R1,R2,C1,C2)
{myArray.Init(V);}

//=======================================================================
//function : CATTCollection_HArray2
//purpose  : 
//=======================================================================

void CATTCollection_HArray2::Init(const ItemHArray2& V)
{ myArray.Init(V);}


//=======================================================================
//function : IsSameState
//purpose  : 
//=======================================================================

//CATStandard_Boolean CATTCollection_HArray2::IsSameState
//  (const Handle (CATTCollection_HArray2)& other) const
//{
//  const TheArray2 & otherArray = 
//    Handle(CATTCollection_HArray2)::DownCast(other)->Array2();
//  for (CATStandard_Integer i =  myArray.LowerRow();
//       i <= myArray.UpperRow();
//       i++) {
//    for (CATStandard_Integer j =  myArray.LowerCol();
//	 j <= myArray.UpperCol();
//	 j++) {
//      if (!(myArray(i,j) == otherArray(i,j))) return CATStandard_False;
//    }     
//  }
//  return CATStandard_True;
//}


//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

const ItemHArray2& CATTCollection_HArray2::Value(const CATStandard_Integer Row,
				       const CATStandard_Integer Col) const
{
  return myArray(Row,Col);
}

//=======================================================================
//function : ChangeValue
//purpose  : 
//=======================================================================

ItemHArray2& CATTCollection_HArray2::ChangeValue(const CATStandard_Integer Row,
				       const CATStandard_Integer Col)
{
  return myArray(Row,Col);
}
