//===================================================================
// COPYRIGHT Dassault Systemes 2015/01/29
//===================================================================
// CATAdpDWSReservationQuery.cpp
// Header definition of class CATAdpDWSReservationQuery
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2015/01/29 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef CATAdpDWSReservationQuery_H
#define CATAdpDWSReservationQuery_H

#include "CATPLMIntegrationAccess.h"
#include "CATIAdpErrorMonitor.h"

class CATPLMID;
class CATPLMIDSet;
class CATIAdpDWSReservationResult;
class CATAdpDWSReservationQueryLetter;


#define AuthorizedModule                  999
// Infra modules
#define CATPLMDWSAccess                   AuthorizedModule
#define CATPLMItgTests                    AuthorizedModule
// DWS modules
#define CATPLMWorkspaceImpl               AuthorizedModule
#define CATPLMWorkspaceImplCompEngine     AuthorizedModule
#define CATPLMWorkspaceImplOpEngine       AuthorizedModule
#if _MK_MODNAME_ == AuthorizedModule
#else
  #error Forbidden access to CATAdpDWSReservationQuery from non-infrastructure module
  @error 
#endif
#undef CATPLMDWSAccess
#undef CATPLMItgTests
#undef CATPLMWorkspaceImpl
#undef CATPLMWorkspaceImplCompEngine
#undef CATPLMWorkspaceImplOpEngine


//-----------------------------------------------------------------------
/**
 * Service enabling to check the reservation status of components.
 * 
 * The reservation status for a component is either NONE, LOCAL or PARENT. A
 * component that has the PARENT reservation status also has the LOCAL 
 * reservation status in the workspace that made the reservation (see the PES 
 * for Designer Workspace for more info about the workspace reservation).
 * 
 * Two kinds of checks can be performed:
 * - For a component in a workspace, we can check if it has the LOCAL 
 *   reservation status in its workspace.
 * - For a component in the reference, we can check if it has the PARENT 
 *   reservation status.
 *   
 * Usage:
 *  CATPLMID componentInReference, componentInAWorkspace;
 *  CATAdpDWSReservationQuery query;
 *  query.AddParentReservationInfoToRetrieve(componentInReference);
 *  query.AddLocalReservationInfoToRetrieve(componentInAWorkspace);
 *  CATIAdpDWSReservationResult * pResult = NULL;
 *  HRESULT hr = query.ExecuteRequest(pResult);
 *  if (SUCCEEDED(hr))
 *  {
 *    // Process the result here
 *  }
 *  else if (hr == E_FAIL)
 *  {
 *    // Process the error here
 *  }
 *   
 * @see CATIAdpDWSReservationResult
 */
class ExportedByCATPLMIntegrationAccess CATAdpDWSReservationQuery
{
public:
  /**
   * Standard constructor and destructor.
   */
  CATAdpDWSReservationQuery(CATIAdpErrorMonitor * iopErrorMonitor = NULL);
  ~CATAdpDWSReservationQuery();

  /**
   * Requests to retrieve the PARENT reservation info for a component in the 
   * reference (the component MUST be an entity or a relation).
   * If the component is not in the reference, an error will be notified when
   * calling #ExecuteRequest and the reservation info will not be available for 
   * this component.
   * @param iComponentInReference [in] The component.
   * @return 
   *  Legal values:
   *  <ul>
   *    <li><code>S_OK</code>The component was succesfully added to the request.
   *    </li>
   *    <li><code>E_INVALIDARG</code>The component is neither an entity nor a 
   *      relation.</li>
   *    <li><code>E_UNEXPECTED</code>The method failed.</li>
   *  </ul>
   */
  HRESULT AddParentReservationInfoToRetrieve(const CATPLMID & iComponentInReference);
  HRESULT AddParentReservationInfoToRetrieve(const CATPLMIDSet & iComponentsInReference);

  /**
   * Requests to retrieve the LOCAL reservation info for a component in a 
   * workspace (the component MUST be an entity or a relation).
   * If the component is not in a workspace, an error will be notified when 
   * calling #ExecuteRequest and the reservation info will not be available for 
   * this component.
   * @param iComponentInWorkspace [in] The component.
   * @return 
   *  Legal values:
   *  <ul>
   *    <li><code>S_OK</code>The component was succesfully added to the request.
   *    </li>
   *    <li><code>E_INVALIDARG</code>The component is neither an entity nor a 
   *      relation.</li>
   *    <li><code>E_UNEXPECTED</code>The method failed.</li>
   *  </ul>
   */
  HRESULT AddLocalReservationInfoToRetrieve(const CATPLMID & iComponentInWorkspace);
  HRESULT AddLocalReservationInfoToRetrieve(const CATPLMIDSet & iComponentsInWorkspace);

  /**
   * Executes the request to retrieve the reservation infos from the server.
   * Call #AddParentReservationInfoToRetrieve and #AddLocalReservationInfoToRetrieve 
   * beforehand to specify the input components.
   * @param opResult [out, CATBaseUnknown#Release] The result of the request, 
   *  from which the reservation info of the requested components can be 
   *  accessed.
   * @return 
   *  Legal values:
   *  <ul>
   *    <li><code>S_OK</code>The query was successfully executed.</li>
   *    <li><code>E_INVALIDARG</code>No component in input. Neither 
   *      #AddParentReservationInfoToRetrieve nor 
   *      #AddLocalReservationInfoToRetrieve were called.</li>
   *    <li><code>E_FAIL</code>Errors occurred during the query. Get more info 
   *      from the error monitor</li>
   *    <li><code>E_UNEXPECTED</code>The method unexpectedly failed.</li>
   *  </ul>
   */
  HRESULT ExecuteRequest(CATIAdpDWSReservationResult *& opResult);

  /**
   * Retrieves the error monitor used for this query.
   * If one was provided to at construction, its instance is retrieved here.
   * @param opErrorMonitor [out, CATBaseUnknown#Release] The error monitor.
   * @return 
   *  Legal values:
   *  <ul>
   *    <li><code>S_OK</code>The error monitor was successfully retrieved.</li>
   *    <li><code>E_UNEXPECTED</code>No error monitor available.</li>
   *  </ul>
   */
  HRESULT GetErrorMonitor(CATIAdpErrorMonitor *& opErrorMonitor);

  /**
   * Resets the query.
   * Removes all the components previously added to the query with 
   * #AddParentReservationInfoToRetrieve or #AddLocalReservationInfoToRetrieve.
   * You may then use the query to retrieve the reservation infos on other 
   * components.
   * @return 
   *  Legal values:
   *  <ul>
   *    <li><code>S_OK</code>The query was successfully reseted.</li>
   *    <li><code>E_UNEXPECTED</code>The method failed.</li>
   *  </ul>
   */
  HRESULT Reset();

private:
  CATAdpDWSReservationQuery(CATAdpDWSReservationQuery &);
  CATAdpDWSReservationQuery & operator=(CATAdpDWSReservationQuery &);

  CATAdpDWSReservationQueryLetter * _pLetter;
};

//-----------------------------------------------------------------------

#endif
