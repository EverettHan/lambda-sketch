// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATPLMSessionServices.h
// Header definition of CATPLMSessionServices
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Jan 2006  Creation: Code generated by the CAA wizard  ECN
//===================================================================
/**
* @CAA2Level L1
* @CAA2Usage U1
*/
#ifndef CATPLMSessionServices_H
#define CATPLMSessionServices_H

#include "CATBaseUnknown.h"
#include "CATPLMComponentInterfaces.h"
#include "CATIAV5Level.h"

class CATIPLMSessionManagement;
class CATUnicodeString;

/**
* Class to create and delete a batch session.
*
* <br><b>Role</b>: this class enables you to create and delete a batch PLM session. 
* These methods include the connection and the deconnection respectively.
*
*/
class ExportedByCATPLMComponentInterfaces CATPLMSessionServices
{
public:

  /** 
  * Creates a batch session and connects to a repository.
  *  
  * @return
  *      <ul>
  *       <li><tt>S_OK</tt> if succesfully connected.</li>
  *       <li><tt>E_INVALIDARG</tt> in such cases :
  *           <ul>
  *            <li> invalid connection parameters such as Repository not defined.</li> 
  *           </ul>
  *       <li><tt>E_FAIL</tt> if unexpected errors.</li>
  *      </ul>
  */
  static HRESULT InitPLMSession();

  /** 
  * Closes the connection and delete the batch session.
  * 
  * @return
  *      <ul>
  *       <li><tt>S_OK</tt>  if successfully done.</li>
  *       <li><tt>E_FAIL</tt> if unexpected errors.</li>
  *      </ul>
  */
  static HRESULT ClosePLMSession();

  /**
  * Declares a connection parameter.
  * These properties define the connection parameters to a repository.
  * They are :
  *    <ul>
  *    <li> <tt>Repository</tt> : the repository name (like PLM1) which is mandatory.</li> 
  *    <li> <tt>UserID</tt> : the  user  name  for  connection </li> 
  *    <li> <tt>UserPasswd</tt> : the  user  password  for  connection </li> 
  *    <li> <tt>SecurityCtx</tt> : the user security context server for connection </li> 
  *    <li> <tt>Server</tt> : the URL string used for  connection, expected  format  is  'protocol://ServerName:PortNumber/RootURI' .
  *     <BR> This parameter will be automatically dispatched to the following parameters : ServerProtocol, ServerName,ServerPort,and ServerRootURI.
  *     <BR> If you also set those parameters they will override the one from the 'Server' parameter. </li>
  *     <BR> It's not possible to give the user and password directly.
  *     <BR> You can of course use subsets like Server:Port Server/RootURI protocol://Server etc...
  *    <li> <tt>ServerName</tt> : the  server  name.</li>
  *    <li> <tt>ServerPort</tt> : the  server  port.</li>
  *    <li> <tt>ServerProtocole</tt> : the  server protocole.</li>
  *    <li> <tt>ServerRootURI</tt> : the Root URI to use </li> 
  *    </ul>
  * A parameter must be declared only if its value is not null. The parameters definition order doesn't matter.
  * Some repository does not need all parameters for connection please check documentation of the repository.
  * @param iKey
  * The  parameter name
  * @param iValue
  * The  value of the parameter
  * @return
  *      <ul>
  *       <li><tt>S_OK</tt> if the property has been successfully added.</li>
  *       <li><tt>E_INVALIDARG</tt> if the parameter name is invalid or if the length of <tt>iKey</tt> is null.</li> 
  *       <li><tt>E_FAIL</tt> otherwise if it has failed.</li>
  *      </ul>  
  *  
  */
  static HRESULT SetPLMSessionParameter(const CATUnicodeString& iKey,const CATUnicodeString& iValue);

#ifdef CATIAR216
  /**
  * Set password.
  * 
  * ioValue contains the value of the password in clear. The ioValue is encrypted and kept for connection step.
  * At the end of the method, ioValue is shredded to remove the value from memory.
  * @param iValue
  * The  value of the password
  * @return
  *      <ul>
  *       <li><tt>S_OK</tt> if the property has been successfully added.</li>
  *       <li><tt>E_FAIL</tt> otherwise if it has failed.</li>
  *      </ul>  
  *  
  */
  static HRESULT SetPLMSessionPasswordAndThenShredIt(CATUnicodeString& ioValue);
#endif

private:
  // 
  static    CATIPLMSessionManagement * piSession; 

};

#endif
