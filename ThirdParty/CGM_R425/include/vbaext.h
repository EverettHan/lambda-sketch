/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: VBIDE */

#ifndef _VBIDE_H_
#define _VBIDE_H_

DEFINE_GUID(LIBID_VBIDE,0x0002E157L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);
#ifndef BEGIN_INTERFACE
#define BEGIN_INTERFACE
#endif

interface VBE;

interface _VBProjects;

#ifdef __cplusplus
class VBProjects;
#endif

interface _VBProject;

#ifdef __cplusplus
class VBProject;
#endif

interface _VBComponents;

#ifdef __cplusplus
class VBComponents;
#endif

interface _VBComponent;

#ifdef __cplusplus
class VBComponent;
#endif

interface _AddIns;

#ifdef __cplusplus
class AddIns;
#endif

interface AddIn;

interface _Windows_old;

interface _Windows;

#ifdef __cplusplus
class Windows;
#endif

interface Window;

interface _LinkedWindows;

#ifdef __cplusplus
class LinkedWindows;
#endif

interface _Properties;

#ifdef __cplusplus
class Properties;
#endif

interface Events;

interface _VBProjectsEvents;

#ifdef __cplusplus
class VBProjectsEvents;
#endif

interface _VBComponentsEvents;

#ifdef __cplusplus
class VBComponentsEvents;
#endif

interface _ReferencesEvents;

#ifdef __cplusplus
class ReferencesEvents;
#endif

#ifdef __cplusplus
class VBControlsEvents;
#endif

#ifdef __cplusplus
class SelectedVBControlsEvents;
#endif

#ifdef __cplusplus
class CommandBarEvents;
#endif

#ifdef __cplusplus
class CodeModule;
#endif

#ifdef __cplusplus
class CodePanes;
#endif

#ifdef __cplusplus
class CodePane;
#endif

interface Reference;

interface _References;

#ifdef __cplusplus
class References;
#endif

interface Application;

interface _ProjectTemplate;

interface _Components;

#ifdef __cplusplus
class Components;
#endif

interface _Component;

#ifdef __cplusplus
class Component;
#endif

interface SelectedComponents;

DEFINE_GUID(IID_Application,0x0002E158L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: Application */
#undef INTERFACE
#define INTERFACE Application

DECLARE_INTERFACE_(Application, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* Application methods */
    STDMETHOD(get_Version)(THIS_ BSTR FAR* lpbstrReturn) PURE;
};

typedef enum vbextFileTypes {
    vbextFileTypeForm = 0,
    vbextFileTypeModule = 1,
    vbextFileTypeClass = 2,
    vbextFileTypeProject = 3,
    vbextFileTypeExe = 4,
    vbextFileTypeFrx = 5,
    vbextFileTypeRes = 6,
    vbextFileTypeUserControl = 7,
    vbextFileTypePropertyPage = 8,
    vbextFileTypeDocObject = 9,
    vbextFileTypeBinary = 10,
    vbextFileTypeGroupProject = 11,
    vbextFileTypeDesigners = 12
} vbextFileTypes;

DEFINE_GUID(IID_VBE,0x0002E166L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: VBE */
#undef INTERFACE
#define INTERFACE VBE

DECLARE_INTERFACE_(VBE, Application)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* Application methods */
    STDMETHOD(get_Version)(THIS_ BSTR FAR* lpbstrReturn) PURE;
#endif

    /* VBE methods */
    STDMETHOD(get_VBProjects)(THIS_ VBProjects FAR* FAR* lppptReturn) PURE;
    STDMETHOD(get_CommandBars)(THIS_ CommandBars FAR* FAR* ppcbs) PURE;
    STDMETHOD(get_CodePanes)(THIS_ CodePanes FAR* FAR* ppCodePanes) PURE;
    STDMETHOD(get_Windows)(THIS_ Windows FAR* FAR* ppwnsVBWindows) PURE;
    STDMETHOD(get_Events)(THIS_ Events FAR* FAR* ppevtEvents) PURE;
    STDMETHOD(get_ActiveVBProject)(THIS_ VBProject FAR* FAR* lppptReturn) PURE;
    STDMETHOD(putref_ActiveVBProject)(THIS_ VBProject FAR* lppptReturn) PURE;
    STDMETHOD(get_SelectedVBComponent)(THIS_ VBComponent FAR* FAR* lppscReturn) PURE;
    STDMETHOD(get_MainWindow)(THIS_ Window FAR* FAR* ppwin) PURE;
    STDMETHOD(get_ActiveWindow)(THIS_ Window FAR* FAR* ppwinActive) PURE;
    STDMETHOD(get_ActiveCodePane)(THIS_ CodePane FAR* FAR* ppCodePane) PURE;
    STDMETHOD(putref_ActiveCodePane)(THIS_ CodePane FAR* ppCodePane) PURE;
    STDMETHOD(get_AddIns)(THIS_ AddIns FAR* FAR* lpppAddIns) PURE;
};

typedef enum vbext_WindowType {
    vbext_wt_CodeWindow = 0,
    vbext_wt_Designer = 1,
    vbext_wt_Browser = 2,
    vbext_wt_Watch = 3,
    vbext_wt_Locals = 4,
    vbext_wt_Immediate = 5,
    vbext_wt_ProjectWindow = 6,
    vbext_wt_PropertyWindow = 7,
    vbext_wt_Find = 8,
    vbext_wt_FindReplace = 9,
    vbext_wt_Toolbox = 10,
    vbext_wt_LinkedWindowFrame = 11,
    vbext_wt_MainWindow = 12,
    vbext_wt_ToolWindow = 15
} vbext_WindowType;

typedef enum vbext_WindowState {
    vbext_ws_Normal = 0,
    vbext_ws_Minimize = 1,
    vbext_ws_Maximize = 2
} vbext_WindowState;

DEFINE_GUID(IID_Window,0x0002E16BL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: Window */
#undef INTERFACE
#define INTERFACE Window

DECLARE_INTERFACE_(Window, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* Window methods */
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Collection)(THIS_ Windows FAR* FAR* lppaReturn) PURE;
    STDMETHOD(Close)(THIS) PURE;
    STDMETHOD(get_Caption)(THIS_ BSTR FAR* pbstrTitle) PURE;
    STDMETHOD(get_Visible)(THIS_ VARIANT_BOOL FAR* pfVisible) PURE;
    STDMETHOD(put_Visible)(THIS_ VARIANT_BOOL fVisible) PURE;
    STDMETHOD(get_Left)(THIS_ long FAR* plLeft) PURE;
    STDMETHOD(put_Left)(THIS_ long lLeft) PURE;
    STDMETHOD(get_Top)(THIS_ long FAR* plTop) PURE;
    STDMETHOD(put_Top)(THIS_ long lTop_r) PURE;
    STDMETHOD(get_Width)(THIS_ long FAR* plWidth) PURE;
    STDMETHOD(put_Width)(THIS_ long lWidth) PURE;
    STDMETHOD(get_Height)(THIS_ long FAR* plHeight) PURE;
    STDMETHOD(put_Height)(THIS_ long lHeight_r) PURE;
    STDMETHOD(get_WindowState)(THIS_ enum vbext_WindowState FAR* plWindowState) PURE;
    STDMETHOD(put_WindowState)(THIS_ enum vbext_WindowState wstWindowState) PURE;
    STDMETHOD(SetFocus)(THIS) PURE;
    STDMETHOD(get_Type)(THIS_ enum vbext_WindowType FAR* pKind) PURE;
    STDMETHOD(SetKind)(THIS_ enum vbext_WindowType eKind) PURE;
    STDMETHOD(get_LinkedWindows)(THIS_ LinkedWindows FAR* FAR* ppwnsCollection) PURE;
    STDMETHOD(get_LinkedWindowFrame)(THIS_ Window FAR* FAR* ppwinFrame) PURE;
    STDMETHOD(Detach)(THIS) PURE;
    STDMETHOD(Attach)(THIS_ long lWindowHandle) PURE;
    STDMETHOD(get_HWnd)(THIS_ long FAR* plWindowHandle) PURE;
};

DEFINE_GUID(IID__Windows_old,0x0002E16AL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _Windows_old */
#undef INTERFACE
#define INTERFACE _Windows_old

DECLARE_INTERFACE_(_Windows_old, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _Windows_old methods */
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ Application FAR* FAR* lppptReturn) PURE;
    STDMETHOD(Item)(THIS_ VARIANT index, Window FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
};

DEFINE_GUID(IID__Windows,0xF57B7ED0L,0xD8AB,0x11D1,0x85,0xDF,0x00,0xC0,0x4F,0x98,0xF4,0x2C);

/* Definition of interface: _Windows */
#undef INTERFACE
#define INTERFACE _Windows

DECLARE_INTERFACE_(_Windows, _Windows_old)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* _Windows_old methods */
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ Application FAR* FAR* lppptReturn) PURE;
    STDMETHOD(Item)(THIS_ VARIANT index, Window FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
#endif

    /* _Windows methods */
    STDMETHOD(CreateToolWindow)(THIS_ AddIn FAR* AddInInst, BSTR ProgId, BSTR Caption, BSTR GuidPosition, IDispatch * FAR* DocObj, Window FAR* FAR* lppcReturn) PURE;
};

DEFINE_GUID(CLSID_Windows,0x0002E185L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Windows;
#endif

DEFINE_GUID(IID__LinkedWindows,0x0002E16CL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _LinkedWindows */
#undef INTERFACE
#define INTERFACE _LinkedWindows

DECLARE_INTERFACE_(_LinkedWindows, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _LinkedWindows methods */
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ Window FAR* FAR* ppptReturn) PURE;
    STDMETHOD(Item)(THIS_ VARIANT index, Window FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
    STDMETHOD(Remove)(THIS_ Window FAR* Window) PURE;
    STDMETHOD(Add)(THIS_ Window FAR* Window) PURE;
};

DEFINE_GUID(CLSID_LinkedWindows,0x0002E187L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class LinkedWindows;
#endif

DEFINE_GUID(IID_Events,0x0002E167L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: Events */
#undef INTERFACE
#define INTERFACE Events

DECLARE_INTERFACE_(Events, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* Events methods */
    STDMETHOD(get_ReferencesEvents)(THIS_ VBProject FAR* VBProject, ReferencesEvents FAR* FAR* prceNew) PURE;
    STDMETHOD(get_CommandBarEvents)(THIS_ IDispatch * CommandBarControl, CommandBarEvents FAR* FAR* prceNew) PURE;
};

DEFINE_GUID(IID__VBProjectsEvents,0x0002E113L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _VBProjectsEvents */
#undef INTERFACE
#define INTERFACE _VBProjectsEvents

DECLARE_INTERFACE_(_VBProjectsEvents, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* _VBProjectsEvents methods */
};

DEFINE_GUID(DIID__dispVBProjectsEvents,0x0002E103L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: _dispVBProjectsEvents */
#undef INTERFACE
#define INTERFACE _dispVBProjectsEvents

DECLARE_INTERFACE_(_dispVBProjectsEvents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _dispVBProjectsEvents methods:
    void ItemAdded(VBProject FAR* VBProject);
    void ItemRemoved(VBProject FAR* VBProject);
    void ItemRenamed(VBProject FAR* VBProject, BSTR OldName);
    void ItemActivated(VBProject FAR* VBProject);
    */
};

DEFINE_GUID(IID__VBComponentsEvents,0x0002E115L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _VBComponentsEvents */
#undef INTERFACE
#define INTERFACE _VBComponentsEvents

DECLARE_INTERFACE_(_VBComponentsEvents, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* _VBComponentsEvents methods */
};

DEFINE_GUID(DIID__dispVBComponentsEvents,0x0002E116L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: _dispVBComponentsEvents */
#undef INTERFACE
#define INTERFACE _dispVBComponentsEvents

DECLARE_INTERFACE_(_dispVBComponentsEvents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _dispVBComponentsEvents methods:
    void ItemAdded(VBComponent FAR* VBComponent);
    void ItemRemoved(VBComponent FAR* VBComponent);
    void ItemRenamed(VBComponent FAR* VBComponent, BSTR OldName);
    void ItemSelected(VBComponent FAR* VBComponent);
    void ItemActivated(VBComponent FAR* VBComponent);
    void ItemReloaded(VBComponent FAR* VBComponent);
    */
};

DEFINE_GUID(IID__ReferencesEvents,0x0002E11AL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _ReferencesEvents */
#undef INTERFACE
#define INTERFACE _ReferencesEvents

DECLARE_INTERFACE_(_ReferencesEvents, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* _ReferencesEvents methods */
};

DEFINE_GUID(DIID__dispReferencesEvents,0x0002E118L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: _dispReferencesEvents */
#undef INTERFACE
#define INTERFACE _dispReferencesEvents

DECLARE_INTERFACE_(_dispReferencesEvents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _dispReferencesEvents methods:
    void ItemAdded(Reference FAR* Reference);
    void ItemRemoved(Reference FAR* Reference);
    */
};

DEFINE_GUID(CLSID_ReferencesEvents,0x0002E119L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class ReferencesEvents;
#endif

DEFINE_GUID(IID__CommandBarControlEvents,0x0002E130L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _CommandBarControlEvents */
#undef INTERFACE
#define INTERFACE _CommandBarControlEvents

DECLARE_INTERFACE_(_CommandBarControlEvents, IUnknown)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;
#endif

    /* _CommandBarControlEvents methods */
};

DEFINE_GUID(DIID__dispCommandBarControlEvents,0x0002E131L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of dispatch interface: _dispCommandBarControlEvents */
#undef INTERFACE
#define INTERFACE _dispCommandBarControlEvents

DECLARE_INTERFACE_(_dispCommandBarControlEvents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _dispCommandBarControlEvents methods:
    void Click(IDispatch * CommandBarControl, VARIANT_BOOL FAR* handled, VARIANT_BOOL FAR* CancelDefault);
    */
};

DEFINE_GUID(CLSID_CommandBarEvents,0x0002E132L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class CommandBarEvents;
#endif

DEFINE_GUID(IID__ProjectTemplate,0x0002E159L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _ProjectTemplate */
#undef INTERFACE
#define INTERFACE _ProjectTemplate

DECLARE_INTERFACE_(_ProjectTemplate, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _ProjectTemplate methods */
    STDMETHOD(get_Application)(THIS_ Application FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ Application FAR* FAR* lppaReturn) PURE;
};

DEFINE_GUID(CLSID_ProjectTemplate,0x32CDF9E0L,0x1602,0x11CE,0xBF,0xDC,0x08,0x00,0x2B,0x2B,0x8C,0xDA);

#ifdef __cplusplus
class ProjectTemplate;
#endif

typedef enum vbext_ProjectType {
    vbext_pt_HostProject = 100,
    vbext_pt_StandAlone = 101
} vbext_ProjectType;

typedef enum vbext_ProjectProtection {
    vbext_pp_none = 0,
    vbext_pp_locked = 1
} vbext_ProjectProtection;

typedef enum vbext_VBAMode {
    vbext_vm_Run = 0,
    vbext_vm_Break = 1,
    vbext_vm_Design = 2
} vbext_VBAMode;

DEFINE_GUID(IID__VBProject_Old,0x0002E160L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _VBProject_Old */
#undef INTERFACE
#define INTERFACE _VBProject_Old

DECLARE_INTERFACE_(_VBProject_Old, _ProjectTemplate)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* _ProjectTemplate methods */
    STDMETHOD(get_Application)(THIS_ Application FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ Application FAR* FAR* lppaReturn) PURE;
#endif

    /* _VBProject_Old methods */
    STDMETHOD(get_HelpFile)(THIS_ BSTR FAR* lpbstrHelpFile) PURE;
    STDMETHOD(put_HelpFile)(THIS_ BSTR bstrHelpFile) PURE;
    STDMETHOD(get_HelpContextID)(THIS_ long FAR* lpdwContextID) PURE;
    STDMETHOD(put_HelpContextID)(THIS_ long dwContextID) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* lpbstrDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDescription) PURE;
    STDMETHOD(get_Mode)(THIS_ enum vbext_VBAMode FAR* lpVbaMode) PURE;
    STDMETHOD(get_References)(THIS_ References FAR* FAR* lppReferences) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR lpbstrName) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Collection)(THIS_ VBProjects FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Protection)(THIS_ enum vbext_ProjectProtection FAR* lpProtection) PURE;
    STDMETHOD(get_Saved)(THIS_ VARIANT_BOOL FAR* lpfReturn) PURE;
    STDMETHOD(get_VBComponents)(THIS_ VBComponents FAR* FAR* lppcReturn) PURE;
};

DEFINE_GUID(IID__VBProject,0xEEE00915L,0xE393,0x11D1,0xBB,0x03,0x00,0xC0,0x4F,0xB6,0xC4,0xA6);

/* Definition of interface: _VBProject */
#undef INTERFACE
#define INTERFACE _VBProject

DECLARE_INTERFACE_(_VBProject, _VBProject_Old)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* _ProjectTemplate methods */
    STDMETHOD(get_Application)(THIS_ Application FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ Application FAR* FAR* lppaReturn) PURE;

    /* _VBProject_Old methods */
    STDMETHOD(get_HelpFile)(THIS_ BSTR FAR* lpbstrHelpFile) PURE;
    STDMETHOD(put_HelpFile)(THIS_ BSTR bstrHelpFile) PURE;
    STDMETHOD(get_HelpContextID)(THIS_ long FAR* lpdwContextID) PURE;
    STDMETHOD(put_HelpContextID)(THIS_ long dwContextID) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* lpbstrDescription) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstrDescription) PURE;
    STDMETHOD(get_Mode)(THIS_ enum vbext_VBAMode FAR* lpVbaMode) PURE;
    STDMETHOD(get_References)(THIS_ References FAR* FAR* lppReferences) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR lpbstrName) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Collection)(THIS_ VBProjects FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Protection)(THIS_ enum vbext_ProjectProtection FAR* lpProtection) PURE;
    STDMETHOD(get_Saved)(THIS_ VARIANT_BOOL FAR* lpfReturn) PURE;
    STDMETHOD(get_VBComponents)(THIS_ VBComponents FAR* FAR* lppcReturn) PURE;
#endif

    /* _VBProject methods */
    STDMETHOD(SaveAs)(THIS_ BSTR FileName) PURE;
    STDMETHOD(MakeCompiledFile)(THIS) PURE;
    STDMETHOD(get_Type)(THIS_ enum vbext_ProjectType FAR* lpkind) PURE;
    STDMETHOD(get_FileName)(THIS_ BSTR FAR* lpbstrReturn) PURE;
    STDMETHOD(get_BuildFileName)(THIS_ BSTR FAR* lpbstrBldFName) PURE;
    STDMETHOD(put_BuildFileName)(THIS_ BSTR bstrBldFName) PURE;
};

DEFINE_GUID(CLSID_VBProject,0x0002E169L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class VBProject;
#endif

DEFINE_GUID(IID__VBProjects_Old,0x0002E165L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _VBProjects_Old */
#undef INTERFACE
#define INTERFACE _VBProjects_Old

DECLARE_INTERFACE_(_VBProjects_Old, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _VBProjects_Old methods */
    STDMETHOD(Item)(THIS_ VARIANT index, VBProject FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
};

DEFINE_GUID(IID__VBProjects,0xEEE00919L,0xE393,0x11D1,0xBB,0x03,0x00,0xC0,0x4F,0xB6,0xC4,0xA6);

/* Definition of interface: _VBProjects */
#undef INTERFACE
#define INTERFACE _VBProjects

DECLARE_INTERFACE_(_VBProjects, _VBProjects_Old)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* _VBProjects_Old methods */
    STDMETHOD(Item)(THIS_ VARIANT index, VBProject FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
#endif

    /* _VBProjects methods */
    STDMETHOD(Add)(THIS_ enum vbext_ProjectType Type, VBProject FAR* FAR* lppcReturn) PURE;
    STDMETHOD(Remove)(THIS_ VBProject FAR* lpc) PURE;
};

DEFINE_GUID(CLSID_VBProjects,0x0002E101L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class VBProjects;
#endif

DEFINE_GUID(IID_SelectedComponents,0xBE39F3D4L,0x1B13,0x11D0,0x88,0x7F,0x00,0xA0,0xC9,0x0F,0x27,0x44);

/* Definition of interface: SelectedComponents */
#undef INTERFACE
#define INTERFACE SelectedComponents

DECLARE_INTERFACE_(SelectedComponents, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* SelectedComponents methods */
    STDMETHOD(Item)(THIS_ int index, Component FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_Application)(THIS_ Application FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ VBProject FAR* FAR* lppptReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
};

typedef enum vbext_ComponentType {
    vbext_ct_StdModule = 1,
    vbext_ct_ClassModule = 2,
    vbext_ct_MSForm = 3,
    vbext_ct_ActiveXDesigner = 11,
    vbext_ct_Document = 100
} vbext_ComponentType;

DEFINE_GUID(IID__Components,0x0002E161L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _Components */
#undef INTERFACE
#define INTERFACE _Components

DECLARE_INTERFACE_(_Components, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _Components methods */
    STDMETHOD(Item)(THIS_ VARIANT index, Component FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_Application)(THIS_ Application FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ VBProject FAR* FAR* lppptReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
    STDMETHOD(Remove)(THIS_ Component FAR* Component) PURE;
    STDMETHOD(Add)(THIS_ enum vbext_ComponentType ComponentType, Component FAR* FAR* lppComponent) PURE;
    STDMETHOD(Import)(THIS_ BSTR FileName, Component FAR* FAR* lppComponent) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
};

DEFINE_GUID(CLSID_Components,0xBE39F3D6L,0x1B13,0x11D0,0x88,0x7F,0x00,0xA0,0xC9,0x0F,0x27,0x44);

#ifdef __cplusplus
class Components;
#endif

DEFINE_GUID(IID__VBComponents_Old,0x0002E162L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _VBComponents_Old */
#undef INTERFACE
#define INTERFACE _VBComponents_Old

DECLARE_INTERFACE_(_VBComponents_Old, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _VBComponents_Old methods */
    STDMETHOD(Item)(THIS_ VARIANT index, VBComponent FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ VBProject FAR* FAR* lppptReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
    STDMETHOD(Remove)(THIS_ VBComponent FAR* VBComponent) PURE;
    STDMETHOD(Add)(THIS_ enum vbext_ComponentType ComponentType, VBComponent FAR* FAR* lppComponent) PURE;
    STDMETHOD(Import)(THIS_ BSTR FileName, VBComponent FAR* FAR* lppComponent) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
};

DEFINE_GUID(IID__VBComponents,0xEEE0091CL,0xE393,0x11D1,0xBB,0x03,0x00,0xC0,0x4F,0xB6,0xC4,0xA6);

/* Definition of interface: _VBComponents */
#undef INTERFACE
#define INTERFACE _VBComponents

DECLARE_INTERFACE_(_VBComponents, _VBComponents_Old)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* _VBComponents_Old methods */
    STDMETHOD(Item)(THIS_ VARIANT index, VBComponent FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ VBProject FAR* FAR* lppptReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
    STDMETHOD(Remove)(THIS_ VBComponent FAR* VBComponent) PURE;
    STDMETHOD(Add)(THIS_ enum vbext_ComponentType ComponentType, VBComponent FAR* FAR* lppComponent) PURE;
    STDMETHOD(Import)(THIS_ BSTR FileName, VBComponent FAR* FAR* lppComponent) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
#endif

    /* _VBComponents methods */
    STDMETHOD(AddCustom)(THIS_ BSTR ProgID, VBComponent FAR* FAR* lppComponent) PURE;
};

DEFINE_GUID(CLSID_VBComponents,0xBE39F3D7L,0x1B13,0x11D0,0x88,0x7F,0x00,0xA0,0xC9,0x0F,0x27,0x44);

#ifdef __cplusplus
class VBComponents;
#endif

DEFINE_GUID(IID__Component,0x0002E163L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _Component */
#undef INTERFACE
#define INTERFACE _Component

DECLARE_INTERFACE_(_Component, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _Component methods */
    STDMETHOD(get_Application)(THIS_ Application FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ Components FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_IsDirty)(THIS_ VARIANT_BOOL FAR* lpfReturn) PURE;
    STDMETHOD(put_IsDirty)(THIS_ VARIANT_BOOL DirtyFlag) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrReturn) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
};

DEFINE_GUID(CLSID_Component,0xBE39F3D8L,0x1B13,0x11D0,0x88,0x7F,0x00,0xA0,0xC9,0x0F,0x27,0x44);

#ifdef __cplusplus
class Component;
#endif

DEFINE_GUID(IID__VBComponent_Old,0x0002E164L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _VBComponent_Old */
#undef INTERFACE
#define INTERFACE _VBComponent_Old

DECLARE_INTERFACE_(_VBComponent_Old, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _VBComponent_Old methods */
    STDMETHOD(get_Saved)(THIS_ VARIANT_BOOL FAR* lpfReturn) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrReturn) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Designer)(THIS_ IDispatch * FAR* ppDispatch) PURE;
    STDMETHOD(get_CodeModule)(THIS_ CodeModule FAR* FAR* ppVbaModule) PURE;
    STDMETHOD(get_Type)(THIS_ enum vbext_ComponentType FAR* pkind) PURE;
    STDMETHOD(Export)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Collection)(THIS_ VBComponents FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_HasOpenDesigner)(THIS_ VARIANT_BOOL FAR* lpfReturn) PURE;
    STDMETHOD(get_Properties)(THIS_ Properties FAR* FAR* lpppReturn) PURE;
    STDMETHOD(DesignerWindow)(THIS_ Window FAR* FAR* lppcReturn) PURE;
    STDMETHOD(Activate)(THIS) PURE;
};

DEFINE_GUID(IID__VBComponent,0xEEE00921L,0xE393,0x11D1,0xBB,0x03,0x00,0xC0,0x4F,0xB6,0xC4,0xA6);

/* Definition of interface: _VBComponent */
#undef INTERFACE
#define INTERFACE _VBComponent

DECLARE_INTERFACE_(_VBComponent, _VBComponent_Old)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

    /* _VBComponent_Old methods */
    STDMETHOD(get_Saved)(THIS_ VARIANT_BOOL FAR* lpfReturn) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrReturn) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(get_Designer)(THIS_ IDispatch * FAR* ppDispatch) PURE;
    STDMETHOD(get_CodeModule)(THIS_ CodeModule FAR* FAR* ppVbaModule) PURE;
    STDMETHOD(get_Type)(THIS_ enum vbext_ComponentType FAR* pkind) PURE;
    STDMETHOD(Export)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Collection)(THIS_ VBComponents FAR* FAR* lppcReturn) PURE;
    STDMETHOD(get_HasOpenDesigner)(THIS_ VARIANT_BOOL FAR* lpfReturn) PURE;
    STDMETHOD(get_Properties)(THIS_ Properties FAR* FAR* lpppReturn) PURE;
    STDMETHOD(DesignerWindow)(THIS_ Window FAR* FAR* lppcReturn) PURE;
    STDMETHOD(Activate)(THIS) PURE;
#endif

    /* _VBComponent methods */
    STDMETHOD(get_DesignerID)(THIS_ BSTR FAR* pbstrReturn) PURE;
};

DEFINE_GUID(CLSID_VBComponent,0xBE39F3DAL,0x1B13,0x11D0,0x88,0x7F,0x00,0xA0,0xC9,0x0F,0x27,0x44);

#ifdef __cplusplus
class VBComponent;
#endif

DEFINE_GUID(IID_Property,0x0002E18CL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: Property */
#undef INTERFACE
#define INTERFACE Property

DECLARE_INTERFACE_(Property, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* Property methods */
    STDMETHOD(get_Value)(THIS_ VARIANT FAR* lppvReturn) PURE;
    STDMETHOD(put_Value)(THIS_ VARIANT NewValue) PURE;
    STDMETHOD(get_IndexedValue)(THIS_ VARIANT Index1, VARIANT Index2, VARIANT Index3, VARIANT Index4, VARIANT FAR* lppvReturn) PURE;
    STDMETHOD(put_IndexedValue)(THIS_ VARIANT Index1, VARIANT Index2, VARIANT Index3, VARIANT Index4, VARIANT NewValue) PURE;
    STDMETHOD(get_NumIndices)(THIS_ short FAR* lpiRetVal) PURE;
    STDMETHOD(get_Application)(THIS_ Application FAR* FAR* lpaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ Properties FAR* FAR* lpppReturn) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* lpbstrReturn) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lpaReturn) PURE;
    STDMETHOD(get_Collection)(THIS_ Properties FAR* FAR* lpppReturn) PURE;
    STDMETHOD(get_Object)(THIS_ IUnknown * FAR* lppunk) PURE;
    STDMETHOD(putref_Object)(THIS_ IUnknown * lpunk) PURE;
};

DEFINE_GUID(IID__Properties,0x0002E188L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _Properties */
#undef INTERFACE
#define INTERFACE _Properties

DECLARE_INTERFACE_(_Properties, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _Properties methods */
    STDMETHOD(Item)(THIS_ VARIANT index, Property FAR* FAR* lplppReturn) PURE;
    STDMETHOD(get_Application)(THIS_ Application FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Parent)(THIS_ IDispatch * FAR* lppidReturn) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
};

DEFINE_GUID(CLSID_Properties,0x0002E18BL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class Properties;
#endif

DEFINE_GUID(IID__AddIns,0xDA936B62L,0xAC8B,0x11D1,0xB6,0xE5,0x00,0xA0,0xC9,0x0F,0x27,0x44);

/* Definition of interface: _AddIns */
#undef INTERFACE
#define INTERFACE _AddIns

DECLARE_INTERFACE_(_AddIns, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _AddIns methods */
    STDMETHOD(Item)(THIS_ VARIANT Index, AddIn FAR* FAR* lppaddin) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppVBA) PURE;
    STDMETHOD(get_Parent)(THIS_ IDispatch * FAR* lppVBA) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* lplReturn) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* lppiuReturn) PURE;
    STDMETHOD(Update)(THIS) PURE;
};

DEFINE_GUID(CLSID_Addins,0xDA936B63L,0xAC8B,0x11D1,0xB6,0xE5,0x00,0xA0,0xC9,0x0F,0x27,0x44);

#ifdef __cplusplus
class Addins;
#endif

DEFINE_GUID(IID_AddIn,0xDA936B64L,0xAC8B,0x11D1,0xB6,0xE5,0x00,0xA0,0xC9,0x0F,0x27,0x44);

/* Definition of interface: AddIn */
#undef INTERFACE
#define INTERFACE AddIn

DECLARE_INTERFACE_(AddIn, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* AddIn methods */
    STDMETHOD(get_Description)(THIS_ BSTR FAR* lpbstr) PURE;
    STDMETHOD(put_Description)(THIS_ BSTR bstr) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppVBE) PURE;
    STDMETHOD(get_Collection)(THIS_ AddIns FAR* FAR* lppaddins) PURE;
    STDMETHOD(get_ProgID)(THIS_ BSTR FAR* lpbstr) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* lpbstr) PURE;
    STDMETHOD(get_Connect)(THIS_ VARIANT_BOOL FAR* lpfConnect) PURE;
    STDMETHOD(put_Connect)(THIS_ VARIANT_BOOL fConnect) PURE;
    STDMETHOD(get_Object)(THIS_ IDispatch * FAR* lppdisp) PURE;
    STDMETHOD(put_Object)(THIS_ IDispatch * _lpdispObject) PURE;
};

typedef enum {
    vbext_pk_Proc = 0,
    vbext_pk_Let = 1,
    vbext_pk_Set = 2,
    vbext_pk_Get = 3
} vbext_ProcKind;

DEFINE_GUID(IID__CodeModule,0x0002E16EL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _CodeModule */
#undef INTERFACE
#define INTERFACE _CodeModule

DECLARE_INTERFACE_(_CodeModule, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _CodeModule methods */
    STDMETHOD(get_Parent)(THIS_ VBComponent FAR* FAR* retval) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* retval) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(put_Name)(THIS_ BSTR bstrName) PURE;
    STDMETHOD(AddFromString)(THIS_ BSTR String) PURE;
    STDMETHOD(AddFromFile)(THIS_ BSTR FileName) PURE;
    STDMETHOD(get_Lines)(THIS_ long StartLine, long Count, BSTR FAR* String) PURE;
    STDMETHOD(get_CountOfLines)(THIS_ long FAR* CountOfLines) PURE;
    STDMETHOD(InsertLines)(THIS_ long Line, BSTR String) PURE;
    STDMETHOD(DeleteLines)(THIS_ long StartLine, long Count) PURE;
    STDMETHOD(ReplaceLine)(THIS_ long Line, BSTR String) PURE;
    STDMETHOD(get_ProcStartLine)(THIS_ BSTR ProcName, vbext_ProcKind ProcKind, long FAR* ProcStartLine) PURE;
    STDMETHOD(get_ProcCountLines)(THIS_ BSTR ProcName, vbext_ProcKind ProcKind, long FAR* ProcCountLines) PURE;
    STDMETHOD(get_ProcBodyLine)(THIS_ BSTR ProcName, vbext_ProcKind ProcKind, long FAR* ProcBodyLine) PURE;
    STDMETHOD(get_ProcOfLine)(THIS_ long line, vbext_ProcKind FAR* ProcKind, BSTR FAR* pbstrName) PURE;
    STDMETHOD(get_CountOfDeclarationLines)(THIS_ long FAR* pDeclCountOfLines) PURE;
    STDMETHOD(CreateEventProc)(THIS_ BSTR EventName, BSTR ObjectName, long FAR* line) PURE;
    STDMETHOD(Find)(THIS_ BSTR Target, long FAR* StartLine, long FAR* StartColumn, long FAR* EndLine, long FAR* EndColumn, VARIANT_BOOL WholeWord, VARIANT_BOOL MatchCase, VARIANT_BOOL PatternSearch, VARIANT_BOOL FAR* pfFound) PURE;
    STDMETHOD(get_CodePane)(THIS_ CodePane FAR* FAR* CodePane) PURE;
};

DEFINE_GUID(CLSID_CodeModule,0x0002E170L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class CodeModule;
#endif

DEFINE_GUID(IID__CodePanes,0x0002E172L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _CodePanes */
#undef INTERFACE
#define INTERFACE _CodePanes

DECLARE_INTERFACE_(_CodePanes, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _CodePanes methods */
    STDMETHOD(get_Parent)(THIS_ VBE FAR* FAR* retval) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* retval) PURE;
    STDMETHOD(Item)(THIS_ VARIANT index, CodePane FAR* FAR* CodePane) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* ppenum) PURE;
    STDMETHOD(get_Current)(THIS_ CodePane FAR* FAR* CodePane) PURE;
    STDMETHOD(put_Current)(THIS_ CodePane FAR* CodePane) PURE;
};

DEFINE_GUID(CLSID_CodePanes,0x0002E174L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class CodePanes;
#endif

typedef enum {
    vbext_cv_ProcedureView = 0,
    vbext_cv_FullModuleView = 1
} vbext_CodePaneview;

DEFINE_GUID(IID__CodePane,0x0002E176L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _CodePane */
#undef INTERFACE
#define INTERFACE _CodePane

DECLARE_INTERFACE_(_CodePane, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _CodePane methods */
    STDMETHOD(get_Collection)(THIS_ CodePanes FAR* FAR* retval) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* retval) PURE;
    STDMETHOD(get_Window)(THIS_ Window FAR* FAR* retval) PURE;
    STDMETHOD(GetSelection)(THIS_ long FAR* StartLine, long FAR* StartColumn, long FAR* EndLine, long FAR* EndColumn) PURE;
    STDMETHOD(SetSelection)(THIS_ long StartLine, long StartColumn, long EndLine, long EndColumn) PURE;
    STDMETHOD(get_TopLine)(THIS_ long FAR* TopLine) PURE;
    STDMETHOD(put_TopLine)(THIS_ long TopLine) PURE;
    STDMETHOD(get_CountOfVisibleLines)(THIS_ long FAR* CountOfVisibleLines) PURE;
    STDMETHOD(get_CodeModule)(THIS_ CodeModule FAR* FAR* CodeModule) PURE;
    STDMETHOD(Show)(THIS) PURE;
    STDMETHOD(get_CodePaneView)(THIS_ vbext_CodePaneview FAR* pCodePaneview) PURE;
};

DEFINE_GUID(CLSID_CodePane,0x0002E178L,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class CodePane;
#endif

DEFINE_GUID(IID__References,0x0002E17AL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: _References */
#undef INTERFACE
#define INTERFACE _References

DECLARE_INTERFACE_(_References, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _References methods */
    STDMETHOD(get_Parent)(THIS_ VBProject FAR* FAR* retval) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* retval) PURE;
    STDMETHOD(Item)(THIS_ VARIANT index, Reference FAR* FAR* Reference) PURE;
    STDMETHOD(get_Count)(THIS_ long FAR* Count) PURE;
    STDMETHOD(_NewEnum)(THIS_ IUnknown * FAR* ppenum) PURE;
    STDMETHOD(AddFromGuid)(THIS_ BSTR Guid, long Major, long Minor, Reference FAR* FAR* Reference) PURE;
    STDMETHOD(AddFromFile)(THIS_ BSTR FileName, Reference FAR* FAR* Reference) PURE;
    STDMETHOD(Remove)(THIS_ Reference FAR* Reference) PURE;
};

typedef enum {
    vbext_rk_TypeLib = 0,
    vbext_rk_Project = 1
} vbext_RefKind;

DEFINE_GUID(IID_Reference,0x0002E17EL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

/* Definition of interface: Reference */
#undef INTERFACE
#define INTERFACE Reference

DECLARE_INTERFACE_(Reference, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* Reference methods */
    STDMETHOD(get_Collection)(THIS_ References FAR* FAR* retval) PURE;
    STDMETHOD(get_VBE)(THIS_ VBE FAR* FAR* lppaReturn) PURE;
    STDMETHOD(get_Name)(THIS_ BSTR FAR* pbstrName) PURE;
    STDMETHOD(get_Guid)(THIS_ BSTR FAR* pbstrGuid) PURE;
    STDMETHOD(get_Major)(THIS_ long FAR* pMajor) PURE;
    STDMETHOD(get_Minor)(THIS_ long FAR* pMinor) PURE;
    STDMETHOD(get_FullPath)(THIS_ BSTR FAR* pbstrLocation) PURE;
    STDMETHOD(get_BuiltIn)(THIS_ VARIANT_BOOL FAR* pfIsDefault) PURE;
    STDMETHOD(get_IsBroken)(THIS_ VARIANT_BOOL FAR* pfIsBroken) PURE;
    STDMETHOD(get_Type)(THIS_ vbext_RefKind FAR* pKind) PURE;
    STDMETHOD(get_Description)(THIS_ BSTR FAR* pbstrName) PURE;
};

DEFINE_GUID(DIID__dispReferences_Events,0xCDDE3804L,0x2064,0x11CF,0x86,0x7F,0x00,0xAA,0x00,0x5F,0xF3,0x4A);

/* Definition of dispatch interface: _dispReferences_Events */
#undef INTERFACE
#define INTERFACE _dispReferences_Events

DECLARE_INTERFACE_(_dispReferences_Events, IDispatch)
{
BEGIN_INTERFACE
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* _dispReferences_Events methods:
    void ItemAdded(Reference FAR* Reference);
    void ItemRemoved(Reference FAR* Reference);
    */
};

DEFINE_GUID(CLSID_References,0x0002E17CL,0x0000,0x0000,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x46);

#ifdef __cplusplus
class References;
#endif

#endif
