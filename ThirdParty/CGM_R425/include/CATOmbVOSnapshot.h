// COPYRIGHT Dassault Systemes 2012
//===================================================================
//
// CATOmbVOSnapshot.h
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//
//  March 2012  Creation: Code generated by the CAA wizard  VVG
//===================================================================
#ifndef CATOmbVOSnapshot_H
#define CATOmbVOSnapshot_H

/**
* @level Protected
* @usage U2
*/

#include "CATObjectModelerBase.h"
#include "CATIOmbVirtualObject.h"
#include "CATIOmbVOSnapshotAbstract.h"

#include "CATObjectModelerBase.h"
#include "CATBaseUnknown.h"
#include "CATListPtrCATIPLMComponent.h"

class CATOmbObjectInContext;
class CATIVOFactory;
class CATIOmbVOSnapshotFactory;

#include "PLMIOmbVirtualObjectDescriptor.h"

//-----------------------------------------------------------------------

/**
* This class corresponds to the base implementation class of the CATOmbVOSnapshot object (so called VOSnapshot).
*
* @href CATIOmbUpdate, CATIOmbVirtualObject
*/
class ExportedByCATObjectModelerBase CATOmbVOSnapshot: public CATIOmbVirtualObject 
{

     CATDeclareClass;

public:

    /**
    * PLM3DVOSnapshot Constructor. <br>
    * Assumes that the inputs have already been checked.
    *
    *  @param  ipiVODescriptor
    *      The VirtualObjectDescriptor representing the PLO to create
    */
    CATOmbVOSnapshot (PLMIOmbVirtualObjectDescriptor* ipiVODescriptor);

    /**
    * Destructor
    */
    virtual ~CATOmbVOSnapshot ();
    virtual ULONG __stdcall AddRef();
    virtual ULONG __stdcall Release();

    virtual HRESULT GetPathOfFirstInstances (CATLISTP(CATIPLMComponent) & oPathOfFirstInstance);

    virtual HRESULT GetRepInstance (CATIPLMComponent *& opRepInstance);

    virtual HRESULT GetTarget (CATBaseUnknown *& opTarget);

    virtual HRESULT GetRoot (CATIPLMComponent *& opRoot);

    virtual HRESULT GetObjectInContext(CATOmbObjectInContext *& oObjectInContext);

    const PLMIOmbVirtualObjectDescriptor_var & GetVODescriptor () const { return m_spVODesc ; } ;

    virtual HRESULT GetVOFactory (CATIVOFactory*&  oFactory  ) const ;

    int IsEqual(const CATBaseUnknown* iLinkable) const;
    unsigned int GetHashKey() { return m_HashKey;};

    int IsNull () const ;

    void ResetVODescriptor(){if(NULL_var != m_spVODesc) m_spVODesc->Reset();};

private:
    PLMIOmbVirtualObjectDescriptor_var m_spVODesc;

    CATIOmbVOSnapshotFactory* m_pFact;

    unsigned int m_HashKey;

    friend class CATOmbVOSnapshotFactoryAdapter;
    friend class CATVOSnapshotComparer;
    void SetFactory(CATIOmbVOSnapshotFactory* pFact);

    // The copy constructor and the equal operator must not be implemented
    // -------------------------------------------------------------------
    CATOmbVOSnapshot (CATOmbVOSnapshot &);
    CATOmbVOSnapshot& operator=(CATOmbVOSnapshot&);
};

//-----------------------------------------------------------------------

#endif
