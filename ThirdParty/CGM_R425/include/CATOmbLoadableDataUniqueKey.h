
// COPYRIGHT Dassault Systemes 2005
//===================================================================
//  Apr 2005  Creation: Code generated by the CAA wizard  PHB
//===================================================================
#ifndef CATOmbLoadableDataUniqueKey_H
#define CATOmbLoadableDataUniqueKey_H

/**
* @level  Protected
* @usage   U1
*/

#include "CATOmbSelectiveLoading.h"
#include "IUnknown.h"
#include "CATUnicodeString.h"
#include "CATOmbStreamDescriptorFormat.h"
#include "CATOmxDefaultCollecManager.h"
#include "CATOmxCollecManager.h"

/**
 * CATOmbLoadableDataUniqueKey is a triplet containing:
 *   a format: for example Authoring, AuthoringVisu (see CATOmbStreamDescriptorFormat)
 *   a role:   for example "","CATIAV5" 
 *   a persistency name (user defined, useful for example on EXTENDED streams)
 * It allows to identify a stream descriptor within its component
 */
class ExportedByCATOmbSelectiveLoading CATOmbLoadableDataUniqueKey
{
public:

	//-----------------------------------------------------------------------
	//	CDTORS
	//	======
	/**
	*	Default CTOR: internal use only
	*/
	CATOmbLoadableDataUniqueKey();

  /** Initialize a CATOmbLoadableDataUniqueKey (no check performed) */
  inline CATOmbLoadableDataUniqueKey(const CATOmbStreamDescriptorFormat& iFormat, const CATUnicodeString& iRole, const CATUnicodeString&	iPersistencyName):_Format(iFormat),_Role(iRole),_PersistencyName(iPersistencyName){}

  /** Initialize a CATOmbLoadableDataUniqueKey with empty persistency name (no check performed) */
  inline CATOmbLoadableDataUniqueKey(const CATOmbStreamDescriptorFormat& iFormat, const CATUnicodeString& iRole):_Format(iFormat),_Role(iRole) {}

  /** Initialize a CATOmbLoadableDataUniqueKey with empty role and empty persitency name (no check performed) */
  inline CATOmbLoadableDataUniqueKey(const CATOmbStreamDescriptorFormat& iFormat):_Format(iFormat) {}

	/**
	*	Copy-Constructs a Unique Key for Loadable Data.
	*/
	CATOmbLoadableDataUniqueKey ( const CATOmbLoadableDataUniqueKey& );
	/**
	*	Assigns a Unique Key for Loadable Data to another Unique Key.
	*/
	CATOmbLoadableDataUniqueKey&	operator= ( const CATOmbLoadableDataUniqueKey& );
	/**
	*	Destroys a Unique Key for Loadable Data.
	*/
	~CATOmbLoadableDataUniqueKey();

  /**returns default Authoring key (Authoring,"","")*/
  static const CATOmbLoadableDataUniqueKey& Authoring();

  /**returns default AuthoringVisu key (AuthoringVisu,"","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringVisu();

  /**returns (Authoring,"CATIAV5","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringCATIAV5();

  /**returns (Authoring,"CATIAV5INV6","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringCATIAV5INV6();

  /**returns (AuthoringVisu,"CATIAV5INV6","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringVisuCATIAV5INV6();

  /**returns (JpegThumbnail,"Jpeg_64x48","")*/
  static const CATOmbLoadableDataUniqueKey& JpegThumbnail();

  /**returns (IndexRep,"","")*/
  static const CATOmbLoadableDataUniqueKey& IndexRep();

  /**returns default AuthoringVisu key (AuthoringVisu2,"","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringVisu2();

  /**returns (Authoring,"DerivedFromCollaborative","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringDerivedFromCollaborative();

  /**returns (Authoring,"Collaborative","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringCollaborative();

  /**returns (AuthoringVisu,"DerivedFromCollaborative","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringVisuDerivedFromCollaborative();

  /**returns (AuthoringVisu2,"DerivedFromCollaborative","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringVisu2DerivedFromCollaborative();

  /**returns (Authoring,"InvalidCollaborative","")*/
  static const CATOmbLoadableDataUniqueKey& AuthoringInvalidCollaborative();

	/** returns (Authoring, "Distilled", "")*/
	static const CATOmbLoadableDataUniqueKey& AuthoringDistilled();
	
	/** returns (Authoring, "WebFormat", '')*/
	static const CATOmbLoadableDataUniqueKey& AuthoringWebFormat();

	//-----------------------------------------------------------------------
	//	ACCESSORS
	//	=========
	/**
	*	Returns the Format path of the key.
	*/
	const CATOmbStreamDescriptorFormat&	GetFormat () const		{ return _Format; }

	/**
	*	Returns the Role part of the key.
	*/
	const CATUnicodeString&			GetRole () const		{ return _Role; }

	/**
	*	Returns the PersistencyName part of the key.
	*/
	const CATUnicodeString&			GetPersistencyName () const		{ return _PersistencyName; }


  /** Return TRUE if this is a valid key*/
  CATBoolean IsValid(CATBoolean iCheckWithSelectiveLoadingDictionary = FALSE) const;

  /* returns TRUE if the key is set with valid format, role and PN ; FALSE if all data are empty*/
  CATBoolean IsSet() const;

  /** returns TRUE if keys are equivalent, this means format, role and PN are equals, or format and role are equals and PN is meaningless for this pair : the unicity is ensured by this pair*/
  CATBoolean IsEquivalent(const CATOmbLoadableDataUniqueKey& iKey);

	/**
	*	Returns the Key as a string.
  * Do not use.
	*/
	CATUnicodeString GetKeyAsString () const;


	//-----------------------------------------------------------------------
	//	OPERATORS
	//	=========
	int operator==( const CATOmbLoadableDataUniqueKey&	iOpD ) const;
	int operator!=( const CATOmbLoadableDataUniqueKey&	iOpD ) const;
	int operator<( const CATOmbLoadableDataUniqueKey&	iOpD ) const;
	int operator>( const CATOmbLoadableDataUniqueKey&	iOpD ) const;


	/** Deprecated, prefer constructor  */
	static HRESULT Create( CATOmbLoadableDataUniqueKey*&	oUniqueKey,CATOmbStreamDescriptorFormat iFormat,const CATUnicodeString& iRole,const CATBoolean& iCheckWithSelectiveLoadingDictionary = FALSE);
	/** Deprecated, prefer constructor  */
	static HRESULT Create(CATOmbLoadableDataUniqueKey*&	oUniqueKey,CATOmbStreamDescriptorFormat	iFormat,const CATUnicodeString&	iRole,const CATUnicodeString&	iPersistencyName,const CATBoolean& iCheckWithSelectiveLoadingDictionary = FALSE);

  CATBoolean IsPersistencyNameMeaningLess() const;

  CATBoolean MatchFormatAndRole(const CATOmbLoadableDataUniqueKey& iKey) const;

private:
	//-----------------------------------------------------------------------
	// Data members
	// ============
	CATOmbStreamDescriptorFormat	_Format;
	CATUnicodeString				_Role;
	CATUnicodeString				_PersistencyName;
};

template<> ExportedByCATOmbSelectiveLoading CATOmxCollecManager& CATOmxDefaultCollecManager<CATOmbLoadableDataUniqueKey>::manager();
//-----------------------------------------------------------------------

#endif
