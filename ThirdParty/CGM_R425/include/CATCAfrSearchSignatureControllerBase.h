
//===================================================================
// COPYRIGHT Microsoft 2012/11/03
//===================================================================
// CATCAfrSearchSignatureControllerBase.cpp
// Header definition of class CATCAfrSearchSignatureControllerBase
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/11/03 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATCAfrSearchSignatureControllerBase_H
#define CATCAfrSearchSignatureControllerBase_H

#include "CATAfrFoundation.h"
//---------------------------------------------------------------------- System
#include "CATBaseUnknown_WR.h"
#include "CATUnicodeString.h"
#include "CATString.h"
#include "CATCommand.h"
//--------------------------------------------------------------- AfrInterfaces
#include "CATCAfrEditorControllerBase.h"

class CATAfrComboWrapper;
class CATIAfrCommandHeaderResources_var;
class CATCommandHeader;
class CATICAfrComponent_var;
//-----------------------------------------------------------------------

/**
* Base class to manage interactions from the search signature in the Signature Bar (TopBar).
* Derive this class to manage your own behaviour.
* How to use it :
*<code>
*  CATCommandHeader * pHeader = new CATCommandHeader("MyHeaderId",...);
*  //CATCAfrMySearchSignatureController derives from CATCAfrSearchSignatureControllerBase
*  CATCAfrMySearchSignatureController * pController = new CATCAfrMySearchSignatureController(pHeader);
*  pController->Register();
*  pController->Release();
*</code>
*/
class ExportedByCATAfrFoundation CATCAfrSearchSignatureControllerBase: public CATCAfrEditorControllerBase

{
  CATDeclareClass;

public:

  // Standard constructors and destructors
  // -------------------------------------
  /**
  @Deprecated use CATCAfrSearchSignatureControllerBase (const CATString &)
  */
  CATCAfrSearchSignatureControllerBase (CATCommandHeader * i_pHeader);
  CATCAfrSearchSignatureControllerBase (const CATString & iHeaderId);

  virtual ~CATCAfrSearchSignatureControllerBase ();


public:


  /**
  *
  * Returns the header used for the search component. It can be any type of CATCommandHeader.
  * @return the Search header
  * 
  */
  CATCommandHeader  * GetSearchHeader() const;

    /**
  *
  * Init the Search component and activate its view
  * @copydoc CATCAfrEditorControllerBase#InitEditor
  * When you overrides this function, DO NOT FORGET to call back the CATCAfrSearchSignatureControllerBase::InitEditor()
  */
  virtual HRESULT InitEditor() ;
    /**
  *
  * The method starts directly the header.
  * @copydoc CATCAfrEditorControllerBase#OnEditorActivated
  */
  virtual HRESULT OnEditorActivated(const CATUnicodeString & i_text) ;

  /*@copydoc CATCAfrEditorControllerBase#OnEditorSelectedText*/
  virtual HRESULT OnEditorSelectedText(const CATUnicodeString & i_text) ;

  void SetVisibilityList(const CATBoolean & i_visibleFlag);
private:

   /**
  *
  * Return the header resources manager for the search header
  * @return the header resources manager for the search header
  * 
  */
  CATIAfrCommandHeaderResources_var GetSearchHeaderResources() const;
   void OnWindowMoved( CATCallbackEvent iEvent, void *iPublisher, CATNotification *ipNotification, CATSubscriberData iData, CATCallback iCallbackId );
  // Copy constructor and equal operator
  // -----------------------------------
  CATCAfrSearchSignatureControllerBase (CATCAfrSearchSignatureControllerBase &);
  CATCAfrSearchSignatureControllerBase& operator=(CATCAfrSearchSignatureControllerBase&);


  CATString               _headerName;
  CATAfrComboWrapper     *_fakeCombo; 
};

//-----------------------------------------------------------------------

#endif

