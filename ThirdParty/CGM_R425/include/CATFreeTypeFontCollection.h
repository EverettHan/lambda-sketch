//===================================================================
// COPYRIGHT DS SolidWorks Corporation 2011/10/24
//===================================================================
// CATFreeTypeFontCollection.cpp
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2011/10/24 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATFreeTypeFontCollection_H
#define CATFreeTypeFontCollection_H

#include "CATFreeType.h"
#include "SGInfra.h"
#include "CATBaseUnknown.h"
#include "CATFreeTypeFontCollection.h"
#include "CATFreeTypeFace.h"
#include "CATFreeTypeFactory.h"
#include "vector.h"
#include <algorithm>

class CATListValCATUnicodeString;


class ExportedBySGInfra CATFreeTypeFontCollection : public CATBaseUnknown
{
	friend class CATFreeTypeFactory;
public:
	HRESULT GetFace(CATUnicodeString const& iFamilyName, CATFreeType::FontWeight iWeight, CATFreeType::FontStyle iStyle, CATFreeTypeFace** oFace);

	HRESULT InsertFont(CATFreeTypeFontFile* iFile, CATUnicodeString const& iFamilyName, CATFreeType::FontWeight iWeight, CATFreeType::FontStyle iStyle, CATUnicodeString const& iPath, size_t iIndex);

	int GetPpemFromHeight(const CATUnicodeString &iFamilyName, CATFreeType::FontWeight iWeight, CATFreeType::FontStyle iStyle, int	iHeight);

	HRESULT Contains(CATUnicodeString const& iFamilyName, CATFreeType::FontWeight iWeight, CATFreeType::FontStyle iStyle);

	void GetFontList(CATListValCATUnicodeString& oFonts) const;

private:
	CATFreeTypeFontCollection(CATFreeTypeFactory* iFactory);
	~CATFreeTypeFontCollection();

	static const int _minHeightCached = 8;
	static const int _maxHeightCached = 40;
public:
	struct FontRec {
		CATUnicodeString			_family;
		CATFreeType::FontWeight		_weight;
		CATFreeType::FontStyle		_style;
		CATString					_path;
		size_t						_ft_index;	// index in ttc
		CATFreeTypeFontFile*		_file;
		char						_height2ppem[size_t(_maxHeightCached - _minHeightCached)];

		FontRec();

		inline bool operator==(const FontRec& other) const 
		{
			return (_weight == other._weight 
				&& _style == other._style
				&& _family == other._family
					);
		}

		inline bool operator!=(const FontRec& other) const
		{
			return !(*this==other);
		}

		CATBoolean operator<(const FontRec& other) const;
	};

	typedef vector<FontRec> FontList;

private:
	FontList::iterator FindRec(CATUnicodeString const& iFamilyName, CATFreeType::FontWeight iWeight, CATFreeType::FontStyle iStyle);

private:
	CATFreeTypeFactory* _factory;
	FontList		_fonts;
	size_t			_num_fonts;
};


#endif //CATFreeTypeFontCollection_H

