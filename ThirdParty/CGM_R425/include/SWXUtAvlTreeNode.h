//===================================================================
// COPYRIGHT DS SolidWorks 2010/09/17
//===================================================================
// SWXUtCursor.h
// Definition of SWXUtCursor
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/09/17 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXUTAVLTREENODE_H
#define SWXUTAVLTREENODE_H

class SWXUtAvlTree;
class SWXUtAvlTreeNode;

typedef int (*SWXUtCompareFunction)(const void*, const void*);
typedef void (*SWXUtDeleteFunction)(SWXUtAvlTreeNode*, void*, void*);

class SWXUtAvlTreeNode
{
public:
    const SWXUtAvlTreeNode *GetLeftSon() const;
    const SWXUtAvlTreeNode *GetRightSon() const;
    const SWXUtAvlTreeNode *GetFather() const;

    void *GetItem() const;

protected:
    SWXUtAvlTreeNode(void *item);
    ~SWXUtAvlTreeNode();

    void *GetFirstItem() const;
    void *GetLastItem() const;
    void *GetNthItem(int *iPosition) const;

    bool Contains(SWXUtCompareFunction iCompareItem, const void *iItem) const;
    void *LookForItem(SWXUtCompareFunction iCompareItem, const void *iItem) const;
    const SWXUtAvlTreeNode *LookForNodeOfItem(SWXUtCompareFunction iCompareItem, const void *iItem) const;

    const SWXUtAvlTreeNode *LowerBound(SWXUtCompareFunction iCompareItem, const void *iItem) const;
    const SWXUtAvlTreeNode *UpperBound(SWXUtCompareFunction iCompareItem, const void *iItem) const;

    void UpdateHeight();

    SWXUtAvlTreeNode *RotateRight();
    SWXUtAvlTreeNode *RotateLeft();
    SWXUtAvlTreeNode *RotateRightLeft();
    SWXUtAvlTreeNode *RotateLeftRight();
    SWXUtAvlTreeNode *Balance();

    SWXUtAvlTreeNode *InsertItem(SWXUtCompareFunction iCompareItem, SWXUtAvlTreeNode** oNewNode, void *iItem);

    SWXUtAvlTreeNode *RemoveItem(SWXUtAvlTree &iTree, void *iItem, bool *oFound, SWXUtDeleteFunction iDeleteItem, void* iClosure);
    SWXUtAvlTreeNode *GetAndRemoveMaximumItem(void **iItem);

    void DeleteItems(SWXUtDeleteFunction iDeleteItem, void* iClosure);

    friend class SWXUtAvlTree;

private:
    void              *mItem;
    SWXUtAvlTreeNode  *mLeftSon;
    SWXUtAvlTreeNode  *mRightSon;
    SWXUtAvlTreeNode  *mFather;
    int               mHeight;
};

#endif 
