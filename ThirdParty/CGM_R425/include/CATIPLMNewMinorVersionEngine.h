//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2011/04/05
//===================================================================
// CATIPLMNewMinorVersionEngine.cpp
// Header definition of class CATIPLMNewMinorVersionEngine
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2011/04/05 Creation: Code generated by the 3DS wizard
//===================================================================
/**
 * @level Protected
 * @usage U3
 */

#ifndef CATIPLMNewMinorVersionEngine_H
#define CATIPLMNewMinorVersionEngine_H

#include "CATPLMIntegrationInterfaces.h"
#include "CATIPLMVersioningEngineAbstract.h"
#include "CATPLMMinorVersioningMode.h"

extern ExportedByCATPLMIntegrationInterfaces  IID IID_CATIPLMNewMinorVersionEngine ;

/**
 * This interface defines the unique protocol of communication between the users and the new version engine for a minor version.
 * Use @href CATPLMIntegrationInterfaces.CATPLMComponentManagementBuilder#GetNewMinorVersionEngine to get a pointer on the new version engine.
 * Globally, the user can:
 * <ul>
 * <li>Ask for a new minor version operation to be performed on a component and specify a set of parameters for this new minor version operation.</li>
 * <li>Retrieve the new components available after the operation.</li>
 * </ul>
 */
class ExportedByCATPLMIntegrationInterfaces CATIPLMNewMinorVersionEngine: public CATIPLMVersioningEngineAbstract
{
CATDeclareInterface;

public:

/** 
 * Adds a versioning datum for further treatment by the engine.
 *
 * <br><b>Role</b>: Enables to add a versioning datum in the set of data which will be treated when calling the 
 * @href CATIPLMVersioningEngineAbstract#RunVersioningOperation.
 * <ul>
 * <li> This entry point can only be used in other mode than IntoFamily. A call to this entry point in IntoFamily
 * mode will result in a E_ACCESSDENIED return.</li> 
 * </ul>
 *
 * @param iComponent [in]
 *   The component which will have to be versioned. Its family (major version, version id, logical id) will be kept on the result.  
 * <ul>
 * <li> The identifier must not be CATPLMID_Null. Otherwise, the call will result in a E_INVALIDARG return.</li> 
 * </ul>
 * @param iAction [in]
 *   The action which must be applied on the new version. If no action is available, use CATPLMID_Null as argument.
 * @param iApplicabilityDate [in]
 *   The applicability date for the new version availability.
 *
 * @return
 *   <ul>
 *   <li><tt>S_OK</tt> if the component can be taken into account by the engine. It was added to the set of data to be treated by the engine. </li> 
 *   <li><tt>E_INVALIDARG</tt> if one of the provided entry is invalid.</li>
 *   <li><tt>E_ACCESSDENIED</tt> if this entry point is not compatible with the versioning mode.</li>
 *   <li><tt>E_FAIL</tt> if the operation failed.</li>
 *   </ul>
 */
  virtual HRESULT AddVersioningDatum( const CATPLMID & iComponent, 
                                      const CATPLMID & iAction, const CATTime & iApplicabilityDate ) = 0;
};

//-----------------------------------------------------------------------
CATDeclareHandler( CATIPLMNewMinorVersionEngine, CATBaseUnknown );

#endif
