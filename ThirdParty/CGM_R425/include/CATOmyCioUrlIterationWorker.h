// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATOmyCioUrlIterationWorker.h
// Header definition of CATOmyCioUrlIterationWorker
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Jan 2006  Creation: Code generated by the CAA wizard  FLE
//===================================================================
/**
 * @level Protected
 * @usage U1
 */
#ifndef CATOmyCioUrlIterationWorker_H
#define CATOmyCioUrlIterationWorker_H

#include "CATOMYCuteIOAccess.h"
#ifndef CuteIOAccessIterCompileError
#pragma message("!! Stop including deprecated " __FILE__  ", use instead CATVVSUrlAndStreamManager::CopyUrlsToUrls")
#else
#error "!! Stop including deprecated " __FILE__  ", use instead CATVVSUrlAndStreamManager::CopyUrlsToUrls"
#endif

#include "CATVVSUrl.h"
#include "CATUnicodeString.h"
#include "CATListOfCATOmyCioUrlIteration.h"

class CATIOmyCioCallBack;
class CATVVSTransaction;
/**
 * Enable Consumer Applications to Copy UrlIteration
 */
class ExportedByCATOMYCuteIOAccess CATOmyCioUrlIterationWorker
{
  public:

 /***
   * Constructs a context to load a stream.
   * @param iFrom [IN]
   *    List of url to copy
   * @param iTo [IN]
   *    List of url in which to copy
   */
   CATOmyCioUrlIterationWorker( const CATListOfCATOmyCioUrlIteration& iFrom, const CATListOfCATOmyCioUrlIteration& iTo, CATVVSTransaction * const vvsSession = NULL);

  /** 
   * Starts the operation of copy
   * @param ioCallBack [inout]
   *   This notifier indicates for each URL, if CuteIO has  successfully performed the operation
   * @return
   *   <code>S_OK</code> if everything ran ok, otherwise E_FAIL.
   */
   HRESULT Run(const CATIOmyCioCallBack* iCallBack);

   ~CATOmyCioUrlIterationWorker();

 private:
  CATListOfCATOmyCioUrlIteration _from ;
  CATListOfCATOmyCioUrlIteration _to ;
  CATVVSTransaction* _VVSSession ;
};

#endif


