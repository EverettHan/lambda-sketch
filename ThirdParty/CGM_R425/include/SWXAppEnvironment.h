//===================================================================
// COPYRIGHT DS SolidWorks 2010/08/09
//===================================================================
// SWXAppEnvironment.cpp
// Header definition of class SWXAppEnvironment
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/08/09 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXAppEnvironment_H
#define SWXAppEnvironment_H

#include "SWXUtGeneral.h"
#include "CATBaseUnknown.h"
#include "SWXAppNotificationListeners.h"

class SWXIAppNotificationHandler;

class ExportedBySWXUtGeneral SWXAppEnvironment : public CATBaseUnknown
{
public:
	// Standard destructors
	// -------------------------------------
	virtual ~SWXAppEnvironment ();

	//Get the only instance
	static SWXAppEnvironment & Get();

	//Called on App shutdown
	void ShutdownApplication();

	HRESULT AddShutDownListener(SWXIAppNotificationHandler * iNotificationHandler);
	CATBaseUnknown * GetShutDownListener(const char * iClassName);

	//Check to see if the enviroment is running under unit testing
	bool IsRunningInTestMode();
	void SetRunningInTestMode(bool iRunningInTestMode);

	/**
	* @deprecated V6R2014x
	* Horrid hack added to disable autoloading of SWX workbench when running CNext
	*/
	void SetRunningSWXApp(bool iSWX);

	/**
	* @deprecated V6R2014x
	* Horrid hack added to disable autoloading of SWX workbench when running CNext
	*/
	bool IsRunningSWXApp();

	// Do not call directly will get called in Get() to be made private
	static void Initialize();
private:
	// Standard constructors
	// -------------------------------------
	SWXAppEnvironment ();

	// Copy constructor and equal operator
	// -----------------------------------
	SWXAppEnvironment (SWXAppEnvironment &);
	SWXAppEnvironment& operator=(SWXAppEnvironment&);

	SWXAppNotificationListeners mShutdownListeners;
	bool mRunningInTestMode;
	bool mRunningSWXApp;
};

//-----------------------------------------------------------------------

#endif
