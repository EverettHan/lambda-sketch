// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATIPLMIdentifierSet.h
// Define the CATIPLMIdentifierSet interface
//
//===================================================================
//
// Usage notes:
//   New interface: Interface to access the internal name. 
//
//===================================================================
//
//  Mar 2006  Creation: Code generated by the CAA wizard  chk
//===================================================================

/**
  * @CAA2Level L1
  * @CAA2Usage U3
  */

#ifndef CATIPLMIdentifierSet_H
#define CATIPLMIdentifierSet_H

#include "CATPLMComponentInterfaces.h"
#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMComponentInterfaces IID IID_CATIPLMIdentifierSet;
#else
extern "C" const IID IID_CATIPLMIdentifierSet ;
#endif

//------------------------------------------------------------------

/**
* Interface to access the internal name.
* <b>role</b> This interface gives the concatenation of identification set attribute values.
* <br> <b> Warning:</b> @href CATIAlias returns the external name not necessary unique.
*/
class ExportedByCATPLMComponentInterfaces CATIPLMIdentifierSet: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /**
     * Retrieves the internal name.
	 * 
	 * @param oConcatenedIdSet 
	 *				The internal name without separator between attribute values.
	 *
	  * @return
		 *   HRESULT
		 *   <br><b>Legal values</b>:
		 *   <dl>
		 *     <dt>S_OK</dt>
		 *     <dd>The name is successfully retrieved.</dd>
		 *     <dt>E_FAIL</dt>
		 *     <dd>Otherwise.</dd>
		 *   </dl>
     */

	  virtual HRESULT GetIdentifierSet ( CATUnicodeString & oConcatenedIdSet ) = 0 ;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------
CATDeclareHandler(CATIPLMIdentifierSet, CATBaseUnknown );

#endif
