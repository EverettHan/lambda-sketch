//===================================================================
// COPYRIGHT DS SolidWorks 2010/07/19
//===================================================================
// SWXUtUniqueId.h
// Header definition of class SWXUtUniqueId
//===================================================================
//
// Usage notes:
// Class is a wrapper around an int and is only created by
// SWXUtUniqueIdFactory
// SWXUtUniqueIdFactory is not unique so SWXUtUniqueId created by
// different factories *SHOULD NOT* be compared.
//
//===================================================================
//  2010/07/21 Creation: Code generated by the 3DS wizard
//===================================================================


#ifndef SWXUtUniqueId_H
#define SWXUtUniqueId_H

class SWXUtUniqueId
{
	friend class SWXUtUniqueIdFactory;
	friend class Compare;

public:
	SWXUtUniqueId() : mId(-1) {}
	bool operator==(const SWXUtUniqueId& iOb) const {return mId==iOb.mId;}
	bool operator!=(const SWXUtUniqueId& iOb) const {return !(*this == iOb);}
	bool IsValid() const {return mId != -1;}

	bool operator<(const SWXUtUniqueId& iId2) const { return mId < iId2.mId; }

	// Comparison operator for SWXUtUniqueId.
	// Would it be better just to define operator< ?
	class Compare
	{
	public:
		bool operator()(const SWXUtUniqueId& iId1, const SWXUtUniqueId& iId2) const {return iId1.mId < iId2.mId;}
	};

private:
	SWXUtUniqueId(int iId) : mId(iId) {}
	int mId;
};

#endif
