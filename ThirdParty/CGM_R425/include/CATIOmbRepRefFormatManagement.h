// COPYRIGHT Dassault Systemes 2005
//===================================================================
//  Apr 2005  Creation: Code generated by the CAA wizard  bes
//===================================================================
#ifndef CATIOmbRepRefFormatManagement_H
#define CATIOmbRepRefFormatManagement_H

/**
* @level  Protected
* @usage   U3
*/

#include "CATOmbSelectiveLoadingForRestrictedClients.h"
#include "CATBaseUnknown.h"
#include "CATOmbPersistErrorDef.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATOmbSelectiveLoading IID IID_CATIOmbRepRefFormatManagement;
#else
extern "C" const IID IID_CATIOmbRepRefFormatManagement;
#endif

class CATOmbLoadableDataUniqueKey;
class CATOmbImportExportParameters;
class CATIComponent;
class CATUnicodeString;

/**
* Interface for managing (Add/Remove) Secondary Formats on a RepRef.
* <b>Role:</b> This interface is implemented by the PLM component RepresentationReference.
* Use this interface to manage (Add+Compute) Secondary Formats on a RepRef.

* A format is to be understood here as the association of a Stream Descriptor (SD) under the RepRef, and its associated stream:
* -The SD is always present in the current session after it has beeen created/saved and when the repref is re-opened.
* -The stream is computed by a dedicated Exporter at Save and then located either in SessionCache/Vault after it has been Saved
*  or in the session, if loaded by applicative caller.

* Primary format stands for the Authoring Stream Descriptor of the RepRef and its associated stream.
* It is created by application
*
* Secondary formats stand for the extra SDs and their associated streams, generated At Save time from the primary format of the RepRef.
* Secondary formats are either implicitely declared by the system or explicitely declared by application as to be (re)generated at Save,
* mainly when (re)saving the primary format.

* Several categories of explicit secondary formats gebneration requests can be instanciated, using dedicated Request*SecondaryFormatGeneration calls,
* each having a specific life/re-generation cycle in session, but sharing the same core behaviour:

* If no existing SD with same key is aggregated to this repref: at NEXT Save following the request:
*    - a new Stream Descriptor is created in session, aggregated to its RepRef
*    - The applicative Exporter matching Request inputs is called to generate the stream
*    - SD/associated stream are uploaded to MCS/FCS

* If a SD with same key is already aggregated to this repref, at A Save following the request, but depending on request life cycle policy:
*    - The applicative Exporter matching Request inputs is called to re-generate the stream
*    - SD/associated stream are uploaded to MCS/FCS

* The applicative exporter to be used to compute the secondary stream is retrieved into the specific .xdefinition declarative file by matching the component core type,
* the main stream descriptor type, the format, and the requested extension.<br>
* example: Exporter[CATApplicativeExporter]  From[PLMCoreRepReference, CATData]  Generates[jpeg, AuthoringVisu]

* If successive occurrences of an explicit Request*SecondaryFormatGeneration adressing the same SD, even with different parameters, are called before Save,
* only the First one is taken into account.
*/

class ExportedByCATOmbSelectiveLoading CATIOmbRepRefFormatManagement : public CATBaseUnknown
{
  CATDeclareInterface;

public:
  /**
  * Requests the generation of a secondary format.<br>
  * <b>Role:</b> The secondary format will be generated at next save, using an exporter.<br>
  * Important Notes:
  * This service fails when called during a switch operation.
  * Life cycle:
  *  -The secondary format SD is not created, if not yet, immediately after this call, but at next Save.
  *  -The secondary format request is Asynchronous: the request is deleted after the following Save and is so to be re-declared by this call
  *   each time the stream should be regenerated by a next Save operation.
  *  -The stream is regenerated by the following Save, either the primary format is to be saved or not
  *
  * @param iKey
  *       The unique Key that defines the Stream Descriptor. The Key is created from the format, the role, and the PersistencyName of the SD
  *       using @href CATOmbLoadableDataUniqueKey#Create
  *       format cannot be CATOmbStreamDescriptorFormat_Authoring or CATOmbStreamDescriptorFormat_AuthoringVisu
  * @param iExtension
  *       The extension of the Non CATIA document to be generated (ex "cgr", "3DMap"...)
  * @param iParameters
  *       Optional parameters for the exporter (string to string map)
  * @param iComponentToBeExported
  *       Optional component to be used by the exporter, if not the RepresentationReference itself.
  *
  * @return
  *     S_OK: Secondary format generation request accepted.
  *     E_FAIL: unexpected error.
  *     CATOmb_E_KEY_INVALID: the key is not seen as a valid key in the dictionary, or it corresponds to a secondary format that can not be generated through a request.
  *     CATOmb_S_GenRequestIgnored: SUCCEEDED but does nothing, as called during inappropriate context: Component checker batch, ...
  */
  virtual HRESULT RequestSecondaryFormatGeneration(const CATOmbLoadableDataUniqueKey& iKey, const CATUnicodeString &iExtension, CATOmbImportExportParameters* iParameters = NULL, CATBaseUnknown *ipComponentToBeExported = NULL) = 0;

  /**
  * Requests the generation of an extended secondary format.<br>
  * <b>Role:</b> The extended secondary format will be (eventually re-)generated at next save using an exporter.<br>
  * An extended secondary format extends the visualisation of the primary format, provided by the main secondary format, to adjacent visualisation informations.
  * for example, simulation visu resulting stream(s) can be computed from Authoring CATData informations it is related to and displayed together with its main
  *  secondary format.
  * It works asynchronously: one stream computation at first Save following the request and only one
  * Important Notes:
  * This service fails when called during a switch operation.
  * Life cycle:
  *  -The extended secondary format SD is not created, if not yet, immediately after this call, but at next Save.
  *  -The extended secondary format request is explicitely Asynchronous: one stream computation at first Save following the request and only one:
  *  -The extended secondary format SD is effectively created or modified at first Save following the request, but ONLY IF the primary format (main authoring SD) is modified, so to be saved.
  *  -The user request is to be (re)declared each time the stream is to be regenerated by a next Save operation:
  *      when the primary format is NOT modified:
  *         -if Save only applies on attribute(s) modification: the extended secondary format SD is not created/modified and the request is deleted at save end.
  *         -if Save does nothing (no modification): the extended secondary format SD is not created but the request remains until next EFFECTIVE Save.
  *      when the primary format is modified:
  *         -Save applies on Main authoring SD creation/modification: the extended secondary format SD is also created/modified and the request is deleted at save end.
  *  -All extended secondary formats created can be loaded together in session with their main secondary format. It is not possible to load
  *   each extended secondary format individually or without its main secondary format.
  *  -If a secondary format SD with the same key already exists, it is NOT replaced by later occurrences of this call.
  *
  * @param iKey
  *       The unique Key that defines the Stream Descriptor. The Key is created from the format, the role, and the PersistencyName of the SD
  *       using @href CATOmbLoadableDataUniqueKey#Create
  *       mandatory values for Format and role are: Format: CATOmbStreamDescriptorFormat_AuthoringVisu / Role: "EXTENDED"
  * @param iExtension
  *       The extension of the Non CATIA document to be generated (ex "txt", "zip", "jpeg", ...)
  * @param iParameters
  *       Optional parameters for the exporter (string to string map)
  * @param iComponentToBeExported
  *       Optional component to be used by the exporter, if not the RepresentationReference itself.
  * @return
  *     S_OK: Secondary format generation request accepted.
  *     E_FAIL: unexpected error.
  *     CATOmb_E_KEY_INVALID: the key is not seen as a valid key in the dictionary, or it corresponds to a secondary format that can not be generated through a request.
  *     CATOmb_S_GenRequestIgnored: SUCCEEDED but does nothing, as called during inappropriate context: Component checker batch, ...
  */
  virtual HRESULT RequestExtendedSecondaryFormatGeneration(const CATOmbLoadableDataUniqueKey& iKey, const CATUnicodeString &iExtension, CATOmbImportExportParameters* iParameters = NULL, CATBaseUnknown *ipComponentToBeExported = NULL) = 0;

  /**
  * Requests the generation of an alternative secondary format.<br>
  * <b>Role:</b> The alternative secondary format will be (re-)generated at next save(s) using an exporter.<br>
  * An alternative secondary format eventually replaces for use the main secondary visualisation format of the Authoring primary format, allowing to display
  * the same authoring data, depending on the context, using one of these distinct visualisation formats.
  * (for example, visualization data of Authoring CATPart can be computed synchronously into CGR and SVG formats, exclusively displayed later, on aplication purpose)
  * Important Notes:
  * This service fails when called during a switch operation.
  * Life cycle:
  *  -The alternative secondary format SD is not created, if not yet, immediately after this request call, but at next Save.
  *  -The alternative secondary format SD is effectively created or modified at first Save following the request, but ONLY IF the primary format (main authoring SD) is modified, so to be saved:
  *  -When the primary format is NOT modified:
  *         -if Save only applies on attribute(s) modification: the alternative secondary format SD is not created/modified.
  *         -if Save does nothing (no modification): the alternative secondary format SD is not created/modified.
  *      when the primary format is modified:
  *         -Save applies on Main authoring SD creation/modification: the alternative secondary format SD is also created/modified.
  *  -The alternative secondary format is implicitely Synchronous: once created, when it primary format is modified and saved, it is regenerated systematically, as the Main secondary format is,
  *   as long as the component lives in session.
  *  -The user request is NEVER to be (re)declared between Save operations, as it lives as long as the RepRef in session.
  *  -One and Only one alternative secondary format created can be loaded in session at a time, instead of its main secondary format.
  *  -Applicative parameters passed by this call to the exporter remain, for each successive Save, as long as the created format remains
  *   created/saved in current session.
  *  -After a RepRef is re-open and its alternative Visu SDs rebuild in current session, an implicit system request is generated, in a way that matching Exporter will
  *   systematically be called at Save, but without applicative parameters, to ensure SD synchronisation:
  *   Applicative parameters can be passed again to the exporter, using this call, overloading ONCE the implicit system request.
  *   (if successive RequestAlternativeSecondaryFormatGeneration are called before a Save, only the first one is taken into account)
  *  - if a request has been set in current session, either applicative or by the system, it remains in session as long as the RepRef it is attached to.
  *
  * @param iKey
  *       The unique Key that defines the Stream Descriptor. The Key is created from the format, the role, and the PersistencyName of the SD
  *       using @href CATOmbLoadableDataUniqueKey#Create
  *       mandatory values for Format and role are: Format: CATOmbStreamDescriptorFormat_AuthoringVisu / Role: "ALTERNATIVE"
  * @param iExtension
  *       The extension of the Non CATIA document to be generated (ex "txt", "zip", "jpeg", ...)
  * @param iParameters
  *       Optional parameters for the exporter (string to string map)
  * @param iComponentToBeExported
  *       Optional component to be used by the exporter, if not the RepresentationReference itself.
  * @return
  *     S_OK: Secondary format generation request accepted.
  *     E_FAIL: unexpected error.
  *     CATOmb_E_KEY_INVALID: the key is not seen as a valid key in the dictionary, or it corresponds to a secondary format that can not be generated through a request.
  *     CATOmb_S_GenRequestIgnored: SUCCEEDED but does nothing, as called during inappropriate context: Component checker batch, ...
  */
  virtual HRESULT RequestAlternativeSecondaryFormatGeneration(const CATOmbLoadableDataUniqueKey& iKey, const CATUnicodeString &iExtension, CATOmbImportExportParameters* iParameters = NULL, CATBaseUnknown *ipComponentToBeExported = NULL) = 0;

};

CATDeclareHandler(CATIOmbRepRefFormatManagement, CATBaseUnknown);

#endif
