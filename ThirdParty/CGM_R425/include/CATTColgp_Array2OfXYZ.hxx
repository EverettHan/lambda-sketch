// File generated by CPPExt (Value)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.

#ifndef _CATTColgp_Array2OfXYZ_HeaderFile
#define _CATTColgp_Array2OfXYZ_HeaderFile

#ifndef _CATStandard_Integer_HeaderFile
#include "CATStandard_Integer.hxx"
#endif
#ifndef _CATStandard_Boolean_HeaderFile
#include "CATStandard_Boolean.hxx"
#endif
#ifndef _CATStandard_Address_HeaderFile
#include "CATStandard_Address.hxx"
#endif
class CATStandard_RangeError;
class CATStandard_OutOfRange;
class CATStandard_OutOfMemory;
class CATStandard_DimensionMismatch;
class CATgp_XYZ;


#ifndef _CATStandard_Macro_HeaderFile
#include "CATStandard_Macro.hxx"
#endif

#include "SysCascade.h"

class CATTColgp_Array2OfXYZ  {

public:

 // Methods PUBLIC
 // 
ExportedBySysCascade  CATTColgp_Array2OfXYZ(const CATStandard_Integer R1,const CATStandard_Integer R2,const CATStandard_Integer C1,const CATStandard_Integer C2);
ExportedBySysCascade  CATTColgp_Array2OfXYZ(const CATgp_XYZ& Item,const CATStandard_Integer R1,const CATStandard_Integer R2,const CATStandard_Integer C1,const CATStandard_Integer C2);
ExportedBySysCascade    void Init(const CATgp_XYZ& V) ;
ExportedBySysCascade    void Destroy() ;
~CATTColgp_Array2OfXYZ()
{
  Destroy();
}

ExportedBySysCascade   const CATTColgp_Array2OfXYZ& Assign(const CATTColgp_Array2OfXYZ& Other) ;
 const CATTColgp_Array2OfXYZ& operator =(const CATTColgp_Array2OfXYZ& Other) 
{
  return Assign(Other);
}

inline   CATStandard_Integer ColLength() const;
inline   CATStandard_Integer RowLength() const;
inline   CATStandard_Integer LowerCol() const;
inline   CATStandard_Integer LowerRow() const;
inline   CATStandard_Integer UpperCol() const;
inline   CATStandard_Integer UpperRow() const;
inline   void SetValue(const CATStandard_Integer Row,const CATStandard_Integer Col,const CATgp_XYZ& Value) ;
inline  const CATgp_XYZ& Value(const CATStandard_Integer Row,const CATStandard_Integer Col) const;
inline  const CATgp_XYZ& operator()(const CATStandard_Integer Row,const CATStandard_Integer Col) const
{
  return Value(Row,Col);
}

inline   CATgp_XYZ& ChangeValue(const CATStandard_Integer Row,const CATStandard_Integer Col) ;
inline   CATgp_XYZ& operator()(const CATStandard_Integer Row,const CATStandard_Integer Col) 
{
  return ChangeValue(Row,Col);
}






protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 
ExportedBySysCascade  CATTColgp_Array2OfXYZ(const CATTColgp_Array2OfXYZ& AnArray);
ExportedBySysCascade    void Allocate() ;


 // Fields PRIVATE
 //
CATStandard_Integer myLowerRow;
CATStandard_Integer myLowerColumn;
CATStandard_Integer myUpperRow;
CATStandard_Integer myUpperColumn;
CATStandard_Boolean myDeletable;
CATStandard_Address myData;


};

#define Array2Item CATgp_XYZ
#define Array2Item_hxx <CATgp_XYZ.hxx>
#define CATTCollection_Array2 CATTColgp_Array2OfXYZ
#define CATTCollection_Array2_hxx <CATTColgp_Array2OfXYZ.hxx>

#include "CATTCollection_Array2.lxx"

#undef Array2Item
#undef Array2Item_hxx
#undef CATTCollection_Array2
#undef CATTCollection_Array2_hxx


// other inline functions and methods (like "C++: function call" methods)
//


#endif
