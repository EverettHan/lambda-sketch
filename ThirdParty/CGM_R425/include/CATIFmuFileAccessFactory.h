// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATIFmuFileAccessFactory.h
// Define the CATIFmuFileAccessFactory interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
/**
 * @level Protected
 * @usage U5
 */
//
//===================================================================
//
//  Jul 2006  Creation: Code generated by the CAA wizard  JBT
//===================================================================
#ifndef CATIFmuFileAccessFactory_H
#define CATIFmuFileAccessFactory_H

#include "CATFmuFileAccessItfCPP.h"
#include "CATBaseUnknown.h"

class CATIFmuDialogBox;
class CATDialog;
class CATString;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATFmuFileAccessItfCPP IID IID_CATIFmuFileAccessFactory;
#else
extern "C" const IID IID_CATIFmuFileAccessFactory ;
#endif

//------------------------------------------------------------------
  /**
   * Interface to create file or document related dialog boxes.
   *
   * <br><b>Role</b>: A File Selection Box (FSB) can be created using this factory.
   * You require an interface from CATApplicationFrame::GetFrame(). With the returned interface, you can create a file, folder chooser.<br>
   * Sample:<pre>
   *  CATApplicationFrame *pApplicationFrame = CATApplicationFrame::GetFrame();
   *  if (pApplicationFrame != NULL)
   *    hr = pApplicationFrame->QueryInterface(IID_CATIFmuFileAccessFactory, (void**)&pFmuFileAccessFactory);</pre>
   * This interface is implemented. Don't implement it again.
   */
class ExportedByCATFmuFileAccessItfCPP CATIFmuFileAccessFactory: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

  /**
   * Creates a dialog box of the File menu in the curent document environment.
   * <br><b>Role</b>: Creates a dialog box of the file menu.
   * @param ipDlgParent
   *   The parent class in the CATCommand agregation
   *   hierarchy. The parent must be an instance of a class that derives
   *   from CATDlgInteractiveApplication or CATDlgDocument.
   *   The notifications are first sent to it.<br>
   *   If the caller is a @href CATCommand and not a @href CATDialog , you should call<pre>
   *      CATCommand *pCmd = pDlgBox->GetEventPublisher(); 
   *      pCmd->SetFather(<the caller>);</pre>
   *   in order to let the caller recieve the notifications.
   * @param iDialogObjectName
   *   The dialog object name.
   * @param iStyle
   *   The application window styles. You can cumulate several
   *   styles using a logical or.
   *   <br><b>Legal values</b>: <tt>NULL (default)</tt> so that the
   *   file window features the OK and Cancel push buttons (it is dedicated
   *   to opening files), or <tt>CATDlgWndModal</tt> if, in addition to the default
   *   style, the file window is modal (that is, no interaction is possible outside
   *   this window as long as it is displayed), or <tt>CATDlgWndAPPLY</tt>
   *   if, in addition to the default style, the file window features
   *   the Apply push button, or <tt>CATDlgWndHELP</tt>
   *   if, in addition to the default style, the file window features
   *   the Help push button, or <tt>CATDlgFileMultisel</tt>
   *   if the file window enables the file multiple selection.
   *   or <tt>CATDlgFileSave</tt> if the file window is dedicated to saving files.
   *   (the Open push button is replaced by the Save push button),
   *   or <tt>CATDlgFolderChooser</tt> if the file window is dedicated
   *   to select a Folder. Notice that CATDlgFileSave and CATDlgFolderChooser
   *   styles are mutually exclusive
   * @param oDialogBox [out, CATBaseUnknown#Release]
   *    The created dialog box.
   * @return
   * The status call
   * <br><b>Legal values</b>: S_OK, E_FAIL,
   */
   virtual HRESULT CreateDialogBox ( CATDialog        *  iDialogFather,
                                     const CATString  &  iDialogName,
                                     unsigned long       iStyle,
                                     CATIFmuDialogBox *& oDialogBox ) = 0;

};

//------------------------------------------------------------------

#endif
