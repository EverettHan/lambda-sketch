// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// CATPatternFactory.h
// Header definition of CATPatternFactory
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Jul 2008  Creation: Code generated by the CAA wizard  noh
//===================================================================
#ifndef CATPatternFactory_H
#define CATPatternFactory_H

/**
 * @CAA2Level L1
 * @CAA2Usage U1
 */

#include "CATPLMModelerBaseInterfaces.h"
#include "CATBaseUnknown.h"

/**
 * Class to retrieve the 3DPart object factory.<br>
 * <b>Role</b>: This class provides the factory object that will enable to create a 3DPart.
 */
class ExportedByCATPLMModelerBaseInterfaces CATPatternFactory: public CATBaseUnknown
{
	CATDeclareClass;

public:	

	/**
	 * Retrieves a pointer on a factory interface.
	 * @param iIID 
   *		The factory interface identifier.
   *		For 3DPart creation factory : IID_CATIPrd3DPartFactory.
   * @param opFactory 
   *			The pointer on the factory interface.
   * @return
   *      <ul>
   *       <li>S_OK if the interface pointer has been successfully created.</li>
   *       <li>E_FAIL if an unexpected error occured.</li>
   *      </ul>  
   */ 
	static HRESULT CreatePatternFactory (const IID& iIID, void** opFactory);

	/**
	 * Constructs an empty CATPatternFactory.
	 */
	CATPatternFactory();

	/**
	 * Destructs a CATPatternFactory pointer.
	 */
	virtual ~CATPatternFactory();

private:

	// Copy constructor and equal operator
	// -----------------------------------
	CATPatternFactory (CATPatternFactory &);
	CATPatternFactory& operator=(CATPatternFactory&);

};

//-----------------------------------------------------------------------

#endif
