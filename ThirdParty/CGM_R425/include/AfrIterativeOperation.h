//===================================================================
// COPYRIGHT Dassault Systemes 2015/06/11
//===================================================================
// AfrIterativeOperation.cpp
// Header definition of class AfrIterativeOperation
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2015/06/11 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef AfrIterativeOperation_H
#define AfrIterativeOperation_H

#include "AfrComputeServer.h"
#include "AfrComputeServerUtilities.h"
#include "AfrOperation.h"

class l_AfrIterativeOperation;
//-----------------------------------------------------------------------

class ExportedByAfrComputeServer AfrIterativeOperation: public AfrOperation
{
  public:

    // Standard constructors and destructors
    // -------------------------------------
    AfrIterativeOperation (const CATUnicodeString& iOperationId, CSI::Node& node);
    virtual ~AfrIterativeOperation ();
    
    //internal infra pre/post treatment
    // ----------------------------------- 
    HRESULT OnBegin     (const CSI::Parameters& parameters, CSI::Channel& origin);
    HRESULT OnCommand   (const CSI::Parameters& parameters, CSI::Channel& origin);
    HRESULT OnEnd       (const CSI::Parameters& parameters, CSI::Channel& origin);

  protected:

    //To override: Put in this method your command intelligence
    virtual HRESULT Begin(CSI::Parameters& inputs, CSI::Parameters& outputs) = 0;
    virtual HRESULT Do(CSI::Parameters& inputs, CSI::Parameters& outputs) = 0;
    virtual HRESULT End(CSI::Parameters& inputs, CSI::Parameters& outputs) = 0;

    virtual HRESULT Canceled(CSI::Parameters& inputs, CSI::Parameters& outputs) {return S_OK;};

    HRESULT CreatedIterationUndoStep(const CATUnicodeString& iUndoTitle);

  private:
    
    l_AfrIterativeOperation* _letter;

    // Copy constructor and equal operator
    // -----------------------------------
    AfrIterativeOperation (AfrIterativeOperation &);
    AfrIterativeOperation& operator=(AfrIterativeOperation&);
     
};

//-----------------------------------------------------------------------

#endif
