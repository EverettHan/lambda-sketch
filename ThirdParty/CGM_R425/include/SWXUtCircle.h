//===================================================================
// COPYRIGHT DS SolidWorks 2010/04/22
//===================================================================
// SWXUtCircle.cpp
// Header definition of class SWXUtCircle
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/04/22 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXUtCircle_H
#define SWXUtCircle_H

#include "SWXMathematics.h"
#include "SWXUtCSys.h"

#include "CATMathPoint.h"
#include "CATMathDirection.h"
#include "SWXUtCircle_Ptr.h"

class CATMathTransformation;

//-----------------------------------------------------------------------

class ExportedBySWXMathematics SWXUtCircle: public SWXUtCSys
{
public:
	SWXUtCircle (CATMathPoint const &iCenter, CATMathDirection const &iAxis, double iRadius);
    SWXUtCircle (CATMathPoint const &iCenter, CATMathDirection const &iAxis, 
        CATMathDirection const &iXDir, double iRadius);
	SWXUtCircle () {};
	virtual ~SWXUtCircle ();
	void CenterCoord(double &oX, double &oY, double &oZ) const;
	void AxisCoord(double &oX, double &oY, double &oZ) const;
	const CATMathPoint& Center() const {return Point();}
	const CATMathDirection& Axis() const {return ZDir();}
	double Radius() const { return mRadius;}
	void SetRadius(double iRadius){ mRadius = iRadius;}

	virtual void ApplyTransformation(CATMathTransformation const &iTransformation);
	virtual SWXUtGeometry_Ptr Clone() const;

	virtual bool Accept(SWXUtGeomVisitor *iVis); 
	virtual bool Accept(SWXUtGeomVisitor *iVis) const;
	virtual bool GetTangentAtPoint(CATMathPoint const &iPnt,CATMathVector &oV) const;
	bool ProjectPoint( const CATMathPoint& iv2point, CATMathPoint *oPnt, double *oParam=NULL);
	void EvalPoint( double iParam, CATMathPoint& oPoint);
	double ArcLength(double iStartParam, double iEndParam) const;

private:
	double mRadius;

};

//-----------------------------------------------------------------------
#endif
