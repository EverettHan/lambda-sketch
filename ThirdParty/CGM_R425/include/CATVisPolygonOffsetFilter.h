//===================================================================
// COPYRIGHT Dassault Systemes 2022-05-31
//===================================================================
// CATVisPolygonOffsetFilter.cpp
// Header definition of class CATVisPolygonOffsetFilter
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2022-05-31 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATVisPolygonOffsetFilter_H
#define CATVisPolygonOffsetFilter_H

#include "CATVisFilter.h"
#include "SGInfra.h"
#include "VisFilteringEnums.h"

//-----------------------------------------------------------------------

//This filter allows to depth offset the graphic entities by a tiny amount (as per the mode) while rendering.
//This filter has no effect on the 2D Reps
//Multiplicity: It does not make sense and is not recommended to add multiples of this filter on the same filter bag. However, if added, the last added will override any previously added.
//Inheritance : The filter does not support any inheritance, so on the branch of the scene graph, the child filter will affect the polygon offsets of its descendants independent of parent filter if any.
//Consistency : The effect of polygon offset modes on overlapping entities remain view-point dependent so resolving the Z-fighting between the two overlapping faces using this filter is not always guaranteed.

class  ExportedBySGInfra CATVisPolygonOffsetFilter : public CATVisFilter
{
  CATDeclareVisFilter(CATVisPolygonOffsetFilter);

public:

  //Creator
  //iPolygonOffsetMode [in] 
  static CATVisPolygonOffsetFilter* Create(EPolyOffsetFilterMode iPolygonOffsetMode);

  //Setter
  //iPolygonOffsetMode [in]
  void SetPolygonOffsetMode(EPolyOffsetFilterMode iPolygonOffsetMode);

  //Getter
  //oPolygonOffsetMode [out]
  void GetPolygonOffsetMode(EPolyOffsetFilterMode& oPolygonOffsetMode) const;

  // Copy constructor and equal operator
  // -----------------------------------
  // Copy Constructor
  CATVisPolygonOffsetFilter(CATVisPolygonOffsetFilter&) = delete;

  // Assignment Operator
  CATVisPolygonOffsetFilter& operator=(CATVisPolygonOffsetFilter&) = delete;
  // -----------------------------------

protected:
  // Standard constructors and destructors
  // -------------------------------------
  // Constructor
  //iPolygonOffsetMode [in]
  CATVisPolygonOffsetFilter(EPolyOffsetFilterMode iPolygonOffsetMode);

  // Destructor
  virtual ~CATVisPolygonOffsetFilter();
  // -----------------------------------
};

//-----------------------------------------------------------------------

#endif
