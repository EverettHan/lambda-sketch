// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// PLMIBusinessLogicRestrictedServices.h
// Define the PLMIBusinessLogicRestrictedServices interface
//
//===================================================================
// Jun 2007  Creation: Code generated by the CAA wizard DOV
//===================================================================

/**
* @level Protected
* @usage U3
*/

#ifndef PLMIBusinessLogicRestrictedServices_H
#define PLMIBusinessLogicRestrictedServices_H

// Export
#include "PLMBusinessLogicRestrictedInterfaces.h"

// Inheritance
#include "CATBaseUnknown.h"

class CATIType_var;
class CATIValue_var;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByPLMBusinessLogicRestrictedInterfaces IID IID_PLMIBusinessLogicRestrictedServices;
#else
extern "C" const IID IID_PLMIBusinessLogicRestrictedServices;
#endif

/**
* Interface that provides restricted services for the business logic access.
*/
class ExportedByPLMBusinessLogicRestrictedInterfaces PLMIBusinessLogicRestrictedServices: public CATBaseUnknown
{
    CATDeclareInterface;

public:

    /**
    * This method encapsulates access to the preferences related to the business logic access layer.
    * The set / unset state of the attribute is supported.
    *
    * @param iId
    *   The preference Id. This must be one of the following:
    *   <ul>
    *       <li>IdString</li>
    *   </ul>
    * @param ispType
    *   The PLM type for type grained persisted preferences.
    * @param ospValue
    *   The value of the preference (NULL in case the preference doesn't exist).
    *
    * @return
    *   <ul>
    *       <li>S_OK            if successful </li>
    *       <li>S_FALSE         if the preference doesn't exist (the value is left NULL) </li>
    *       <li>E_INVALIDARG    if the preference to be read is not managed by the business logic access layer </li>
    *       <li>E_FAIL          if an internal error occurs </li>
    *   </ul>
    */
    virtual HRESULT ReadPreference(const char * iId, CATIType_var & ispType, CATIValue_var & ospValue) = 0;

    /**
    * This method encapsulates retrieval of the preferences related to the business logic access layer.
    * The set / unset state of the attribute is supported.
    *
    * @param iId
    *   The preference Id. This must be one of the following:
    *   <ul>
    *       <li>IdString</li>
    *   </ul>
    * @param ispType
    *   The PLM type for type grained persisted preferences.
    * @param ispValue
    *   The value of the preference to be written.
    *
    * @return
    *   <ul>
    *       <li>S_OK            if successful </li>
    *       <li>E_INVALIDARG    if the preference to be read is not managed by the business logic access layer </li>
    *       <li>E_FAIL          if an internal error occurs </li>
    *   </ul>
    */
    virtual HRESULT WritePreference(const char * iId, CATIType_var & ispType, CATIValue_var & ispValue) = 0;

};

#endif
