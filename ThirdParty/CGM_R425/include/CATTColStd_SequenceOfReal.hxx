// File generated by CPPExt (Value)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.

#ifndef _CATTColStd_SequenceOfReal_HeaderFile
#define _CATTColStd_SequenceOfReal_HeaderFile

#ifndef _CATTCollection_BaseSequence_HeaderFile
#include "CATTCollection_BaseSequence.hxx"
#endif
#ifndef _CATStandard_Real_HeaderFile
#include "CATStandard_Real.hxx"
#endif
#ifndef _Handle_CATTColStd_SequenceNodeOfSequenceOfReal_HeaderFile
#include "Handle_CATTColStd_SequenceNodeOfSequenceOfReal.hxx"
#endif
#ifndef _CATStandard_Integer_HeaderFile
#include "CATStandard_Integer.hxx"
#endif
class CATStandard_NoSuchObject;
class CATStandard_OutOfRange;
class CATTColStd_SequenceNodeOfSequenceOfReal;


#ifndef _CATStandard_Macro_HeaderFile
#include "CATStandard_Macro.hxx"
#endif

#include "SysCascade.h"

class CATTColStd_SequenceOfReal  : public CATTCollection_BaseSequence {

public:

 // Methods PUBLIC
 // 
inline CATTColStd_SequenceOfReal();
ExportedBySysCascade    void Clear() ;
~CATTColStd_SequenceOfReal()
{
  Clear();
}

ExportedBySysCascade   const CATTColStd_SequenceOfReal& Assign(const CATTColStd_SequenceOfReal& Other) ;
 const CATTColStd_SequenceOfReal& operator =(const CATTColStd_SequenceOfReal& Other) 
{
  return Assign(Other);
}

ExportedBySysCascade    void Append(const CATStandard_Real& T) ;
inline   void Append(CATTColStd_SequenceOfReal& S) ;
ExportedBySysCascade    void Prepend(const CATStandard_Real& T) ;
inline   void Prepend(CATTColStd_SequenceOfReal& S) ;
inline   void InsertBefore(const CATStandard_Integer Index,const CATStandard_Real& T) ;
inline   void InsertBefore(const CATStandard_Integer Index,CATTColStd_SequenceOfReal& S) ;
ExportedBySysCascade    void InsertAfter(const CATStandard_Integer Index,const CATStandard_Real& T) ;
inline   void InsertAfter(const CATStandard_Integer Index,CATTColStd_SequenceOfReal& S) ;
ExportedBySysCascade   const CATStandard_Real& First() const;
ExportedBySysCascade   const CATStandard_Real& Last() const;
inline   void Split(const CATStandard_Integer Index,CATTColStd_SequenceOfReal& Sub) ;
ExportedBySysCascade   const CATStandard_Real& Value(const CATStandard_Integer Index) const;
 const CATStandard_Real& operator()(const CATStandard_Integer Index) const
{
  return Value(Index);
}

ExportedBySysCascade    void SetValue(const CATStandard_Integer Index,const CATStandard_Real& I) ;
ExportedBySysCascade    CATStandard_Real& ChangeValue(const CATStandard_Integer Index) ;
  CATStandard_Real& operator()(const CATStandard_Integer Index) 
{
  return ChangeValue(Index);
}

ExportedBySysCascade    void Remove(const CATStandard_Integer Index) ;
ExportedBySysCascade    void Remove(const CATStandard_Integer FromIndex,const CATStandard_Integer ToIndex) ;





protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 
ExportedBySysCascade  CATTColStd_SequenceOfReal(const CATTColStd_SequenceOfReal& Other);


 // Fields PRIVATE
 //


};

#define SeqItem CATStandard_Real
#define SeqItem_hxx <CATStandard_Real.hxx>
#define CATTCollection_SequenceNode CATTColStd_SequenceNodeOfSequenceOfReal
#define CATTCollection_SequenceNode_hxx <CATTColStd_SequenceNodeOfSequenceOfReal.hxx>
#define Handle_CATTCollection_SequenceNode Handle_CATTColStd_SequenceNodeOfSequenceOfReal
#define CATTCollection_SequenceNode_Type_() CATTColStd_SequenceNodeOfSequenceOfReal_Type_()
#define CATTCollection_Sequence CATTColStd_SequenceOfReal
#define CATTCollection_Sequence_hxx <CATTColStd_SequenceOfReal.hxx>

#include "CATTCollection_Sequence.lxx"

#undef SeqItem
#undef SeqItem_hxx
#undef CATTCollection_SequenceNode
#undef CATTCollection_SequenceNode_hxx
#undef Handle_CATTCollection_SequenceNode
#undef CATTCollection_SequenceNode_Type_
#undef CATTCollection_Sequence
#undef CATTCollection_Sequence_hxx


// other inline functions and methods (like "C++: function call" methods)
//


#endif
