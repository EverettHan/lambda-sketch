// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// PLMIBLPortAggregation.h
// Define the PLMIBLPortAggregation interface
//
//===================================================================
// Dec 2008  Creation: Code generated by the CAA wizard ADZ
//===================================================================

/**
* @level Protected
* @usage U3
*/

#ifndef PLMIBLPortAggregation_H
#define PLMIBLPortAggregation_H

// Export
#include "PLMBusinessLogicInterfaces.h"

// Inheritance
#include "CATBaseUnknown.h"

class CATIInstance_var;
class CATUnicodeString;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByPLMBusinessLogicInterfaces IID IID_PLMIBLPortAggregation;
#else
extern "C" const IID IID_PLMIBLPortAggregation;
#endif

/**
* Interface to launch the integration of the business logic definition related to the instance aggregation operation.
*/
class ExportedByPLMBusinessLogicInterfaces PLMIBLPortAggregation: public CATBaseUnknown
{
    CATDeclareInterface;

public:

    /**
    * Tells whether the aggregation of a PLM instance under a PLM reference is a valid operation from the business logic point of view.
    *
    * @param iPortToAggregate
    *    The PLM port which will be aggregated if the authorization is granted
    *
    * @param iAggregatingReference
    *    The PLM reference which will aggregate the PLM port if the authorization is granted
    *
    * @return
    *   <ul>
    *       <li> S_OK      if the business logic is successfully integrated and the operation is authorized</li>
    *       <li> S_FALSE   if their is no business logic to integrate </li>
    *       <li> E_FAIL    if the operation is not authorized or an error occurs. The following error classes and error identifiers can be associated with:
    *           <ul>
    *               <li>   @error PLMBLPortAggregationError PLMBLPortAggregationError::RunCheck::InternalError
    *                      The business logic access service failed
    *               </li>
    *               <li>   @error PLMBLPortAggregationError PLMBLPortAggregationError::RunCheck::ValidationError
    *                      The operation is not authorized
    *               </li>
    *               <li>   @error PLMBLPortAggregationError PLMBLPortAggregationError::RunCheck::ExecutionError
    *                      A business logic definition execution failed
    *               </li>
    *           </ul>
    *       </li>
    *   </ul>
    */
    virtual HRESULT RunCheck(CATIInstance_var & iPortToAggregate,
                             CATIInstance_var & iAggregatingReference) = 0;

};

#endif
