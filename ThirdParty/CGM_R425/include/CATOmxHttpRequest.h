//===================================================================
// COPYRIGHT Dassault Systemes 2018/05/16
//===================================================================
// CATOmxHttpRequest.h
// Header definition of class CATOmxHttpRequest
//===================================================================
//
// Usage notes:
//
// A request message from a client to a server includes, within the first line of that message,
// the method to be applied to the resource, the identifier of the resource, and the protocol version in use.
//
// Default CATOmxHttpProtocolVersion value is: HTTP/1.1
//
// Adapted from apache http: https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/client/methods/HttpRequestBase.html
//
//===================================================================
// CATOmxSR<CATOmxHttpPost> spTempRequest(new CATOmxHttpPost(<url>), Steal);
// spTempRequest->SetServiceName("CloudView" or "3DSpace" or "VisuService" ...);
// {
//   CATOmxSR<CATOmxHttpEntity> spEntity(new CATOmxHttpStringEntity(<your query using MQL, JSON or any other language>), Steal);
//   spTempRequest->SetEntity(spEntity);
// }
// CATOmxSR<CATOmxHttpRequest> spRequest(spTempRequest);
//
// spRequest->AddHeader(<header 1>);
// ...
// spRequest->AddHeader(<header N>);
//
// CATOmxSR<CATOmxHttpResponse> spResponse;
// CATOmxSR<CATOmxHttpClient> spHttpClient(new CATOmxDefaultHttpClient(FALSE), Steal);// http of SYSTEM layer is used
//
// if (FAILED(spHttpClient->Execute(*spRequest, spResponse.AsPtrRef())) || !spResponse)
// {
//   return E_FAIL;
// }
//
// CATOmxHttpStatusLine httpStatus = spResponse->GetStatusLine();
// if (httpStatus.GetStatusCode() != 200)
// {
//   return E_FAIL;
// }
//
// CATOmxSR<CATOmxHttpEntity> spEntity(spResponse->GetEntity(), Steal);// MLK
// if (spEntity != NULL)
// {
//   CATOmxSR<CATIOmxInputStream> spInputStream;
//   CHK_SUCCESS_AND_RET_HR(spEntity->GetContent(spInputStream.AsPtrRef()));
//
//   CATOmxUTF8String utf8String;
//   CHK_SUCCESS_AND_RET_HR(CATOmxIOUtils::ToString(spInputStream, utf8String));
//   if (utf8String.length() == 0)
//   {
//     return E_FAIL;
//   }
// }
//===================================================================
//  2018/05/16 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATOmxHttpRequest_H
#define CATOmxHttpRequest_H

#include "CATOmxHttp.h"
#include "CATOmxHttpMessage.h"
#include "CATOmxHttpProtocolVersion.h"
#include "CATOmxCxxPortability.h"
#include "CATOmxKeyString.h"

class ExportedByCATOmxHttp CATOmxHttpRequest : public CATOmxHttpMessage
{
public:
  CATOmxHttpRequest();
  virtual ~CATOmxHttpRequest();

  /*
  * Returns the HTTP method this request uses, such as GET, PUT, POST, or other. 
  */
  virtual CATOmxKeyString GetMethod() const = 0;

  /*
  * Returns the protocol version of this request.
  */
  CATOmxHttpProtocolVersion GetProtocolVersion() const;

  /*
  * Sets the protocol version for this request.
  */
  void SetProtocolVersion(const CATOmxHttpProtocolVersion& iProtocolVersion);

  /*
  * Returns the original request URL.
  * Please note URL remains unchanged in the course of request execution and is not updated if the request is redirected to another location.
  */
  CATUnicodeString GetURL() const;

  /*
  * Sets the URL for this request.
  */
  void SetURL(const CATUnicodeString& iURL);

  /*
  * Returns the request line of this request.
  * The Request-Line begins with a method token, followed by the Request-URI and the protocol version.
  * Request-Line = Method SP Request-URI SP HTTP-Version
  * SP = separator character
  */
  CATUnicodeString GetRequestLine() const;

  /*
  * Thanks to service name (NotDefined, 3DSpace, Visu service, CloudView), we are able to set authentication protocol used and logon after log out of dashboard 
  */
  void SetServiceName(const CATUnicodeString& iServiceName);
  
  CATUnicodeString GetServiceName() const;

protected:
  CATOmxHttpRequest(CATOmxHttpRequest &);
  CATOmxHttpRequest& operator=(CATOmxHttpRequest&);

  CATOmxHttpProtocolVersion _ProtocolVersion;
  CATUnicodeString _URL, _ServiceName;
};

#endif
