#ifndef CATCGMParamInfo_H
#define CATCGMParamInfo_H

// COPYRIGHT DASSAULT SYSTEMES 2010

#ifdef MPXCATDistancePointsBodyAPI

// Uncomment when made public
//#include "CATGMModelInterfaces.h"

// Remove when made public
#include "DistanceLight.h"

class CATCell;
class CATCurve;
class CATFace;
class CATEdge;
class CATVolume;
class CATVertex;

// Uncomment when made public
//class CATCGMParamInfo;  // To prevent CAA tags in doc generated by Doxygen.

/**
 * Class to hold auxiliary information related to a point lying on cell.
 * The point coordinates are not part of this class.
*/

// Uncomment when made public
//class ExportedByCATGMOperatorsInterfaces CATCGMParamInfo

// Remove when made public
class ExportedByDistanceLight CATCGMParamInfo
{
public:
  /**
   * Default Constructor
   */
  CATCGMParamInfo();

  /**
   * Returns the CATCell on which the point lies
   */
  CATCell* GetCell() const;

  /**
   * Returns the CATFace on which the point lies and the corresponding U and V parameters.
   * Returns NULL if the point does not lie on a CATFace
   */
  CATFace* GetFace(double& oUParam, double& oVParam) const;

  /**
   * Returns the CATEdge on which the point lies and the corresponding CATCurve and curve parameters.
   * Returns NULL if the point does not lie on a CATEdge
   */
  CATEdge* GetEdge(CATCurve*& oCrv, double &oCrvParam) const;

  /**
   * Returns the CATVertex on which the point lies.
   * Returns NULL if the point does not lie on a CATVertex
   */
  CATVertex* GetVertex() const;

  /**
   * Returns the CATVolume on which the point lies.
   * Returns NULL if the point does not lie on a CATVolume
   */
  CATVolume* GetVolume() const;

public:

  // For internal use
  
  /** @nodoc */
  /**
   * Initialize with face information
   */
  void SetData(CATFace* iFace, double iUParam, double iVParam);

  /** @nodoc */
  /**
   * Initialize with edge information
   */
  void SetData(CATEdge* iEdge, CATCurve* iCrv, double iCrvParam);

  /** @nodoc */
  /**
   * Initialize with vertex
   */
  void SetData(CATVertex* iVertex);

  /** @nodoc */
  /**
   * Initialize with volume
   */
  void SetData(CATVolume* iVolume);

  /** @nodoc */
  /**
   * Raw initialize
   */
  void SetData(CATCell* iCell, CATCurve* iCurve, double iParam0, double iParam1);

private:

  void Reset();

private:

  CATCell* _Cell;
  CATCurve* _Curve;
  double _Param0, _Param1;
};


#endif //MPXCATDistancePointsBodyAPI

#endif /* CATCGMParamInfo_H */
