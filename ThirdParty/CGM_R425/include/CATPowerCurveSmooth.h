// COPYRIGHT Dassault Systemes 2002
//===================================================================
//
// CATPowerCurveSmooth.h
// Header definition of CATPowerCurveSmooth
//
//===================================================================
//
// Usage notes: 
//
//===================================================================
// 2006 : july	 : KTU : Recuperation et modification   du  code
// 05-Dec-2003 : JLH : Versionning de CreateDistanceMinPtCrv
//  Mar 2002  Creation: Code generated by the CAA wizard  ttd
//===================================================================
#ifndef CATPowerCurveSmooth_H
#define CATPowerCurveSmooth_H

#include "GeoPlate.h"
#include "CATBoolean.h"
#include "CATLib.h"
#include "CATCGMOperator.h"
class CATNurbsCurve;

class CATMathSetOfPointsND ;
class CATGeoFactory ;
class CATSoftwareConfiguration ;

class ExportedByGeoPlate CATPowerCurveSmooth: public CATCGMOperator
{
  CATCGMVirtualDeclareClass(CATPowerCurveSmooth);
public :

	  virtual ~CATPowerCurveSmooth() {};
   /**
    * Runs the algorithm
    * Returns 0 if everything is ok
    */
	  // parent' Run method
   // virtual int Run()=0 ;

   /**
    * 
    */
    virtual void SetFreeExtremities(CATBoolean iFirstPoint = TRUE,
                            CATBoolean iLastPoint = TRUE) =0;

   /**
    * Defines the parameters corresponding to each point of the initial set of points (<tt>ADVANCED</tt> mode).
    * @param iParameter
    * The array of the parameter values that correspond on the smoothed curve to
    * each point of the input set.
    */
    virtual void SetImposedParametrization(double *iParameter) =0;

   /**
    * Returns the created smoothed curve.
    */
    virtual CATNurbsCurve * GetResult() =0 ;

   /**
    * Returns the maximum deviation between a point and the smoothed curve.
    * @return
    * The maximum deviation value.
    */

    virtual double GetMaxDeviation() const  = 0 ;
	 virtual	double GetMeanDeviation() const = 0;
	 virtual double GetPercentage() const = 0 ;


    virtual void GetPtsMaxDeviation(double oCoordsPtSet[3], double oCoordsPtCurve[3]) const = 0;

   /**
    * To set Maximum tangency deviation allowed
    * @param iTolDegree
    *	  Tolerance in degree.
	*/
	virtual void SetTangencyTolerance( const double iTolDegree )= 0;
   /**
    * Return maiximum deviation  between user's tangent and the smoothed curve tangent.
    */
	virtual double GetTangencyMaxDeviation() const=0;

protected:
	CATPowerCurveSmooth(CATGeoFactory* ipFactory);


};

ExportedByGeoPlate CATPowerCurveSmooth *  CreatePowerCurveSmoothOp (CATGeoFactory *        iFactory,
																						  CATMathSetOfPointsND * iPoints,
																						  const double           iTolerance,
																						  const int              iDegree,
																						  const int              iNbMaxOfArcs,
																						  CATSoftwareConfiguration * iConfig=NULL ); 
#endif
