#ifndef CATIScriptJournal_h
#define CATIScriptJournal_h

// COPYRIGHT DASSAULT SYSTEMES 2000

/**
 * @CAA2Level L1
 * @CAA2Usage U3
 */

#include "JS0LOGRP.h"
#include "CATBaseUnknown.h"

class CATIScriptMethodCall;
class CATBaseDispatch;
class CATUnicodeString;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByJS0LOGRP IID IID_CATIScriptJournal;
#else
extern "C" const IID IID_CATIScriptJournal;
#endif

/**
 * Interface to represent the journal of method calls used for the macros generation.
 * <b>Role:</b>
 * <tt>CATIScriptJournal</tt> is used to store a list of method calls in a
 * scripting language independent fashion.
 * The <tt>CATIScriptJournal</tt> also maintains a reference table for all
 * the objects that are manipulated by the script.
 * @see CATIScriptManager, CATIScriptMethodCall
 */
class ExportedByJS0LOGRP CATIScriptJournal : public CATBaseUnknown {
  CATDeclareInterface;

  public :

		/**
		 * Instantiates a new empty method call.
		 * <br>
		 * The method call is not recorded while it is not added to the journal.
		 * @param oMethodCall
		 * The returned empty method call.
		 * @return 
		 * S_OK if the operation succeeded, E_FAIL otherwise.
		 */
		virtual HRESULT CreateMethodCall(CATIScriptMethodCall *& oMethodCall) = 0;

		/**
		 * Adds the method call to the list of recorded method calls.
		 * @param iMethodCall
		 * The method call to add.
		 * @return 
		 * S_OK if the operation succeeded, E_FAIL otherwise.
		 */
		virtual HRESULT AddMethodCall(CATIScriptMethodCall * iMethodCall) = 0;

		/**
		 * Retrieves the count of recorded method calls.
		 * @param oCount
		 * The returned count of recorded method calls.
		 * @return 
		 * S_OK if the operation succeeded, E_FAIL otherwise.
		 */
		virtual HRESULT CountMethodCalls(int & oCount) = 0;

		/**
		 * Retrieves the i-th method call.
		 * @param iIndex
		 * The specified index of the method call to retrieve. 
		 * <br>Caution : the first method call has an index equal to 1.
		 * @param oMethodCall
		 * The returned method call.
		 * @return 
		 * S_OK if the operation succeeded, E_FAIL otherwise.
     * @see #CountMethodCalls
		 */
		virtual HRESULT GetMethodCall(int iIndex, CATIScriptMethodCall *& oMethodCall) = 0;

		/**
		 * Registers an object using a given name for the macros generation.
		 * <br><b>Role:</b>
		 * The registered object which will be referenced as 'iName' in the
		 * scripts generated by the script manager.
		 * @param iObject
		 * The object to register.
		 * @param iName
		 * The registered name for the object.
		 * @return 
		 * S_OK if the operation succeeded, E_FAIL otherwise.
		 */
		virtual HRESULT RegisterObject(const CATBaseDispatch * iObject, const CATUnicodeString & iName) = 0;

};

#endif
