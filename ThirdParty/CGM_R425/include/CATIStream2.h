// COPYRIGHT Dassault Systemes 2002
//===================================================================
//
// CATINewStream.h
// Define the CATINewStream interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Nov 2002  Creation: Code generated by the CAA wizard  dem
//===================================================================
#ifndef CATIStream2_H
#define CATIStream2_H

/**
 * @level Protected 
 * @usage U3
 */

#include "CATBaseUnknown.h"
#include "AD0XXBAS.h"
#include "CATBoolean.h"
#include "CATDataType.h"

class CATIOmxBinaryStream;
class CATOmbAdapterProtection;

#define CATForceAdapterInheritance(arg) friend class arg;\
  private:\
  virtual void ThisInterfaceShouldInheritFromAdapter_##arg() = 0;

#define CATDeclareAdapter(arg) private:\
  void ThisInterfaceShouldInheritFromAdapter_##arg() final {}

//  USELESS ??  #ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByAD0XXBAS IID IID_CATIStream2;
/*#else
extern "C" const IID IID_CATINStream2 ;
#endif*

//------------------------------------------------------------------

/**
 * This interface should be used to stream and unstream containers using CATIOmxBinaryStream reference. This replaces CATIStream and CAtINewStream for applicative containers
 * All methods have to be implemented, if CATIOmbIncrementalStream is not implemented for applicative containers. 
 * This interface is used in first choice and will be mandatory for applicative containers from R425 GA
 */
class ExportedByAD0XXBAS CATIStream2 : public CATBaseUnknown
{
  CATDeclareInterface;

  //CATForceAdapterInheritance(CATEStream2);

public:
/**
 * Method used to stream containers.
 *  @ioStream pointer to a CATIOmxBinaryStream created during save operations
 * and used to stream the container persistence.
 *  @iSeekAllowed is TRUE if the CATStream support Seek method.
 *  @returnCode :  S_OK : everything ran well
 *    E_XXX : error happened, the document streaming will be interrupted and not saved. Error will be logged
 *
 *  /!\ Size of streams are limited to 2Gio and 4Gio in case of LargeFile document. See CATIStream2 PES for more details. In case of oversize, the save procedure of the document will be canceled.
 *
 * To log application specific errors or warning only (with S_OK rc) we recommend to use function such as CATOmxLogError see https://osmwebdsy/wiki/index.php/CATOmxLogError
*/
  virtual HRESULT Stream(CATIOmxBinaryStream& ioStream, const CATBoolean iSeekAllowed = FALSE) = 0;

/**
 * Method used to unstream containers.
 *  @ioStream pointer to a CATIOmxBinaryStream created during Load operations
 * and used to unstream the container persistence.
 *  @iDataLength : The size in bytes of the stream to read.
 *  @returnCode :  S_OK : everything ran well
 *    E_XXX : error happened, the document unstreaming will be interrupted and not be loaded. Error will be logged
 *
 * To log application specific errors or warning only (with S_OK rc) we recommend to use function such as CATOmxLogError see https://osmwebdsy/wiki/index.php/CATOmxLogError
*/
  virtual HRESULT Unstream(CATIOmxBinaryStream& ioStream, CATLONG64 iDataLength) = 0;


  /*
  * this should be implemented by adapter CATEStream2
  */
  virtual void* CATEStream2AdapterProtection(CATOmbAdapterProtection* iArg) = 0;

};


CATDeclareHandler( CATIStream2, CATBaseUnknown );
 
//------------------------------------------------------------------

#endif

