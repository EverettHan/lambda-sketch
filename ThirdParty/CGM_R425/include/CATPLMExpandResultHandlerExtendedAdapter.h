//===================================================================
// COPYRIGHT Dassault Systemes 2018/04/10
//===================================================================
// CATPLMExpandResultHandlerExtendedAdapter.cpp
// Header definition of class CATPLMExpandResultHandlerExtendedAdapter
//===================================================================
//
// Usage notes:
// Adapter for CATIPLMExpandResultHandlerExtended
// Every method have a default implementation which return E_NOTIMPL
//
//===================================================================
//  2018/04/10 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATPLMExpandResultHandlerExtendedAdapter_H
#define CATPLMExpandResultHandlerExtendedAdapter_H

#include "CATPLMServicesItf.h"
#include "CATIPLMExpandResultHandlerExtended.h"
#include "CATOmxCxxPortability.h"

class ExportedByCATPLMServicesItf CATPLMExpandResultHandlerExtendedAdapter : public CATIPLMExpandResultHandlerExtended
{
public:
  CATPLMExpandResultHandlerExtendedAdapter();
  virtual ~CATPLMExpandResultHandlerExtendedAdapter();

  virtual HRESULT StartResult(int iVersion) OMX_Cxx11_OVERRIDE;
  virtual HRESULT EndResult(int iElapseTime) OMX_Cxx11_OVERRIDE;
  virtual HRESULT StartBlock() OMX_Cxx11_OVERRIDE;
  virtual HRESULT EndBlock(int iElapseTime) OMX_Cxx11_OVERRIDE;
  virtual HRESULT StartPath(int iRank) OMX_Cxx11_OVERRIDE;
  virtual HRESULT EndPath() OMX_Cxx11_OVERRIDE;
  virtual HRESULT Record(CATIPLMRecordRead* iRecord, CATBoolean iAlreadyVisited) OMX_Cxx11_OVERRIDE;
  virtual HRESULT BrokenRecord(CATIPLMRecordRead* ipBrokenRecord) OMX_Cxx11_OVERRIDE;
  virtual HRESULT SRCrossed(const CATPLMID& iPlmId, const CATPLMSemanticRelation& iSR) OMX_Cxx11_OVERRIDE;
  virtual HRESULT GlobalReport(CATIPLMError* iError) OMX_Cxx11_OVERRIDE;

private:
  CATPLMExpandResultHandlerExtendedAdapter (CATPLMExpandResultHandlerExtendedAdapter &);
  CATPLMExpandResultHandlerExtendedAdapter& operator=(CATPLMExpandResultHandlerExtendedAdapter&);
};

#endif
