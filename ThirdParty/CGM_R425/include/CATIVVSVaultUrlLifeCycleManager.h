/**
 * @level Private
 * @usage U3
 */
// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATIVVSVaultUrlLifeCycleManager.h
// Define the CATIVVSVaultUrlLifeCycleManager interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Mar 2004  Creation: Code generated by the CAA wizard  fle
//===================================================================
#ifndef CATIVVSVaultUrlLifeCycleManager_H
#define CATIVVSVaultUrlLifeCycleManager_H

#include "VVSVaultSiteProtocol.h"
#include "CATBaseUnknown.h"

#include "CATUnicodeString.h"
#include "CATVVSUrl.h"
#include "CATListOfCATVVSUrl.h"

class CATVVSTransaction;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByVVSVaultSiteProtocol IID IID_CATIVVSVaultUrlLifeCycleManager;
#else
extern "C" const IID IID_CATIVVSVaultUrlLifeCycleManager ;
#endif

//------------------------------------------------------------------

/**
 * This represents the interface the component 
 * declared in DeclareComponentImplementingVaultBehavior
 * has to implement to enable the creation,cloning,release in short the lifecycle of url.
 * This interface is optional.
 */
class ExportedByVVSVaultSiteProtocol CATIVVSVaultUrlLifeCycleManager: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

  /**
   * @deprecated V5R201 CreateUrlFromUrlPattern
   */
 //  virtual HRESULT CreateUrlForPLMIdentifier(const CATVVSStructureForPLMId& iPLMIdentifier,int iPLMSiteIdentifierOwner,CATVVSUrl& oUrl,CATVVSTransaction* iTransaction=NULL)=0 ;
    
   /** 
     * Creates an URL corresponding to a given URL pattern.
     * @param iUrl  
     *  A pattern of Url used to construct the new URL. Could be an empty URL.
     * @param oUrl  
     *  The created url.
     * @param iTransaction   
     *  Will be used in a later release.
     * @return
     *  <UL><LI><code>S_OK</code>: the url was succesfully created.</LI>
     *      <LI><code>S_OK</code>: An error occurs or there is already a delcared URL created from this pattern.</LI>
     *  </UL>
    */
	virtual HRESULT CreateUrlFromUrlPattern(const CATVVSUrl& iUrlPattern, CATVVSUrl& oUrl, CATVVSTransaction* iTransaction = NULL) = 0 ;

  /**
   * @deprecated V5R201 CloneURL
   */
 // virtual HRESULT CloneURL(const CATVVSUrl& iUrl,const CATVVSStructureForPLMId&  iTargetPLMIdentifier,CATVVSUrl& oUrl,CATVVSTransaction* iTransaction=NULL)=0 ;

    /** 
     * Duplicates a source URL into a new URL designed from an URL pattern  
     * @param iUrl [in]
     *  The URL to duplicate.
     * @param iUrlPattern [in] 
     *  A pattern of Url used to construct the new duplicated URL. Could be an empty URL.
     * @param oDuplicatedUrl [out]
     *  The duplicated URL.
     * @param iTransaction [in]
     *  Will be used in a later release.
     * @return
     *  S_OK if the url was succesfully cloned, or E_FAIL otherwise.
    */
	virtual HRESULT CloneURL(const CATVVSUrl& iUrlSource, const CATVVSUrl& iUrlPattern, CATVVSUrl& oDuplicatedUrl, CATVVSTransaction* iTransaction = NULL) = 0;

    /** 
     * Releases an URL.
     * @param iUrl 
     *  The identifier of the URL the PLM site will not use no more.
     * @param iTransaction   
     *  Will be used in a later release.
     * @return
     * S_OK if the url was succesfully released, or E_FAIL otherwise.
    */
	virtual HRESULT ReleaseURL (const CATVVSUrl& iUrl, CATVVSTransaction* iTransaction=NULL)=0 ;

    /** 
     * Retrieves the list of supported URL patterns.
     * @param oPrefixToRegister
     *  All the prefixes the site in is charge to manage. A prefix is the beginning of the url.
     * @return
     * S_OK if the call was sucessfully answered, or E_FAIL otherwise.
    */
	virtual HRESULT UrlPrefixToRegister(CATListOfCATVVSUrl& oPrefixToRegister)=0 ;
};

//------------------------------------------------------------------

#endif

