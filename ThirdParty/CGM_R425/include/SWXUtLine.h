//===================================================================
// COPYRIGHT DS SolidWorks 2010/04/22
//===================================================================
// SWXUtLine.cpp
// Header definition of class SWXUtLine
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/04/22 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXUtLine_H
#define SWXUtLine_H

#include "SWXMathematics.h"
#include "SWXUtGeometry.h"

#include "CATMathPoint.h"
#include "CATMathDirection.h"
#include "SWXUtLine_Ptr.h"
#include "CATMathLine.h"
class CATMathPoint;
class CATMathVector;
class CATMathTransformation;

//-----------------------------------------------------------------------

class ExportedBySWXMathematics SWXUtLine: public SWXUtGeometry
{
public:
	SWXUtLine (CATMathPoint const &iPnt, CATMathDirection const &iDir);
	virtual ~SWXUtLine ();
	void PointCoord(double &oX, double &oY, double &oZ) const;
	void DirectionCoord(double &oX, double &oY, double &oZ) const;
	const CATMathPoint& Point() const {return mPnt;}
	const CATMathDirection& Direction() const {return mDir;}

	virtual void ApplyTransformation(CATMathTransformation const &iTransformation);
	virtual bool GetTangentAtPoint(CATMathPoint const &iPnt,CATMathVector &oV) const;
	virtual SWXUtGeometry_Ptr Clone() const;

	virtual bool Accept(SWXUtGeomVisitor *iVis); 
	virtual bool Accept(SWXUtGeomVisitor *iVis) const;

	// 18/02/2010: ACH (or AHS if your prefer anonymity) - ADDed PointOnLine functions.
	bool PointOnLine( const CATMathPoint& iv2point, CATMathPoint *oPnt) const;
	static bool PointOnLine( const CATMathPoint& iv2point, const CATMathLine& iLine, CATMathPoint *oPoint, double *oLenfromFirst, bool *oIsContained);
	bool ProjectPoint( const CATMathPoint& iPoint, CATMathPoint *oPnt, double *oParam = NULL);

	bool EvalPoint(double iParam, CATMathPoint &oPnt, CATMathDirection* opTangentDir = NULL) const;
	double ArcLength(double iStartParam, double iEndParam) const;
private:
	CATMathPoint mPnt;
	CATMathDirection mDir;
};

//-----------------------------------------------------------------------
#endif
