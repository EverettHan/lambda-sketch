/* -*-c++-*-*/
#ifndef CATCircularSweep_h
#define CATCircularSweep_h

// COPYRIGHT DASSAULT SYSTEMES 1999

/**
 * Interface representing a circular sweep.
 *<br> The CATCircularSweep is created by the <tt>CreateCircularSweep</tt>
 * method of the <tt>CATGeoFactory</tt> interface. 
 *<br>A CATCirculatSweep is the surface generated by the smallest circle arcs
 * of <tt>CenterPoints</tt> centers and passing through <tt>Surface1Points</tt> 
 * and <tt>Surface2Points</tt> points. 
 * The orientation goes from the <tt>Surface1Points</tt> to the 
 * <tt>Surface2Points</tt>. All the
 * definition points are used through a CATMathSetOfPointsND of dimension 9.
 *<table>
 * <tr><td>CATMathSetOfPointsND</td><td><tt> CenterPoints </tt></td>
 *                <td> The sets of the center of the circles </td></tr>
 * <tr><td>CATMathSetOfPointsND</td><td><tt> Surface1Points </tt></td>
 *                <td> The corresponding points on the first surface </td></tr>
 * <tr><td>CATMathSetOfPointsND</td><td><tt> Surface2Points </tt></td>
 *                <td> The corresponding points on the second surface </td></tr>
 * <tr><td>double[]</td><td><tt> Parameters </tt></td>
 *                 <td>The user parametrization</td></tr>
 *</table>
 * The parameter array has as many parameters as points in the 
 * CATMatSetOfPointsND set.
 */
#include "CATBaseUnknown.h"

class CATMathSetOfPointsNDWithVectors;
class CATGeometry;

#include "CATSurface.h"


#include "ExportedByCATGMGeometricInterfaces.h"
#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATGMGeometricInterfaces IID IID_CATCircularSweep ;
#else
extern "C" const IID IID_CATCircularSweep ;
#endif

class ExportedByCATGMGeometricInterfaces CATCircularSweep : public CATSurface
{
  CATDeclareInterface;

public:

/**
 * Returns the definition points of a CATCircularSweep
 * as a CATMathSetOfPointsNDWithVectors of dimension 9.
 */
  virtual CATMathSetOfPointsNDWithVectors* GetCreationPoints()const =0; 


};
  CATDeclareHandler(CATCircularSweep,CATSurface);

#endif
