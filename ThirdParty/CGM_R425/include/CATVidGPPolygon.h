// COPYRIGHT Dassault Systemes 2005
//===================================================================
//
// CATVidGPPolygon.h
// Header definition of CATVidGPPolygon
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2005  Creation: Code generated by the CAA wizard  jov
//===================================================================
#ifndef CATVidGPPolygon_H
#define CATVidGPPolygon_H

#include <VisuDialog.h>
#include <CATVidGPTexturedWidget.h>
#include <CATUnicodeString.h>
#include <CATVidColor.h>
#include <CATVidGPPolygonContour.h>
class CATVidGPTexture;
class CATPickingRender;

/**
 * @ingroup VIDGP
 * This widget allows to define a polygon from a contour. 
 * As it inherit CATVidGPTexturedWidget, it can be colored, textured, etc...
 */
class ExportedByVisuDialog CATVidGPPolygon: public CATVidGPTexturedWidget
{
  CATDeclareClass;
public:
  CATVidGPPolygon ();
  /** 
   * Sets the contour of the polygon. The computed minimum dimension of the widget 
   * will take it incto account.
   */
  void SetContour(const CATVidGPPolygonContour& i_contour);
  /**
   * @return the contour of the polygon.
   */
  const CATVidGPPolygonContour& GetContour() const;
  /**
   * Sets a flag indicating that the shape must be scaled to fit the dimension.
   * If set to 1, the computed minimumDimension are null, and the shape take the maximum
   * room inside the available space without stretching.
   * If set to 0 (default) the shape is not scalable, and the minimumDimensions are the one implied by the shape contour.
   */
  void SetScalableShapeFlag(int i_scalableShapeFlag);
  /**
   * @return the scalable shape flag.
   */
  int GetScalableShapeFlag() const;
   /**
   * Set the dimension of the shape requested by the customer. 
   * If the dimension specified is less than the shape contour dimension, shape contour dimension remains. 
   * @param i_dimension the wished dimension
   */
  void SetShapeDimension( const CATMathPoint2Df &i_dimension );
  /**
   * @return  the user specified dimension (this dimension is not necessary the shape contour dimension). 
   */
  const CATMathPoint2Df& GetShapeDimension();
protected:
  /** Destructor */
  virtual ~CATVidGPPolygon ();
  /** Constructor */
  CATVidGPPolygon (const CATVidGPPolygon &);
  /** Copy constructor */
  CATVidGPPolygon& operator=(const CATVidGPPolygon&);
};
#endif
