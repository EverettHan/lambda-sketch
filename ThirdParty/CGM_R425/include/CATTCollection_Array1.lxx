#include "CATStandard_OutOfRange.hxx"

#include Array1Item_hxx

#ifndef NULL
#define NULL 0
#endif

//=======================================================================
//function : Length
//purpose  : 
//=======================================================================

inline CATStandard_Integer CATTCollection_Array1::Length () const 
{
	return myUpperBound - myLowerBound + 1 ;
}


//=======================================================================
//function : Lower
//purpose  : 
//=======================================================================

inline CATStandard_Integer CATTCollection_Array1::Lower () const
{
	return myLowerBound ;
}


//=======================================================================
//function : Upper
//purpose  : 
//=======================================================================

inline CATStandard_Integer CATTCollection_Array1::Upper () const
{
	return myUpperBound ;
}


//=======================================================================
//function : IsAllocated
//purpose  : 
//=======================================================================

inline CATStandard_Boolean CATTCollection_Array1::IsAllocated () const
{
 return isAllocated;
}

//=======================================================================
//function : Value
//purpose  : 
//=======================================================================

inline const Array1Item& CATTCollection_Array1::Value
(const CATStandard_Integer Index) const
{
  CATStandard_OutOfRange_Raise_if((Index < myLowerBound || Index > myUpperBound),NULL);
  return ((Array1Item *)myStart)[Index];
}

//=======================================================================
//function : SetValue
//purpose  : 
//=======================================================================

inline  void CATTCollection_Array1::SetValue (const CATStandard_Integer Index,
				   const Array1Item& Value)
{
  CATStandard_OutOfRange_Raise_if((Index < myLowerBound || Index > myUpperBound),NULL);

  ((Array1Item *)myStart)[Index] = Value ;
}


//=======================================================================
//function : ChangeValue
//purpose  : 
//=======================================================================

inline Array1Item& CATTCollection_Array1::ChangeValue(const CATStandard_Integer Index)
{
  CATStandard_OutOfRange_Raise_if((Index < myLowerBound || Index > myUpperBound),NULL);

  return ((Array1Item *)myStart)[Index];
}



