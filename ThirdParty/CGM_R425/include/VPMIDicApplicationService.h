// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// VPMIDicApplicationService.h
// Define the VPMIDicApplicationService interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Jan 2008  Creation: Code generated by the CAA wizard  IWI
//===================================================================
/**
 * @level Private
 * @usage U3
 */
#ifndef VPMIDicApplicationService_H
#define VPMIDicApplicationService_H

#include "VPMIDicInterfaces.h"
#include "VPMIDicElement.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByVPMIDicInterfaces IID IID_VPMIDicApplicationService;
#else
extern "C" const IID IID_VPMIDicApplicationService ;
#endif

//------------------------------------------------------------------

/**
* Interface representing xxx.
*
* <br><b>Role</b>: Components that implement
* VPMIDicApplicationService are ...
* <p>
* Do not use the VPMIDicApplicationService interface for such and such

*
* @example
*  // example is optional
*  VPMIDicApplicationService* currentDisplay = NULL;
*  rc = window-&gt;QueryInterface(IID_VPMIDicApplicationService,
*                                     (void**) &amp;currentDisplay);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByVPMIDicInterfaces VPMIDicApplicationService: public VPMIDicElement
{
  CATDeclareInterface;

  public:

    /**
     * <dl>
     * <dt>
     * <pre>
     *
           *   Get the release level of the application service. This release level identification is composed of two digits X.Y. X is the minor release level and Y is the major release level. The minor release level is intended to indicate minor software changes whereas the major release level is intended to indicate important software changes.
           *   @param oReleaseLevel
           *      the release level of the Application Service
           *   @return
           *      Error code of function.
           *
     *  virtual HRESULT GetReleaseLevel ( CATString & oReleaseLevel) = 0;
     * </pre>
     * </dl>
     */
    virtual HRESULT GetReleaseLevel (const char * & oReleaseLevel) const =0;

    /**
     * <dl>
     * <dt>
     * <pre>
     *
           *   Set the release level of the application service. This release level identification is composed of two digits X.Y. X is the minor release level and Y is the major release level. The minor release level is intended to indicate minor software changes whereas the major release level is intended to indicate important software changes.
           *   @param iReleaseLevel
           *      the release level of the Application Service
           *   @return
           *      Error code of function.
           *
     *  virtual HRESULT GetComment ( CATString & oReleaseLevel) = 0;
     * </pre>
     * </dl>
     */
    virtual HRESULT SetReleaseLevel (const char *  iReleaseLevel ) = 0;


  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------

#endif
