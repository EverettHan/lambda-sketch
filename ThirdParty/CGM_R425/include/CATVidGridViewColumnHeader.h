//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2012/07/02
//===================================================================
// CATVidGridViewColumnHeader.h
// Header definition of class CATVidGridViewColumnHeader
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/07/02 Creation: Code generated by the 3DS wizard  VV6
//===================================================================

#ifndef CATVidGridViewColumnHeader_H
#define CATVidGridViewColumnHeader_H

#include <CATBaseUnknown.h>
#include <VisuDialog.h>
#include <CATString.h>

class CATUnicodeString;
class l_CATVidGridViewColumnHeader;
class CATVidMdlContextMenu;
class CATISYPIntrospectableProvider_var;
class CATMathPoint2Df;

/**
 * Default introspectable object that contains the data displayed
 * by the header of a column.
 *
 * When the user doesn't define its own column header, an instance of this
 * class is used to build the view of the column header.
 *
 * This default implementation only contains the following properties:
 *    - a label to display inside the header
 *    - a tooltip to associate to the header
 *    - a contextual menu to associate to the header
 */
class ExportedByVisuDialog CATVidGridViewColumnHeader : public CATBaseUnknown
{
  CATDeclareClass;

public:
  /** Default constructor */
  CATVidGridViewColumnHeader();
  /** Destructor */
  ~CATVidGridViewColumnHeader();

  /**
   * Get the label displayed inside the header.
   *
   * @return the label displayed inside the header.
   */
  CATUnicodeString GetLabel() const;
  /**
   * Set the label displayed inside the header.
   *
   * @param i_label the label displayed inside the header.
   */
  void SetLabel(const CATUnicodeString & i_label);

  /**
   * Associate the given contextual menu to the column header.
   *
   * @param i_pContextMenu pointer on the contextual menu to associate to this
   * column header.
   */
  void SetContextMenu(CATVidMdlContextMenu * i_pContextMenu);

  /**
   * Get the contextual menu associated to this column header.
   *
   * @return the contextual menu associated to this column header.
   */
  CATVidMdlContextMenu * GetContextMenu();

	CATBoolean GetMixed()const;

	void SetMixed(CATBoolean i_mixed);

	CATBoolean GetChecked()const;

	void SetChecked(CATBoolean i_checked);

  // --------------------------------------------------------------------------
  // Tooltips : for any documentation look for same method at VisuImmersiveDialog\ProtectedInterfaces\CATVidCtl.h
  // --------------------------------------------------------------------------
  CATUnicodeString GetTooltipTitle()const;
  void SetTooltipTitle(const CATUnicodeString & i_TooltipTitle);
  CATUnicodeString GetTooltipShortHelp()const;
  void SetTooltipShortHelp(const CATUnicodeString & i_TooltipShortHelp);
  CATUnicodeString GetTooltipLongHelp()const;
  void SetTooltipLongHelp(const CATUnicodeString & i_TooltipLongHelp);
  CATUnicodeString GetTooltipImage()const;
  void SetTooltipImage(const CATUnicodeString & i_TooltipImage);
  CATUnicodeString GetTooltipShortHelpImage()const;
  void SetTooltipShortHelpImage(const CATUnicodeString & i_TooltipShortHelpImage);
  CATUnicodeString GetTooltipLongHelpImage()const;
  void SetTooltipLongHelpImage(const CATUnicodeString & i_TooltipLongHelpImage);
  CATMathPoint2Df GetTooltipImageDimension()const;
  void SetTooltipImageDimension(const CATMathPoint2Df & i_TooltipImageDimension);
  CATMathPoint2Df GetTooltipShortHelpImageDimension()const;
  void SetTooltipShortHelpImageDimension(const CATMathPoint2Df & i_TooltipShortHelpImageDimension);
  CATMathPoint2Df GetTooltipLongHelpImageDimension()const;
  void SetTooltipLongHelpImageDimension(const CATMathPoint2Df & i_TooltipLongHelpImageDimension);
  CATISYPIntrospectableProvider_var GetTooltipProvider()const;
  void SetTooltipProvider(const CATISYPIntrospectableProvider_var & i_TooltipProvider);
  CATUnicodeString GetShortTooltipTemplateName()const;
  void SetShortTooltipTemplateName(const CATUnicodeString & i_ShortTooltipTemplateName);
  CATUnicodeString GetLongTooltipTemplateName()const;
  void SetLongTooltipTemplateName(const CATUnicodeString & i_LongTooltipTemplateName);
  CATUnicodeString GetShortTooltipStyleSheet()const;
  void SetShortTooltipStyleSheet(const CATUnicodeString & i_ShortTooltipStyleSheet);
  CATUnicodeString GetLongTooltipStyleSheet()const;
  void SetLongTooltipStyleSheet(const CATUnicodeString & i_LongTooltipStyleSheet);
  CATBoolean GetAutoDetectTooltipTypeFlag() const;
  void SetAutoDetectTooltipTypeFlag(CATBoolean i_bAutoDetect);

  //For NLS easier management.
  CATString & GetName();

  void  SetName(CATString & i_Name);

  //For NLS resources.
  char* GetResourceFilename(int i_depth) const;

  CATString& GetResourceID();


private:
  // Copy constructor and assignement operator are disabled
  CATVidGridViewColumnHeader(const CATVidGridViewColumnHeader &);
  CATVidGridViewColumnHeader & operator= (const CATVidGridViewColumnHeader &);

  /** Implementation data */
  l_CATVidGridViewColumnHeader * _pImpl;
  CATString _name;
	CATBoolean _checked;
	CATBoolean _mixed;
};

#endif
