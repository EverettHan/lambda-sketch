// COPYRIGHT Dassault Systemes 2003
//===================================================================
//
// CATSamNeighborTree.h
// Header definition of CATSamNeighborTree
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Mar 2003  Creation: Code generated by the CAA wizard  jup
//===================================================================
#ifndef CATSamNeighborTree_H
#define CATSamNeighborTree_H

#include "CATELFMathKernel.h"

// System
#include "CATBoolean.h"

// SpecialAPI
#include "CATDataType.h"

// CATELFMathKernel
#include "CATSamOctree.h"

// CATELFMathKernel
class CATSamOctant;
class CATSamOctinfo;
class CATSamNeighborNode;

// VisualizationBase
//class CAT3DBagRep;
//class CAT3DPointRep;
//class CAT3DCloudOfPointsRep;

class ExportedByCATELFMathKernel CATSamNeighborTree : public CATSamOctree
{

  friend class CATSamNeighborNode;

public :

  CATSamNeighborTree ();
  virtual ~CATSamNeighborTree ();

  HRESULT GetNeighbors ( const double iX, const double iY, const double iZ, const CATULONG32 iTargetNb,
                         CATULONG32 & oNbNeighbors, CATULONG32 iaIndexes[], double iaSquareDists[],
                         const double iEps = 0.0, const CATULONG32 iMaxProbe = 0xFFFFFFFFU,
                         const CATBoolean iAllowSelf = TRUE );

  void Reset ();

  inline void GetQueryPoint ( double & oXquery, double & oYquery, double & oZquery ) const;

  inline CATULONG32 GetTargetNb () const;
  inline CATULONG32 GetNbNeighbors () const;
  inline const CATULONG32 * GetIndexes () const;
  inline const double * GetSquareDists () const;

  inline double GetMaxError () const;
  inline CATULONG32 GetProbe () const;
  inline CATULONG32 GetMaxProbe () const;
  inline CATBoolean GetAllowSelf () const;

  /*HRESULT GetQueryRep ( CAT3DBagRep *& opQueryRep );*/

private :

  double       _Xquery,
               _Yquery,
               _Zquery,
               _MaxError;
  double *     _SquareDists;
  CATULONG32 * _Indexes;
  CATULONG32   _NbNeighbors,
               _TargetNb,
               _Probe,
               _MaxProbe;
  CATBoolean   _AllowSelf;

  inline CATULONG32 IncreaseProbe ();
  inline double GetMaxSquareDist () const;
  CATULONG32 InsertNeighbor ( const double iSquareDist, const CATULONG32 iIndex );
  CATULONG32 FindPosition ( const double iSquareDist ) const;

  /*HRESULT GetQueryPointRep ( CAT3DPointRep *& opQueryPointRep ) const;
  HRESULT GetNeighborRep ( CAT3DCloudOfPointsRep *& opNeighborRep ) const;*/

  virtual HRESULT CreateOctant ( CATSamOctant *& opOctant ) const;
  virtual HRESULT GetEntityPoint ( CATSamOctinfo & iEntityInfo ) const = 0;

  CATSamNeighborTree ( const CATSamNeighborTree & iNeighborTree );
  CATSamNeighborTree & operator= ( const CATSamNeighborTree & iNeighborTree );

};

inline void CATSamNeighborTree::GetQueryPoint ( double & oXquery, double & oYquery, double & oZquery ) const
{
  oXquery = _Xquery; oYquery = _Yquery; oZquery = _Zquery; 
}

inline CATULONG32 CATSamNeighborTree::GetTargetNb () const
{
  return _TargetNb;
}

inline CATULONG32 CATSamNeighborTree::GetNbNeighbors () const
{
  return _NbNeighbors;
}

inline const CATULONG32 * CATSamNeighborTree::GetIndexes () const
{
  return ( (const CATULONG32 *) _Indexes );
}

inline const double * CATSamNeighborTree::GetSquareDists () const
{
  return ( (const double *) _SquareDists );
}

inline double CATSamNeighborTree::GetMaxError () const
{
  return _MaxError;
}

inline CATULONG32 CATSamNeighborTree::GetProbe () const
{
  return _Probe;
}

inline CATULONG32 CATSamNeighborTree::GetMaxProbe () const
{
  return _MaxProbe;
}

inline CATBoolean CATSamNeighborTree::GetAllowSelf () const
{
  return _AllowSelf;
}

inline CATULONG32 CATSamNeighborTree::IncreaseProbe ()
{
  return ( ++_Probe );
}

inline double CATSamNeighborTree::GetMaxSquareDist () const
{
  if ( _NbNeighbors && _SquareDists ) return _SquareDists[_NbNeighbors - 1U];
  return 0.0;
}

#endif
