/* -*-C++-*- */

#ifndef CATCVMHandle_H
#define CATCVMHandle_H

// COPYRIGHT DASSAULT SYSTEMES 2006

//===================================================================
//===================================================================
//
// CATCVMObject
//
// class for Collaborative Variational Modelling (CVM) handles
//
//===================================================================


//===================================================================
// Usage notes:
//
//===================================================================

//===================================================================
// Feb. 2006    Creation                         Alex State
//===================================================================
#include "CATCVMSysObjects.h"
#include "CATCVMObject.h"
#include "CATCVMDef.h"
#include "ListPOfCATCVMRelation.h"
#include "ListPOfCATCVMPort.h"

class CATCVMSystem;
class CATCVMAtom;


class ExportedByCATCVMSysObjects CATCVMHandle : public CATCVMObject
{
  CATDeclareClass;
  //------------------------------------------------------------------------------
  // Constructors
  //------------------------------------------------------------------------------
  protected:
  CATCVMHandle(CATCVMContainer *iContainer);
  CATCGMNewClassArrayDeclare;

  //------------------------------------------------------------------------------
  // Destructor
  //------------------------------------------------------------------------------
  protected:
  virtual ~CATCVMHandle();

  //------------------------------------------------------------------------------
  // CleanUp
  //------------------------------------------------------------------------------
  private:
  void CleanUp();

  //------------------------------------------------------------------------------
  // SetSystem
  //------------------------------------------------------------------------------
  public:
  void SetSystem(CATCVMSystem *iSystem);

  //------------------------------------------------------------------------------
  // GetSystem
  //------------------------------------------------------------------------------
  public:
  virtual CATCVMSystem *GetSystem();
  
  //------------------------------------------------------------------------------
  // Create a copy
  //------------------------------------------------------------------------------
  public:
  virtual void IdenticalDataCopy(CATCVMObject * iCVMPrev);
  void LocalDataCopy(CATCVMHandle *iCVMPrev);

  //------------------------------------------------------------------------------
  // IsA
  //------------------------------------------------------------------------------
  public:
  CATBoolean IsA(CATCVMObjectType iObjectType);

  //------------------------------------------------------------------------------
  // Get the number of relations
  //------------------------------------------------------------------------------
  public:
  int GetNbRelations();

  //------------------------------------------------------------------------------
  // Get the relation for a given index
  //------------------------------------------------------------------------------
  public:
  CATCVMRelation *GetRelation(int iIndex);

  //------------------------------------------------------------------------------
  // Add a relation
  //------------------------------------------------------------------------------
  public:
  void AddRelation(CATCVMRelation *iRelation);

  //------------------------------------------------------------------------------
  // Remove a relation
  //------------------------------------------------------------------------------
  private:
  void RemoveRelation(int iIndex);

  //------------------------------------------------------------------------------
  // Remove a relation
  //------------------------------------------------------------------------------
  public:
  void RemoveRelation(CATCVMRelation *iRelation);

  //------------------------------------------------------------------------------
  // Get the number of ports that are interfaces to this handle
  //------------------------------------------------------------------------------
  public:
  int GetNbPorts();

  //------------------------------------------------------------------------------
  // Get the port for a given index
  //------------------------------------------------------------------------------
  public:
  CATCVMPort *GetPort(int iIndex);

  //------------------------------------------------------------------------------
  // Add a port
  //------------------------------------------------------------------------------
  public:
  void AddPort(CATCVMPort *iPort);

  //------------------------------------------------------------------------------
  // Remove a port
  //------------------------------------------------------------------------------
  private:
  void RemovePort(int iIndex);

  //------------------------------------------------------------------------------
  // Remove a port
  //------------------------------------------------------------------------------
  public:
  void RemovePort(CATCVMPort *iPort);
  
  //------------------------------------------------------------------------------
  // Release data
  //------------------------------------------------------------------------------
  public:
  virtual void ReleaseData();

  //------------------------------------------------------------------------------
  // GetTypeName
  //------------------------------------------------------------------------------
  public:
  virtual CATUnicodeString GetTypeName();

  // Get the atom that is referenced directly or indirectly by this.
  // If this is an atom, return this.
  // If this is a port, return the GetAtom of the Hanlde of this.
  CATCVMAtom * GetAtom();

  //------------------------------------------------------------------------------
  // Get CVM container
  //------------------------------------------------------------------------------
  public:
  virtual CATCVMContainer *GetContainer();

  //------------------------------------------------------------------------------
  // transfer an object from its current contaienr to a new container
  //------------------------------------------------------------------------------
  public :
  void Transfer(CATCVMContainer     *iTargetContainer,
                ListPOfCATCVMObject &ioObjectsToTransfer);

  //------------------------------------------------------------------------------
  // Data
  //------------------------------------------------------------------------------
  protected:
  CATCVMSystem          *_CVMSystem;
  ListPOfCATCVMRelation  _RelationList;
  ListPOfCATCVMPort      _PortList;
};
#endif
