//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2011/06/07
//===================================================================
// CATVidMdlListAdapter.h
// Header definition of class CATVidMdlListAdapter
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2011/06/07 Creation: Code generated by the 3DS wizard  VV6
//===================================================================

#ifndef CATVidMdlListAdapter_H
#define CATVidMdlListAdapter_H

#include <VisuDialog.h>
#include <CATVidMdlAdapter.h>
#include <CATVidMdlIndex.h>
#include <CATVidDnD.h>
class CATVidDnDData;

/**
 * CATVidMdlListAdapter is an adapter class for CATIVidMdl interface.
 * It eases the implementation of list based model by providing some default
 * implementation for several methods of CATIVidMdl interface.
 * To implement a list based model, you can consider first to derive from this
 * adapter compared to directly derived from the CATIVidMdl interface.
 * Otherwise you can also directly used the standard implementation provided by
 * VID, CATVidMdlStandardList.
 *
 * By default, this adapter considers the model as read-only. So, to implement
 * an editable model, you have to re-implement the methods that deal with
 * insertion / deletion / modification of an element.
 *
 * For the complete documentation of each member function, please refer to
 * CATIVidMdl header file.
 */
class ExportedByVisuDialog CATVidMdlListAdapter : public CATVidMdlAdapter
{
  CATDeclareClass;
public:
  /**
   * Default constructor.
   */
  CATVidMdlListAdapter();
  /**
   * Destructor.
   */
  ~CATVidMdlListAdapter();
  /**
   * @copydoc CATIVidMdl#GetParent
   */
  virtual CATVidMdlIndex GetParent(const CATVidMdlIndex & i_index);
  /**
   * @copydoc CATIVidMdl#GetColumnCount
   */
  virtual int GetColumnCount(const CATVidMdlIndex & i_index);
  /**
   * @copydoc CATIVidMdl#InsertColumn
   */
  virtual CATBoolean InsertColumn(int i_column, const CATVidMdlIndex & i_parent);
  /**
   * @copydoc CATIVidMdl#RemoveColumn
   */
  virtual CATBoolean RemoveColumn(int i_column, const CATVidMdlIndex & i_parent);
  /**
   * @copydoc CATIVidMdl#GetModelType
   */
  virtual CATVid::ModelType GetModelType();

protected:
  /**
   * @copydoc CATIVidMdl#ExportDataFromItems
   */
  virtual CATVidDnDData * ExportDataFromItems(const CATSYPDynArray<CATVidMdlIndex> & i_indexes);
  /**
   * @copydoc CATIVidMdl#CanDropData
   */
  virtual CATBoolean CanDropData(CATVidData * i_pData, CATVidDnD::Effect i_effect, const CATVidMdlIndex & i_index, const CATVidDnD::DropLocation & i_location);
  /**
   * @copydoc CATIVidMdl#DropData
   */
  virtual CATBoolean DropData(CATVidData * i_pData, CATVidDnD::Effect i_effect, const CATVidMdlIndex & i_index, const CATVidDnD::DropLocation & i_location);
  /**
   * @copydoc CATIVidMdl#GetViewportDropLocation
   */
  virtual void GetViewportDropLocation(CATVidMdlIndex & o_index, CATVidDnD::DropLocation & o_location);

private:
  // Copy constructor and equal operator
  // -----------------------------------
  CATVidMdlListAdapter(const CATVidMdlListAdapter &);
  CATVidMdlListAdapter & operator= (const CATVidMdlListAdapter &);
};

//-----------------------------------------------------------------------

#endif
