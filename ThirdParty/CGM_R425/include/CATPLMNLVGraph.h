//===================================================================
// COPYRIGHT Dassault Systemes 2018/06/13
//===================================================================
// CATPLMNLVGraph.cpp
// Header definition of class CATPLMNLVGraph
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2018/06/13 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATPLMNLVGraph_H
#define CATPLMNLVGraph_H

#include "CATPLMServicesNLV.h"
#include "CATOmxSharable.h"
#include "CATPLMNLVGraphNode.h"

class ExportedByCATPLMServicesNLV CATPLMNLVGraph: public CATOmxSharable
{
public:
  CATPLMNLVGraph();
  virtual ~CATPLMNLVGraph();

  /*
  * Returns the node related to the given physical id.
  * Returns NULL if there is no known node for the given physical id.
  * The returned node is not addrefed, it is handled by the graph.
  */
  CATPLMNLVGraphNode* GetNode(const CATUuid& iPhysicalId) const;

  /*
  * Returns the root node.
  * Returns NULL if there is no root (ie the graph is empty).
  * The returned node is not addrefed, it is handled by the graph.
  */
  CATPLMNLVGraphNode* GetRootNode() const;

  /*
  * Returns the first minor version for the given physical id.
  * Retuns NULL if the given physical id is unknown from the graph.
  */
  CATPLMNLVGraphNode* GetFirstMinor(const CATUuid& iPhysicalId) const;

  /*
  * Returns the first minor version for the given node.
  * This is the opposite of GetMinorBSF.
  * Returns NULL if the given node is NULL.
  */
  CATPLMNLVGraphNode* GetFirstMinor(CATPLMNLVGraphNode* ipNode) const;

  /*
  * Returns the minor BSF version for the given physical id.
  * Retuns NULL if the given physical id is unknown from the graph.
  */
  CATPLMNLVGraphNode* GetMinorBSF(const CATUuid& iPhysicalId) const;

  /*
  * Returns the minor BSF version for the given node.
  * Returns NULL if the given node is NULL.
  */
  CATPLMNLVGraphNode* GetMinorBSF(CATPLMNLVGraphNode* ipNode) const;

  /*
  * Returns all nodes from the given node's minor family, ie all minor versions for the given node.
  * Returns an empty array if the given node is NULL.
  */
  CATOmxArray<CATPLMNLVGraphNode*> GetAllNodesFromMinorFamily(CATPLMNLVGraphNode* ipNode) const;

  /*
  * Returns all graph's nodes.
  * It contains all major and minor version of the graph.
  */
  CATOmxArray<CATPLMNLVGraphNode*> GetAllNodes() const;

private:
  CATPLMNLVGraph(CATPLMNLVGraph &);
  CATPLMNLVGraph& operator=(CATPLMNLVGraph&);

  void _AddNode(CATPLMNLVGraphNode& iNode);
  void _AddRootNode(CATPLMNLVGraphNode& iRootNode);

  CATOmxSR<CATPLMNLVGraphNode> _spRoot;
  CATOmxOMap<CATUuid, CATPLMNLVGraphNode*> _PhysicalIdToNode;
  CATOmxArray<CATPLMNLVGraphNode*> _Nodes;
  bool _EdgesBuilt;

  friend class CATPLMNLVGraphBuilder;
};

#endif
