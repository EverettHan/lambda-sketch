// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATIBarViewController.h
// Define the CATIBarViewController interface
//
//===================================================================
//
// Usage notes:
//   MANDATORY: You must derive CATExtIBarViewController adapter to implement this interface, the interface is subject to change.
//
//===================================================================
//
//  Jul 2007  Creation: Code generated by the CAA wizard  ERS
//===================================================================
#ifndef CATIBarViewController_H
#define CATIBarViewController_H

#include "CATAfrItf.h"
#include "CATBaseUnknown.h"

extern ExportedByCATAfrItf IID IID_CATIBarViewController;

//------------------------------------------------------------------

/**
 * Interface for implementing a Controller for a @href CATIBarView.
 * Please derive CATExtIBarViewController adapter.
*/
class ExportedByCATAfrItf CATIBarViewController: public CATBaseUnknown
{
  CATDeclareInterface;

  public:
/**
	 * A node as been selected (simple-click)
	 **/
	virtual void OnSelect( CATBaseUnknown_var iNode ) = 0;
	/**
	 * A node as been activated (double-click)
	 **/
	virtual void OnActivate( CATBaseUnknown_var iNode ) = 0;
	/**
	 * Request for contextual menu (right click)
	 **/
	virtual void OnContext( CATBaseUnknown_var iNode ) = 0;
	/**
	 * Cursor moved over a node
	 **/
	virtual void OnMoveOver( CATBaseUnknown_var iNode ) = 0;
	/**
	 * Is a node selected ?
	 **/
	virtual int IsSelected( CATBaseUnknown_var iNode ) = 0;
	/**
	 * Is a node pre-selected ?
	 **/
	virtual int IsPreSelected( CATBaseUnknown_var iNode ) = 0;
	/**
	 * Is a node active ?
	 **/
	virtual int IsActive( CATBaseUnknown_var iNode ) = 0;
	/**
	 * Cursor leaves a button
	 **/
	virtual void OnEndMoveOver (CATBaseUnknown_var iBarComponent) = 0;

};

CATDeclareHandler(CATIBarViewController, CATBaseUnknown);

#endif
