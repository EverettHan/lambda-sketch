//===================================================================
// COPYRIGHT Dassault systems 2017/12/22
//===================================================================
// CATRepViewModeFilterPanel.cpp
// Header definition of class CATRepViewModeFilterPanel
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2017/12/22 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATRepViewModeFilterPanel_H
#define CATRepViewModeFilterPanel_H

#include "CATViewModePanel.h"
#include "CATVisPanel.h" //V6
#include "CATRepViewModePanelNotif.h"
//-----------------------------------------------------------------------

// TBD: this class should not be a sublass of 'CATViewModePanel'. The layouts are differents and 
// almost all the functions are implemented completely differently and overridden here.
// They should be separate classes, or both derives from a common superclass.

class ExportedByCATVisPanel CATRepViewModeFilterPanel : public CATViewModePanel
{ 
public: 
  CATDeclareClass;

  // Standard constructors and destructors
  // -------------------------------------
  CATRepViewModeFilterPanel(CATDialog* i_pParent, CATViewer* i_pViewer);
  virtual ~CATRepViewModeFilterPanel();

  virtual void SetVisibility(CATULong state);
  
  inline int GetPanelRepViewMode() { return _rep_view_mode; }
  void SetPanelRepViewMode(const int _rep_view_mode);
  CATRepViewModePanelNotif* GetCATRepViewModeFilterPanelNotif();

  // This function enables/disables the icon's visibility of the RepViewModeFilterPanel
  inline void SetIconsDisplayMode(bool iValue) { _isIconShowEnabled = iValue; }
  // This function enables/disables the update viewer btn's visibility of the RepViewModeFilterPanel
  inline void SetViewerUpdateBtnMode(bool iValue) { _isViewerUpdateBtnShowEnabled = iValue; }
  // To notify the CATRepViewModeFilterPanel that Viewer's view mode is modified
  void SetViewerViewMode(const int iviewerVM);

 
  CATNotification *GetViewerUpdateBtnActivateNotification() const;
private:
  int _rep_view_mode;
  CATDlgCheckButton  * _pNoneBtn;
  CATRepViewModePanelNotif* _panelNotif;
  CATDlgLabel * _pIconLabel;
  CATDlgLabel * _pStatusNameLabel;
  CATDlgPushButton * _updateViewerBtn;

  bool _isIconShowEnabled, _isViewerUpdateBtnShowEnabled;
  enum IconState
  {
    OKIcon,
    WarnIcon,
    StopIcon
  };
  int SetIconState(CATRepViewModeFilterPanel::IconState iState, int tooltipMessageNumber=0);
  
protected:

  // UI building functions
  void CreatePanel();
  void BuildInterface();
  void UpdatePanel(int viewMode = 0);

  // Setter and getter of the Rep view mode
  void SetViewMode(const int i_viewMode, const int i_active);
  inline int ViewMode(const int i_viewMode) { return (_rep_view_mode & i_viewMode); }

  // Callbacks
  virtual void CloseCBAction(CATNotification *) override; 

  void CheckButtonCB(CATCommand *, CATNotification *, CATCommandClientData);

  void UpdateViewerBtnClicked(CATCommand* cmd, CATNotification* notif, CATCommandClientData data);
};

//-----------------------------------------------------------------------

#endif
