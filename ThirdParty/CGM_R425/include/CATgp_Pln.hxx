// File generated by CPPExt (Storable)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
/*
#ifndef _CATgp_Pln_HeaderFile
#define _CATgp_Pln_HeaderFile

#ifndef _CATgp_Ax3_HeaderFile
#include "CATgp_Ax3.hxx"
#endif
#ifndef _CATStandard_Storable_HeaderFile
#include "CATStandard_Storable.hxx"
#endif
#ifndef _CATStandard_Real_HeaderFile
#include "CATStandard_Real.hxx"
#endif
#ifndef _CATStandard_Boolean_HeaderFile
#include "CATStandard_Boolean.hxx"
#endif
#ifndef _CATgp_Ax1_HeaderFile
#include "CATgp_Ax1.hxx"
#endif
#ifndef _CATStandard_PrimitiveTypes_HeaderFile
#include "CATStandard_PrimitiveTypes.hxx"
#endif
class CATStandard_ConstructionError;
class CATgp_Ax3;
class CATgp_Pnt;
class CATgp_Dir;
class CATgp_Ax1;
class CATgp_Lin;
class CATgp_Ax2;
class CATgp_Trsf;
class CATgp_Vec;


#ifndef _CATStandard_Macro_HeaderFile
#include "CATStandard_Macro.hxx"
#endif

#include "SysCascade.h"

ExportedBySysCascade  Handle_CATStandard_Type& CATgp_Pln_Type_();

class CATgp_Pln  {

public:

 // Methods PUBLIC
 // 
ExportedBySysCascade inline CATgp_Pln();
ExportedBySysCascade inline CATgp_Pln(const CATgp_Ax3& A3);
ExportedBySysCascade  CATgp_Pln(const CATgp_Pnt& P,const CATgp_Dir& V);
ExportedBySysCascade  CATgp_Pln(const CATStandard_Real A,const CATStandard_Real B,const CATStandard_Real C,const CATStandard_Real D);
ExportedBySysCascade inline   void Coefficients(CATStandard_Real& A,CATStandard_Real& B,CATStandard_Real& C,CATStandard_Real& D) const;
ExportedBySysCascade inline   void SetAxis(const CATgp_Ax1& A1) ;
ExportedBySysCascade inline   void SetLocation(const CATgp_Pnt& Loc) ;
ExportedBySysCascade inline   void SetPosition(const CATgp_Ax3& A3) ;
ExportedBySysCascade inline   void UReverse() ;
ExportedBySysCascade inline   void VReverse() ;
ExportedBySysCascade inline   CATStandard_Boolean Direct() const;
ExportedBySysCascade inline  const CATgp_Ax1& Axis() const;
ExportedBySysCascade inline  const CATgp_Pnt& Location() const;
ExportedBySysCascade inline  const CATgp_Ax3& Position() const;
ExportedBySysCascade inline   CATStandard_Real Distance(const CATgp_Pnt& P) const;
ExportedBySysCascade inline   CATStandard_Real Distance(const CATgp_Lin& L) const;
ExportedBySysCascade inline   CATStandard_Real Distance(const CATgp_Pln& Other) const;
ExportedBySysCascade inline   CATStandard_Real SquareDistance(const CATgp_Pnt& P) const;
ExportedBySysCascade inline   CATStandard_Real SquareDistance(const CATgp_Lin& L) const;
ExportedBySysCascade inline   CATStandard_Real SquareDistance(const CATgp_Pln& Other) const;
ExportedBySysCascade inline   CATgp_Ax1 XAxis() const;
ExportedBySysCascade inline   CATgp_Ax1 YAxis() const;
ExportedBySysCascade inline   CATStandard_Boolean Contains(const CATgp_Pnt& P,const CATStandard_Real LinearTolerance) const;
ExportedBySysCascade inline   CATStandard_Boolean Contains(const CATgp_Lin& L,const CATStandard_Real LinearTolerance,const CATStandard_Real AngularTolerance) const;
ExportedBySysCascade    void Mirror(const CATgp_Pnt& P) ;
ExportedBySysCascade    CATgp_Pln Mirrored(const CATgp_Pnt& P) const;
ExportedBySysCascade    void Mirror(const CATgp_Ax1& A1) ;
ExportedBySysCascade    CATgp_Pln Mirrored(const CATgp_Ax1& A1) const;
ExportedBySysCascade    void Mirror(const CATgp_Ax2& A2) ;
ExportedBySysCascade    CATgp_Pln Mirrored(const CATgp_Ax2& A2) const;
ExportedBySysCascade inline   void Rotate(const CATgp_Ax1& A1,const CATStandard_Real Ang) ;
ExportedBySysCascade inline   CATgp_Pln Rotated(const CATgp_Ax1& A1,const CATStandard_Real Ang) const;
ExportedBySysCascade inline   void Scale(const CATgp_Pnt& P,const CATStandard_Real S) ;
ExportedBySysCascade inline   CATgp_Pln Scaled(const CATgp_Pnt& P,const CATStandard_Real S) const;
ExportedBySysCascade inline   void Transform(const CATgp_Trsf& T) ;
ExportedBySysCascade inline   CATgp_Pln Transformed(const CATgp_Trsf& T) const;
ExportedBySysCascade inline   void Translate(const CATgp_Vec& V) ;
ExportedBySysCascade inline   CATgp_Pln Translated(const CATgp_Vec& V) const;
ExportedBySysCascade inline   void Translate(const CATgp_Pnt& P1,const CATgp_Pnt& P2) ;
ExportedBySysCascade inline   CATgp_Pln Translated(const CATgp_Pnt& P1,const CATgp_Pnt& P2) const;
    const CATgp_Ax3& _CSFDB_GetCATgp_Plnpos() const { return pos; }




 // Type management
 //
 ExportedBySysCascade  friend Handle_CATStandard_Type& CATgp_Pln_Type_();

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
CATgp_Ax3 pos;


};


#include "CATgp_Pln.lxx"



// other ExportedBySysCascade inline functions and methods (like "C++: function call" methods)
//


#endif
*/
