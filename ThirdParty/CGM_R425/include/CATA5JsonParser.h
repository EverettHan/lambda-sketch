//===================================================================
// COPYRIGHT Dassault Systemes 2017/12/21
//===================================================================
// CATA5JsonParser.cpp
// Header definition of class CATA5JsonParser
//===================================================================
//
// Usage notes:
//
// Example of returned json:
// For open, search and navigate
//   {
//     "type":"PLMSample2Reference",
//     "name":"26f1eff3-9fd3-468d-9084-b669536d3546-0_4_60fa2fb1_5b88_59d4f813_23",
//     "revision":"---.000",
//     "selectdata":{
//       "physicalid":"60FA2FB100005B8859D4F81F000099F1",
//       "logicalid":"60FA2FB100005B8859D4F81F000099F1",
//       "majorid":"60FA2FB100005B8859D4F81F000099F1"
//     }
//   }
//
// For expand:
//   {
//     "level":"1",
//     "relationship":"PLMSample2Instance",
//     "direction":"to",
//     "id":"33088.23346.34816.25215",
//     "busselect":{
//       "physicalid":"60FA2FB100000E805A018DB80000941B",
//       "logicalid":"60FA2FB100000E805A018DB80000941B"
//       "majorid":"60FA2FB100000E805A018DB80000941B",
//       "type":"PLMSample2Reference",
//       "reserved":"FALSE",
//       "reservedby":""
//     },
//     "relselect":{
//       "physicalid":"60FA2FB100000E805A018DB800009467",
//       "logicalid":"60FA2FB100000E805A018DB800009467",
//       "majorid":"60FA2FB100000E805A018DB800009467",
//       "reserved":"FALSE",
//       "reservedby":""
//     }
//   }
//
//===================================================================
//  2017/12/21 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATA5JsonParser_H
#define CATA5JsonParser_H

#include "CATA5ParserExport.h"
#include "CATA5Parser.h"
#include "CATOmxJsonObject.h"
#include "CATOmxJsonArray.h"
#include "CATOmxCxxPortability.h"

class ExportedByCATA5Parser CATA5JsonParser : public CATA5::Parser
{
public:
  CATA5JsonParser();
  virtual ~CATA5JsonParser();

  HRESULT ResetContext() OMX_Cxx11_OVERRIDE;
  HRESULT ScanChunk(const char *iData, CATLONG64 iLength, bool iLastChunk) OMX_Cxx11_OVERRIDE;
  HRESULT Abort() OMX_Cxx11_OVERRIDE;

  CATA5::ParseStatus GetStatus() OMX_Cxx11_OVERRIDE;
  CATA5::ParseStatus GetErrorInfo(CATA5::ErrorInfo& oErrorInfo) OMX_Cxx11_OVERRIDE;

  bool HasServerGlobalError() OMX_Cxx11_OVERRIDE;
  CATOmxUTF8String GetServerGlobalError() OMX_Cxx11_OVERRIDE;

  void PostError(const CATUnicodeString& iError) OMX_Cxx11_OVERRIDE;
private:
  CATA5JsonParser(CATA5JsonParser &);
  CATA5JsonParser& operator=(CATA5JsonParser&);

  void _HandleParsingError(const char* iError);
  void _HandleCsvRow(CATA5::CsvRow& iCsvRow);
  void _PublishCurrentCsvRowChunk();

  // Methods to process returned JsonObject
  void _ProcessXMQLResponse(CATOmxJsonObject& iJsonXMQLResponse);
  void _ProcessBody(CATOmxJsonObject& iJsonBody);
  void _ProcessResult(CATOmxJsonObject& iJsonResult);
  void _ProcessOutput(CATOmxJsonObject& iJsonOutput, CATA5::CsvRowDefinition& iDefinition);
  HRESULT _ProcessCsvRowData(CATOmxJsonObject& iJsonData, CATA5::CsvRowDefinition& iDefinition, CATA5::CsvRow& ioCsvRow);
  void _ProcessFooter(CATOmxJsonObject& iJsonFooter);

  HRESULT _GetData(CATOmxJsonObject& iJsonData, const CATA5::FieldDescription& iFieldDescription, CATOmxAny& oData);

  CATUnicodeString _JsonValueAsString;
  CATA5::ParseStatus _ParseStatus;
  CATOmxUTF8String _ParsingError; // Parsing error generated during json parsing.
  CATOmxUTF8String _ServerGlobalError; // Global Error returned by the server. If empty it means there is no error.
  CATLONG64 _ServerElapseMs; // ElapseMs returned by the server.
  CATLONG64 _RowParsedCount;
  int _NbProcessedChunck;
  CATA5::CsvRowChunk* _pCurrentCsvRowChunk;
};

#endif
