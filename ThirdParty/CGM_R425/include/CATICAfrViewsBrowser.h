//===================================================================
// COPYRIGHT Microsoft 2012/03/22
//===================================================================
// CATICAfrViewsBrowser.cpp
// Header definition of class CATICAfrViewsBrowser
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/03/22 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef CATICAfrViewsBrowser_H
#define CATICAfrViewsBrowser_H

#include "CATAfrItf.h"
#include "CATICAfrComponent.h"
//---------------------------------------------------------------------- System
#include "CATUnicodeString.h"
#include "CATString.h"



extern ExportedByCATAfrItf  IID IID_CATICAfrViewsBrowser ;

/**
*Interface allowing to add a C-Afr Component of whatever object to a hierachy system. All views added 
**/
class ExportedByCATAfrItf CATICAfrViewsBrowser : public CATICAfrComponent
{
CATDeclareInterface;

public:


/**
*
* <br><b>Role</b>: Add a component to the browser. If the component instance name exists so the it will not be created.
* <br/> the toolbar always create the view of the last added component. The title of the CAfrComponent will be added in the browser toobar
* @param piAfrComponent
* 
* @return
* <dl>
* <dt><code>S_OK</code> <dd>
* <dt><code>E_FAIL</code> <dd>
* </dl>
*/
virtual HRESULT AddComponent( CATICAfrComponent* piAfrComponent ) = 0;


/**
*
* <br><b>Role</b>: Add a view to the browser  This view will replace the previous added view if exists and add an item 
* @param i_spComponentView the view to add. LEGAL VALUES for example a CATVidWidget object
* 
* @param iTitle the title of the component view. It allows to be display in an item storing the component view added
* 
* @param iId the id of this component. This component will be wrapped into a CAfr Component. You can retrieve it by the following code :
* <code><pre>
*  CATICAfrComponent * piAfrComponent = NULL;
*  CATBaseUnknown_var myObject = NULL_var;
*  CATCAfrComponentServices::CATCAfrGetComponent(iId,&piAfrComponent);
*  if (piAfrComponent)
*  {
*    CATICAfrComponentElement * piComponentElement = NULL;
*    piAfrComponent->QueryInterface( IID_CATICAfrComponentElement, (void**)& piComponentElement );
*    if (piComponentElement)
*    {
*      piComponentElement->GetSubObject(myObject);//get your component view
*      piComponentElement->Release();
*      piComponentElement =NULL;
*    }
*    piAfrComponent->Release();
*    piAfrComponent = NULL;
*  }
* </pre></code>
* 
* @return
* <dl>
* <dt><code>S_OK</code> <dd>
* <dt><code>E_FAIL</code> <dd>
* </dl>
*/
virtual HRESULT AddComponentView( const CATBaseUnknown_var & i_spComponentView, const CATUnicodeString & iTitle, const CATString & iId) = 0;


/**
*
* <br><b>Role</b>: Get the current component id which is present in this browser. If you have set a CATBaseUnknown_var component View, you can retrieve it with the id you set with the method AddComponentView. 
* @param oId the id of the current component id 
* 
* @return
* <dl>
* <dt><code>S_OK</code> <dd>
* <dt><code>E_FAIL</code> <dd>
* </dl>
*/
virtual HRESULT GetCurrentComponentId(CATString & oId) = 0;



/**
*
* <br><b>Role</b>: Set accesses to commands in the toolbar of the browser.<br/>
* If there are always accesses in the toolbar, it will be replaced.
* @param piComponentElement The accesses to the commands.<br/>
*       LEGAL VALUES are CATCmdStarter. It can be null (allow to empty the toolbar)
* Here is an example to add commands:
* <pre><code>
*  //Create your access chain ; use #include <CATCreateWorkshop.h> for macros NewAccess
*  NewAccess(CATCmdStarter,Starter1,Starter1Name);
*  SetAccessCommand(Starter1,"Header1");//Set command header
*  NewAccess(CATCmdStarter,Starter2,Starter2Name);
*  SetAccessCommand(Starter2,"Header2");
*  //starter1 will be chained with starter2
*  SetAccessNext(Starter1,Starter2);
*</code></pre><pre><code>
*  //Retrieve your browser component
*  CATICAfrComponent * piAfrComponent = NULL;
*  CATCAfrComponentServices::CATCAfrGetComponent("MyBrowser",&piAfrComponent);
*  CATICAfrViewsBrowser_var spBrowser (piAfrComponent);
*  if (spBrowser != NULL_var && Starter1)
*  {
*    //convert the starter to CATICAfrComponentElement *
*    CATICAfrComponentElement * piElement = NULL;
*    Starter1->QueryInterface(IID_CATICAfrComponentElement, (void **) & piElement);
*    //Set the new accesses in the browser toolbar
*    spBrowser->SetToolbarCommands(piElement);
*    if (piElement) piElement->Release();
*    piElement = NULL;
*  }
*  if (piAfrComponent) piAfrComponent->Release();
*  piAfrComponent = NULL;
*
*</code></pre>
* 
* 
* @return
* <dl>
* <dt><code>S_OK</code> <dd>
* <dt><code>E_FAIL</code> <dd>
* </dl>
*/
virtual HRESULT SetToolbarCommands(CATICAfrComponentElement * piComponentElement ) = 0;

};

//-----------------------------------------------------------------------
CATDeclareHandler( CATICAfrViewsBrowser, CATBaseUnknown );

#endif
