/*====================================================
 *  (c) 1999 Dassault Systemes. All rights reserved  =
 *     Generated by CNextBackEnd version 0.1 on      =
 *===================================================*/

#ifndef CATIALicenseSettingAtt_h
#define CATIALicenseSettingAtt_h

#include "CATCORBABoolean.h"
#include "CAT_VARIANT_BOOL.h"

#include "JS0LIB0.h"

#include "CATBSTR.h"
#include "CATIASettingController.h"
#include "CATSafeArray.h"

extern ExportedByJS0LIB0 IID IID_CATIALicenseSettingAtt;

class ExportedByJS0LIB0 CATIALicenseSettingAtt : public CATIASettingController
{
    CATDeclareInterface;

public:


    virtual HRESULT __stdcall get_ServerTimeOut(float & oTimeOut)=0;

    virtual HRESULT __stdcall put_ServerTimeOut(float iTimeOut)=0;

    virtual HRESULT __stdcall GetServerTimeOutInfo(CATBSTR & AdminLevel, CATBSTR & oLocked, CAT_VARIANT_BOOL & oModified)=0;

    virtual HRESULT __stdcall SetServerTimeOutLock(CAT_VARIANT_BOOL iLock)=0;

    virtual HRESULT __stdcall get_NodelockAlert(CATLONG & oAlert)=0;

    virtual HRESULT __stdcall put_NodelockAlert(CATLONG iAlert)=0;

    virtual HRESULT __stdcall GetNodelockAlertInfo(CATBSTR & AdminLevel, CATBSTR & oLocked, CAT_VARIANT_BOOL & oModified)=0;

    virtual HRESULT __stdcall SetNodelockAlertLock(CAT_VARIANT_BOOL iLock)=0;

	virtual HRESULT __stdcall get_Frequency(float & oFrequency)=0;

    virtual HRESULT __stdcall put_Frequency(float iFrequency)=0;

    virtual HRESULT __stdcall GetFrequencyInfo(CATBSTR & AdminLevel, CATBSTR & oLocked, CAT_VARIANT_BOOL & oModified)=0;

    virtual HRESULT __stdcall SetFrequencyLock(CAT_VARIANT_BOOL iLock)=0;

    virtual HRESULT __stdcall get_ShowLicense(CAT_VARIANT_BOOL & oMode)=0;

    virtual HRESULT __stdcall put_ShowLicense(CAT_VARIANT_BOOL iMode)=0;

    virtual HRESULT __stdcall GetShowLicenseInfo(CATBSTR & AdminLevel, CATBSTR & oLocked, CAT_VARIANT_BOOL & oModified)=0;

    virtual HRESULT __stdcall SetShowLicenseLock(CAT_VARIANT_BOOL iLock)=0;

    virtual HRESULT __stdcall GetLicensesList(CATLONG iDefaultLicenses,CATSafeArrayVariant *& oTabDLName)=0;

    virtual HRESULT __stdcall GetLicensesListInfo(CATBSTR & AdminLevel, CATBSTR & oLocked, CAT_VARIANT_BOOL & oModified)=0;

    virtual HRESULT __stdcall SetLicensesListLock(CAT_VARIANT_BOOL iLock)=0;

    virtual HRESULT __stdcall GetLicense(const CATBSTR & iLicense, CATBSTR & oValue)=0;

    virtual HRESULT __stdcall SetLicense(const CATBSTR & iLicense, const CATBSTR & iValue)=0;

    virtual HRESULT __stdcall GetLicenseInfo(const CATBSTR & iLicense, CATBSTR & AdminLevel, CATBSTR & oLocked, CAT_VARIANT_BOOL & oModified)=0;

    virtual HRESULT __stdcall SetLicenseLock(const CATBSTR & iLicense, CAT_VARIANT_BOOL iLock)=0;


};

CATDeclareHandler(CATIALicenseSettingAtt, CATIASettingController);

#include "CATBaseDispatch.h"
#include "CATBaseUnknown.h"
#include "CATIABase.h"
#include "CATVariant.h"
#include "IDispatch.h"
#include "IUnknown.h"


#endif
