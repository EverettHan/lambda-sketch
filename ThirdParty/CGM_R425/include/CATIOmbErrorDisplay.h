// COPYRIGHT DASSAULT SYSTEMES 2004
//===================================================================
//
// CATIOmbErrorDisplay.h
// Define the CATIOmbErrorDisplay interface
//
//===================================================================
#ifndef CATIOmbErrorDisplay_H
#define CATIOmbErrorDisplay_H
/**
 * @level Private
 * @usage U3
 */

#include "AC0XXLNK.h"
#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"

extern ExportedByAC0XXLNK IID IID_CATIOmbErrorDisplay ;

//------------------------------------------------------------------
/**
 * @nodoc 
 */
#define CATOmbNfyAbortRetryIgnore (1 << 19)
/**
 * @nodoc 
 */
#define CATOmbNfyOK               (1 << 20)
/**
 * @nodoc 
 */
#define CATOmbNfyOKCancel         (1 << 21)
/**
 * @nodoc 
 */
#define CATOmbNfyRetryCancel      (1 << 22)
/**
 * @nodoc 
 */
#define CATOmbNfyYesNo            (1 << 23)
/**
 * @nodoc 
 */
#define CATOmbNfyYesNoCancel      (1 << 24)
/**
 * @nodoc 
 */
#define CATOmbNfyAction           (1 << 25)
/**
 * @nodoc 
 */
#define CATOmbNfyInformation      (1 << 26)
/**
 * @nodoc 
 */
#define CATOmbNfyWarning          (1 << 27)
/**
 * @nodoc 
 */
#define CATOmbNfyError            (1 << 28)

/**
 * Dialog box Styles.
 * <br><b>Role:</b>It is the style of the dialog box generated by the @href CATIOmbErrorDisplay interface.
 * The style can be a combination of several styles using the logical or. 
 * <pre>
 *  MyDlgStyle= CATOmbNfyInformation | CATOmbNfyYesNo 
 * </pre> 
 * @param CATOmbNfyWarning To specify a warning window
 * @param CATOmbNfyError To specify an error window
 * @param CATOmbNfyAction To specify a confirmation window
 * @param CATOmbNfyAbortRetryIgnore The window has Abort, Retry and Ignore buttons
 * @param CATOmbNfyRetryCancel The window has Retry and Cancel buttons
 * @param CATOmbNfyOK The window has an OK button
 * @param CATOmbNfyOKCancel The window has OK and Cancel buttons
 * @param CATOmbNfyYesNo The window has Yes and No buttons
 * @param CATOmbNfyYesNoCancel The window has Yes, No and Cancel buttons
 */
typedef unsigned long CATOmbErrorDisplayType;



/** Launches a synchronous dialog box from the model layer.
 * <b>Role:</b>This interface enables you to launch a synchronous dialog box.
 - It is implemented by the session, that you retrieve using the @href GetPtrSession global session.
 */
class ExportedByAC0XXLNK CATIOmbErrorDisplay: public CATBaseUnknown
{
   friend class CATOmbErrorDisplayer;
   CATDeclareInterface;
protected:

    /**
     * Launches a synchronous dialog box from the model layer.
     * @param iTitle
     *      Title of window.
     * @param iMessage
     *      Message to display.
	  * @param iStyle
	  *      The style of the popup window.
     *      CATOmbNfyInformation is the default value,  a button style should always be used.
	  * @param oReturn
	  *  an integer identifying the button which has been pressed.
	  * <br><b>Legal values:</b>
	  * <dl>
	  * <dt><tt>1</tt><dd> The OK button has been pressed. </dd></dt>
	  * <dt><tt>2</tt><dd> The Cancel button has been pressed. </dd></dt>
	  * <dt><tt>3</tt><dd> The Yes button has been pressed. </dd></dt>
	  * <dt><tt>4</tt><dd> The No button has been pressed. </dd></dt>
	  * <dt><tt>5</tt><dd> The Retry button has been pressed. </dd></dt>
	  * <dt><tt>6</tt><dd> The Abort button has been pressed. </dd></dt>
	  * <dt><tt>7</tt><dd> The Ignore button has been pressed. </dd></dt>
     * </dl>
	  * @return
	  *  Error code of fonction (E_FAIL if no interactive window available in batch to display message).
     */
	  virtual HRESULT DisplayError(const CATUnicodeString& iTitle,const CATUnicodeString& iMessage,
        CATOmbErrorDisplayType iStyle,int& oReturn)=0;
};
CATDeclareHandler( CATIOmbErrorDisplay, CATBaseUnknown );
#endif
