// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// CATCkeLightFormulaFactory.h
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2008  Creation: Code generated by the CAA wizard  frh
//===================================================================
#ifndef CATCkeLightFormulaFactory_H
#define CATCkeLightFormulaFactory_H

#include "CATBaseUnknown.h"
#include "CATLifExpressions.h"
#include "CATICkeRelationForwards.h"

class CATICkeExpression_var;
class CATIType_var;

//-----------------------------------------------------------------------

/*
This class provides services for Rule discovery component
*/
class ExportedByCATLifExpressions CATCkeLightFormulaFactory
{
  public:



    /**
	 * Creates a rule based on some parameters available in the list
	 * @param iListOfParameter list of parameters that can be used in the rule
	 * @param iBody body of the rule
	 * @param oExpressionCreated Rule created (may be NULL)
	 * @param oListUsedParameters list of used parameters in the same order than the signature of the rule. Can be used as is for evaluation*
	 * @return S_OK if creation succeeded, S_FALSE if invalid syntax, E_INVALIDARG if bad parameters
	 */
	static HRESULT CreateRule                 (	const CATCkeListOfParm &iListOfParameter  ,
		                                        const CATUnicodeString &iBody,
				                                CATICkeExpression_var &oExpressionCreated,
												const CATCkeListOfParm &oListUsedParameters);
										
    /**
	 * Creates a check based on some parameters available in the list
	 * @param iListOfParameter list of parameters that can be used in the check
	 * @param iBody body of the check
	 * @param oExpressionCreated Check created (may be NULL)
	 * @param oListUsedParameters list of used parameters in the same order than the signature of the check. Can be used as is for evaluation*
	 * @return S_OK if creation succeeded, S_FALSE if invalid syntax, E_INVALIDARG if bad parameters
	 */
	static HRESULT CreateCheck                (	const CATCkeListOfParm &iListOfParameter  ,
		                                        const CATUnicodeString &iBody,
				                                CATICkeExpression_var &oExpressionCreated,
												const CATCkeListOfParm &oListUsedParameters);
    /**
	 * Creates a formula based on some parameters available in the list
	 * @param iListOfParameter list of parameters that can be used in the formula
	 * @param iTypeOfValueExpected type of value expected by the formula
	 * @param iBody body of the formula
	 * @param oExpressionCreated Formula created (may be NULL)
	 * @param oListUsedParameters list of used parameters in the same order than the signature of the formula. Can be used as is for evaluation*
	 * @return S_OK if creation succeeded, S_FALSE if invalid syntax, E_INVALIDARG if bad parameters
	 */
	static HRESULT CreateFormula              (	const CATCkeListOfParm &iListOfParameter  ,
												const CATIType_var &iTypeOfValueExpected,
		                                        const CATUnicodeString &iBody,
				                                CATICkeExpression_var &oExpressionCreated,
												const CATCkeListOfParm &oListUsedParameters);
										



};

//-----------------------------------------------------------------------

#endif
