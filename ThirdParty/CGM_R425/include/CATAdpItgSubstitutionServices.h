//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2011/09/14
//===================================================================
// CATAdpItgSubstitutionServices.cpp
// Header definition of class CATAdpItgSubstitutionServices
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2011/09/14 Creation: Code generated by the 3DS wizard
//===================================================================
/**
 * @level Private
 * @usage U1
 */


#ifndef CATAdpItgSubstitutionServices_H
#define CATAdpItgSubstitutionServices_H

#include "CATPLMIntegrationAccess.h"
#include "CATOmxVector.h"
#include "CATIAdpPLMIdentificator.h"
#include "CATListPtrCATIAdpPLMIdentificator.h"

class CATIPLMNavInstance;
class CATBinary;
class CATPLMType;

#if defined (private) || defined(friend) || defined (protected)
#error Forbidden re-define of 'private', 'friend' or 'protected'
// Fatal error on solaris
@error 
#endif

#define AuthorizedModule 999
#define CATPLMSubstitutionEngine                  AuthorizedModule
#define CATPLMIntegrationAccess                   AuthorizedModule
#define CATPLMClientCoreModel                     AuthorizedModule
#define CATPCTSubstitutionServices                AuthorizedModule

#if _MK_MODNAME_ == AuthorizedModule
#else
#error This header is for internal use only
    @error
#endif

#undef CATPLMSubstitutionEngine
#undef CATPLMIntegrationAccess
#undef CATPLMClientCoreModel
#undef CATPCTSubstitutionServices

typedef CATOmxVector<CATIAdpPLMIdentificator> CATIAdpPLMIdentificatorVector;
typedef CATOmxIter<CATIAdpPLMIdentificator> CATIAdpPLMIdentificatorIterator;

//-----------------------------------------------------------------------

class ExportedByCATPLMIntegrationAccess CATAdpItgSubstitutionServices
{
public:
// Standard constructors and destructors
// -------------------------------------
CATAdpItgSubstitutionServices ();
virtual ~CATAdpItgSubstitutionServices ();

    /**
    * Lists the identificators of all the substitute family of an instance (either already loaded in session and from database)
    *
    * @param ipInstance
    *   The instance we are handling.
    * @param iFamilyId
    *   The family UUID
    * @param opAllSubstitutesIDs
    *   The list of substitution family identificators.
    *
    * @return
    *   S_OK         : Retrieving the substitutes instances succeeded.
    *   E_FAIL       : There were an unexpected problem.
    *   E_INVALIDARG : if any problem with argument type.
    */
    HRESULT ListAllSubstitutionFamily(CATIPLMNavInstance                * ipInstance, 
                                      CATBinary                         & iFamilyId, 
                                      CATListPtrCATIAdpPLMIdentificator & opAllSubstitutesIDs);


private:
// Copy constructor and equal operator
// -----------------------------------
CATAdpItgSubstitutionServices (CATAdpItgSubstitutionServices &);
CATAdpItgSubstitutionServices& operator=(CATAdpItgSubstitutionServices&);
CATPLMType* _pExtPLMType;
};

//-----------------------------------------------------------------------

#endif
