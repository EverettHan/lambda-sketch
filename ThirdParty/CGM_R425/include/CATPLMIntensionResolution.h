//===================================================================
// COPYRIGHT Dassault Systemes 2017/12/11
//===================================================================
// CATPLMIntensionResolution.cpp
// Header definition of class CATPLMIntensionResolution
//===================================================================
//
// Usage notes: The intension is an ordered list of subkeys. Each subkey can have one of the following forms:
//	SYSTAG : STAGING@branchName
//	SYSTAG : HEAD@branchName
//	TAG : tagName
//  Basically, this class implement a subkey of an intension, an intension can be seen as a list a such object of this class
//===================================================================
//  2017/12/11 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATPLMIntensionResolution_H
#define CATPLMIntensionResolution_H
#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"
#include "CATPLMServicesPPrime.h"

#include "CATOmxDefaultCollecManager.h"
#include "CATOmxClassManager.h"
#include "CATOmxCollecManager.h"


namespace CATPLMResolutionKeyNameSpace { enum tagType { SYSTAG, TAG }; };

class ExportedByCATPLMServicesPPrime CATPLMIntensionResolution
{

  friend class CATPLMResolutionKey;
public:

  CATPLMIntensionResolution();

  /*
  * Constructors for intension subkeys with the following form : 'TAG:tagValue' or ' SYSTAG:tagValue@branchName'
  * This function :
  *   - set '_CATPLMResolutionKeyNameSpace::tagType' to enum type { SYSTAG, TAG }
  *   - set '_tagValue' to the given input
  *   - set '_branchName' to the given input
  *   - set '_constructorHResult' to 'S_OK' if everything OK or 'E_FAIL' if incompatible argument has been given
  *     in this case, all the getter functions may be corrupted and 'E_FAIL' HRESULT is returned by the functions
  * @param itagType    [in]
  *     enum tagType { SYSTAG, TAG }
  * @param iTagValue   [in]
  *     Value of tag : could be 'HEAD' 'STAGING' or a custums value
  * @param iBranchName [in]
  *     optional, mandatory for itagType = SYSTAG and ignored if itagType = TAG
  */
  CATPLMIntensionResolution(CATPLMResolutionKeyNameSpace::tagType itagType, const CATUnicodeString &iTagValue, const CATUnicodeString &iBranchName = "");

  virtual ~CATPLMIntensionResolution();

  /*
  *  Accessor to _tagType class attribute which coresponds to the two different format 'TAG' or 'SYSTAG
  *  output :
  * @param oTagName [out]
  *     tagType
  * @return
  * <dt> <code>S_OK</code> if everything is OK
  * <dt> <code>E_FAIL</code> if an argument error has occured during the construction of the intension and imply that he outputs could be corrupted
  */
  HRESULT GetTagType(CATPLMResolutionKeyNameSpace::tagType oTagType) const;

  /*
  *  Accessor to '_oBrancheName' class attribute which coresponds to 'BranchName' in format 'SYSTAG:XXX@BranchName'
  *  output :
  * @param oSoBrancheNamee[out]
  *     BranchName
  * @return
  * <dt> <code>E_FAIL</code>  if the function is called but the tagType  is 'TAG:tagName' which is incompatible
  * <dt> <code>S_OK</code> if everything is OK
  * <dt> <code>E_FAIL</code> if an argument error has occured during the construction of the intension and imply that he outputs could be corrupted
  */
  HRESULT GetBranchName(CATUnicodeString &oBrancheName)const;

  /*
  *  Accessor to '_sysTagState' class attribute which coresponds to 'XXX' ('HEAD' or 'STAGING') in format 'SYSTAG:XXX@BranchName'
  *  or to 'tagName' in the format  : TAG:tagName'
  * @param oTagValue [out]
  *     'HEAD' or 'STAGING' or custumized 'tagName'
  * @return
  * <dt> <code>S_OK</code> if everything is OK
  * <dt> <code>E_FAIL</code> if an argument error has occured during the construction of the intension and imply that he outputs could be corrupted
  */
  HRESULT GetTagValue(CATUnicodeString & oTagValue) const;

  /*
  * String representation of the intension following the formats :
  *	  'SYSTAG:TagValue@branchName'
  * 	'TAG:TagValue'
  * @param oIntensionAsString [out]
  *     string representation of the intension
  * @return
  * <dt> <code>S_OK</code> if everything is OK
  * <dt> <code>E_FAIL</code> if an argument error has occured during the construction of the intension and imply that he outputs could be corrupted
  */
  HRESULT GetAsString(CATUnicodeString & oIntensionAsString)const;

  // Copy constructor and equal operator
  // -----------------------------------
  CATPLMIntensionResolution(CATPLMIntensionResolution &);
  CATPLMIntensionResolution& operator=(const CATPLMIntensionResolution&);

  /*
  * Hash function and compare function for Collection  *
  */
  CATHashKey Hash() const;

  int  Compare(const CATPLMIntensionResolution*) const;
private:
  //LCS2PP majsc
  // tagType : SYSTAG or TAG
  CATPLMResolutionKeyNameSpace::tagType _TagType;

  // tagValue : STAGING, HEAD or tagName
  CATUnicodeString _TagValue;

  // Optional, to be used when tagType is 'SYSTAG' default value is ""
  CATUnicodeString _BranchName;

  // HR from construction 
  HRESULT _ConstructorHResult;

};

//-----------------------------------------------------------------------
template <> ExportedByCATPLMServicesPPrime CATOmxCollecManager & CATOmxDefaultCollecManager <CATPLMIntensionResolution>::manager();
#endif
