//===================================================================
// COPYRIGHT DS SolidWorks 2010/09/02
//===================================================================
// SWXIUiComponent.cpp
// Header definition of class SWXIUiComponent
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/09/02 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef SWXIUiComponent_H
#define SWXIUiComponent_H

#include "SWXUtBasePacket.h"
#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"
#include "CATListOfCATUnicodeString.h"
#include "SWXUtVector.h"
#include "CATIDOMElement.h"
#include "SWXUtParameterReason.h"
#include "SWXBaseUiEnums.h"
#include "SWXUiBaseEventArgs.h"
#include "SWXUiIxComponentBinding.h"
#include "SWXUtMap.h"

class SWXUiIxInteraction;
class CATAcquisitionAgent;
class CATVidWidget;
class CATMathPoint2Df;
class SWXUtPacket;
class SWXUiIxComponent;
class CATVidFraWindow;
class SWXIUiComponent_var;
class CATCommand;
class SWXUiBaseEvent;
class SWXIUtPacketEngineHarness;
class SWXUtPacketSimpleParameter;

typedef	SWXUtMap<CATUnicodeString, SWXUtPacketSimpleParameter*> SWXUtPrivateParamMap;

extern ExportedBySWXUtBasePacket  IID IID_SWXIUiComponent ;

class ExportedBySWXUtBasePacket SWXIUiComponent: public CATBaseUnknown
{
	CATDeclareInterface;

public:

	virtual void InitializeComponent2(const CATListOfCATUnicodeString& iBindings, SWXUtPacket* iPacket, SWXIUiComponent* iParent, SWXIUtPacketEngineHarness* iHarness) = 0;
	virtual void ConstructComponent(SWXIUiComponent* iParent) = 0;
	virtual bool IsConstructed() = 0;
	virtual void FinalizeCIDBuild() = 0;
	virtual void SetNameQualifier(const CATUnicodeString& iQualifier) = 0; // Components may be instantiated xComponent:MyQualifier in which case this is passed here on creation.

	// Add or remove a widget to the parent component's container or dialog. 
	virtual void AddToContainer(SWXIUiComponent_var iSource, CATVidWidget* iWidget, CATUnicodeString iIndex = "") = 0;
	virtual void RemoveFromContainer(SWXIUiComponent_var iSource, CATVidWidget* iWidget) = 0;
	virtual CATVidWidget* GetEmbeddedWidget() = 0;

	// Add or remove a dialog to the parent component's container or dialog. 
	virtual void AddDialogToContainer(CATVidFraWindow* iDialog) = 0;
	virtual void RemoveDialogFromContainer(CATVidFraWindow* iDialog) = 0;


	// If the component supports selection, has to supply these methods.
	virtual CATAcquisitionAgent * GetAcquisitionAgent() = 0;
	virtual bool IsSelectionState() = 0;

	// Parallel to IsOutputSet on the selection agent; whether the framework should now
	// auto-advance from this selection to the next. Normally false during edit, for multi-selections, etc.
	virtual bool AutoAdvanceSelection() = 0;

	// Update component after a change to its bound parameters
	virtual void OnParameterChange(SWXUtParameterReason iReason) = 0;
	virtual void ApplyParameterChange(bool iPreview) = 0; // DEPRECATED VERSION

	// Update any dialog layout after changes which may affect this component.
	virtual void UpdateLayout() = 0;

	// Is this component part of the current interaction, or does some option mean it's not relevant/visible?
	// THIS OUGHT TO BE OBSOLETED - NOT APPROPRIATE
	virtual bool IsEnabled() = 0;

	virtual void GetUsageDetails(SWXUiIxComponentUsageDetails& oBindings) = 0;


	virtual void SetDomNode(CATIDOMElement_var iDomNode) = 0;
	virtual CATIDOMElement_var GetDomNode() = 0;

	virtual void BuildComponents(const CATIDOMElement_var& iNode) = 0;

	virtual void SetRelativePath(const CATUnicodeString iPath) = 0;
	virtual CATUnicodeString  GetRelativePath() = 0;

	virtual CATString GetName() = 0; // We have this from CATCommand

	virtual SWXUtPacket* GetPacketPrivileged() = 0;

	virtual bool UserFocusOffered() = 0;

	virtual void ChildChangedFocus(SWXIUiComponent* iComponent, bool iFocusIn) = 0;

	virtual SWXIUiComponent* GetParent() = 0;

	virtual void PreUnhook() = 0;
	virtual void Unhook() = 0;

	virtual void SetOwningIxFile(const CATUnicodeString& iOwningIxFile) = 0;
	virtual CATUnicodeString GetOwningIxFile()const = 0;

	virtual bool IsContainerComponent() = 0;
	virtual unsigned int GetAllowedStyle()const = 0;

	virtual bool AcceptReturnKey() = 0;

	virtual void SetVisibleFlag(const bool & iVisibleFlag) = 0;
	virtual bool GetVisibleFlag() = 0;

	virtual void BubbleEvent(SWXUiBaseEvent* iEvt, SWXUiBaseEventArgs& iEvtArgs )= 0;
	virtual void TunnelEvent(SWXUiBaseEvent* iEvt, SWXUiBaseEventArgs& iEvtArgs, bool& obConsumed )= 0;

	virtual CATUnicodeString GetSelectionFieldCursor() = 0;
	virtual bool ValueChangeAffectsUndo() const = 0;

};

//-----------------------------------------------------------------------

CATDeclareHandler( SWXIUiComponent, CATBaseUnknown );

#endif
