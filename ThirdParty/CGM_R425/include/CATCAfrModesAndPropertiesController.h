//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2013/09/13
//===================================================================
// CATCAfrModesAndPropertiesController.cpp
// Header definition of class CATCAfrModesAndPropertiesController
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2013/09/13 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATCAfrModesAndPropertiesController_H
#define CATCAfrModesAndPropertiesController_H

#include "CATAfrFoundation.h"
#include "CATAdapterCAfrComponentController.h"

class CATCAfrComponentControllerArg;
class CATICAfrComponent;

#include "CATCallbackManager.h"
#include "CATBaseUnknown_WR.h"
//-----------------------------------------------------------------------

class ExportedByCATAfrFoundation CATCAfrModesAndPropertiesController: public CATAdapterCAfrComponentController
{
  CATDeclareClass;
  public:
    // Standard constructors and destructors
    // -------------------------------------
    CATCAfrModesAndPropertiesController ();
    virtual ~CATCAfrModesAndPropertiesController ();

    virtual HRESULT ComponentAction( CATCAfrComponentControllerArg* ipControllerArg );

    CATDeclareCBEvent(AfrToolbarBoxes_Visibility_Change_Event);//to track ToolbarBoxes visibility
    CATBoolean IsViewBuilt(CATString iId);

  private:
    // Copy constructor and equal operator
    // -----------------------------------
    CATCAfrModesAndPropertiesController (CATCAfrModesAndPropertiesController &);
    CATCAfrModesAndPropertiesController& operator=(CATCAfrModesAndPropertiesController&);

    CATString ComputeKeyPrefix(CATString iComponentName);
    void ApplyExpandPreferences(CATICAfrComponent* ipAfrComponent);
    //Callback methods
    void OnWindowActivated( CATCallbackEvent iPublishedEvent, 
                            void* ipPublishingObject, 
                            CATNotification* ipNotification, 
                            CATSubscriberData iClientData, 
                            CATCallback iCallback );
		void OnEndWorkshopFillViews(CATCallbackEvent iPublishedEvent, 
																void* ipPublishingObject, 
																CATNotification* ipNotification, 
																CATSubscriberData iClientData, 
																CATCallback iCallback );
    void DisplayComponent( CATICAfrComponent* ipAfrComponent, 
                           void* ipPublishingObject ,
                           CATCAfrModesAndPropertiesController * pThat);
		void ApplyStatePreferencesOnPanelSections(const CATString iComponentName, 
																							const CATString &iCurrentWS,
																							const CATString &iCurrentWB);
		
		void ApplyVisibilityPreferences(CATICAfrComponent* ipAfrComponent, CATCAfrModesAndPropertiesController * pThat,CATBaseUnknown_var ispViewer);

    //Attributs
    CATCallback      _WndActivate;
		CATCallback      _EndWksFillViews;
		CATBaseUnknown_WR _wrViewer;
		CATUnicodeString _panelName;

};

//-----------------------------------------------------------------------

#endif
