/* -*-C++-*- */

#ifndef CATCVMMerge_H
#define CATCVMMerge_H

// COPYRIGHT DASSAULT SYSTEMES 2006

//===================================================================
//===================================================================
//
// CATCVMMerge
//
// class for Collaborative Variational Modelling (CVM) merge operator
//
//===================================================================


//===================================================================
// Usage notes:
//
//===================================================================

//===================================================================
// Mar. 2006    Creation                         Alex State
//===================================================================

#include "CATCVMSysOperators.h"
#include "CATCVMSysOperator.h"
#include "ListPOfCATCVMSystem.h"

class CATCVMContainer;

class ExportedByCATCVMSysOperators CATCVMMerge : public CATCVMSysOperator
{
  //------------------------------------------------------------------------------
  // Create a merge operator
  //------------------------------------------------------------------------------
  public:
  static CATCVMMerge *Create(CATCVMContainer *iContainer);

  //------------------------------------------------------------------------------
  // Constructor
  //------------------------------------------------------------------------------
  protected:
  CATCVMMerge(CATCVMContainer *iContainer);

  //------------------------------------------------------------------------------
  // Destructor
  //------------------------------------------------------------------------------
  public:
  virtual ~CATCVMMerge();

  //------------------------------------------------------------------------------
  // Add a system to merge
  //------------------------------------------------------------------------------
  public:
  void AddSystem(CATCVMSystem *iSystem);

  //------------------------------------------------------------------------------
  // Run
  //------------------------------------------------------------------------------
  public:
  void Run();

  //------------------------------------------------------------------------------
  // Get resulting component
  //------------------------------------------------------------------------------
  public:
  CATCVMSystem *GetResultingSystem();

  //------------------------------------------------------------------------------
  // TwoSystemRun
  //------------------------------------------------------------------------------
  private:
  void TwoSystemRun(CATCVMSystem *iSystem1,
                    CATCVMSystem *iSystem2);

  //------------------------------------------------------------------------------
  // SimpleTwoSystemRun
  //------------------------------------------------------------------------------
  private:
  void SimpleTwoSystemRun(CATCVMSystem *iSystem1,
                          CATCVMSystem *iSystem2);

  //------------------------------------------------------------------------------
  // Data
  //------------------------------------------------------------------------------
  protected:
  ListPOfCATCVMSystem  _SystemList;
  CATCVMSystem        *_ResultingSystem;
};
#endif
