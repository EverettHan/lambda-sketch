//===================================================================
// COPYRIGHT DS SolidWorks 2011/02/09
//===================================================================
// SWXIUiIxVisuEventListener.cpp
// Header definition of class SWXIUiIxVisuEventListener
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2011/02/09 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef SWXIUiIxVisuEventListener_H
#define SWXIUiIxVisuEventListener_H

#include "SWXUtBasePacket.h"
#include "CATBaseUnknown.h"
#include "SWXUtMacForOverride.h"

extern ExportedBySWXUtBasePacket  IID IID_SWXIUiIxVisuEventListener ;

class CATKeybdEvent;
class CATNotification;

class ExportedBySWXUtBasePacket SWXIUiIxVisuEventListener: public CATBaseUnknown
{
	CATDeclareInterface;

public:

	enum EventAction_e
	{
		EventAction_ForceStop = -1,
		EventAction_DefaultStop = 0,
		EventAction_Continue = 1
	};

	virtual bool AutoRegister() = 0;
	virtual SWXIUiIxVisuEventListener::EventAction_e KeyboardAction(const CATKeybdEvent * ipEvent) = 0;
	virtual SWXIUiIxVisuEventListener::EventAction_e DeviceAction(const CATNotification * ipEvent) = 0;
    
	virtual bool ShouldProcessKeyboardEvent(const CATKeybdEvent *ipEvent) const = 0;

	//If the listener wants to consume this keystroke, then don't pass it to any editboxes in focus.
	//This is like a sepcial accelrator key.
	virtual bool IsConsumedByListener(const CATKeybdEvent * iEvent)const = 0;
};

//-----------------------------------------------------------------------
CATDeclareHandler( SWXIUiIxVisuEventListener, CATBaseUnknown );

#endif
