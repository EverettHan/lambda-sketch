// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// VPMIDicProcParameter.h
// Define the VPMIDicProcParameter interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Jan 2009  Creation: Code generated by the CAA wizard  IWI
//===================================================================
/**
 * @level Private
 * @usage U3
 */
#ifndef VPMIDicProcParameter_H
#define VPMIDicProcParameter_H

#include "VPMIDicInterfaces.h"
#include "VPMIDicParameterB.h"
#include "CATListOfCATString.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByVPMIDicInterfaces IID IID_VPMIDicProcParameter;
#else
extern "C" const IID IID_VPMIDicProcParameter ;
#endif

//------------------------------------------------------------------

/**
* Interface representing xxx.
*
* <br><b>Role</b>: Components that implement
* VPMIDicProcParameter are ...
* <p>
* Do not use the VPMIDicProcParameter interface for such and such

*
* @example
*  // example is optional
*  VPMIDicProcParameter* currentDisplay = NULL;
*  rc = window-&gt;QueryInterface(IID_VPMIDicProcParameter,
*                                     (void**) &amp;currentDisplay);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByVPMIDicInterfaces VPMIDicProcParameter: public VPMIDicParameterB
{
  CATDeclareInterface;

  public:

    /**
    * If the parameter has the DataType “Option”, return the OptionValues for this parameter. Otherwise HRESULT is E_FAIL
    * @param oOptionValues
    */
    virtual HRESULT getOptionValues(CATListOfCATString & oOptionValues ) = 0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------

#endif
