// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATIAfrBottomToolbarHeaderArgument.h
// Define the CATIAfrBottomToolbarHeaderArgument interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Oct 2004  Creation: Code generated by the CAA wizard  ers
//===================================================================
#ifndef CATIAfrBottomToolbarHeaderArgument_H
#define CATIAfrBottomToolbarHeaderArgument_H

#include "CATIAfrCommandHeaderArgument.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATAfrItf IID IID_CATIAfrBottomToolbarHeaderArgument;
#else
extern "C" const IID IID_CATIAfrBottomToolbarHeaderArgument ;
#endif

class CATAfrComboWrapper;
//------------------------------------------------------------------

/**
 * Describe the functionality of your interface here
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 */
class ExportedByCATAfrItf CATIAfrBottomToolbarHeaderArgument: public CATIAfrCommandHeaderArgument
{
  CATDeclareInterface;

  public:

  /**
    * Sets the argument value as a pointer to the combo.
    * <br><b>Role:</b>
    * This method is used by the @href CATAfrBottomToolbarHeader to pass the pointer to the combo
    * to the started command.
    * @param comboArgument
    *   pointer to the combo
    * @return
    *   The HRESULT value is always S_OK in the default implementation.
    */
    virtual HRESULT SetComboArgument (const CATAfrComboWrapper *iComboArgument) = 0;

  /**
    * Gets the argument value if its type is integer.
    * <br><b>Role:</b>
    * Use this method in your command constructor to get pointer to the combo.
    * @param comboArgument
    *   pointer to the combo if the return code is S_OK
    * @return
    *   The HRESULT value is always S_OK if the argument was set using SetComboArgument, E_FAIL otherwise.
    */
    virtual HRESULT GetComboArgument (CATAfrComboWrapper *& oComboArgument) = 0;



  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------

#endif
