//===================================================================
// COPYRIGHT  2021/12/21
//===================================================================
// IVICameraServices.cpp
// Header definition of class IVICameraServices
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2021/12/21 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef IVICameraServices_H
#define IVICameraServices_H

#include "IVInterfaces.h"
#include "CATBaseUnknown.h"
#include <vector>
#include "CATListOfCATICamera.h"
#include "CATUnicodeString.h"
#include "IVISUIScenarioMultipipeHelpers.h"
#include "CATSYPEvent.h"
#include "IVViewpointsNotifier.h"


class CATICamera;
class CATListValIVCameraData;

class IVICameraServices_var;

extern ExportedByIVInterfaces  IID IID_IVICameraServices ;
class ExportedByIVInterfaces IVICameraServices: public CATBaseUnknown
{
CATDeclareInterface;

public:
  static HRESULT GetInstance(IVICameraServices_var& ohSingleton);

  virtual void GetCameraList(CATLISTP(CATICamera)& oCameraList) = 0;
  virtual void ReleaseCameraList(CATLISTP(CATICamera)& ioCameraList) = 0;

  /*
  * Retrieves the list of camera names.
  */
  virtual void GetCameraNames(std::vector<CATUnicodeString>& oCameraNames) = 0;

  /*
  * Retrieves the list of cameras as a list of IVCameraData.
  */
  virtual void GetCameraList(bool iCamerasType, CATListValIVCameraData& ioCameraDataList, bool iGetPrefs = true) = 0;

  /*
   * Saves a viewpoint (potentially creating it in the "VR Viewpoints" desktop panel).
   */
  virtual void SaveVP(bool iCamerasType, CATString iIconName, CATUnicodeString iVPLabel, IVCameraData const& iCameraData, bool iSaveInDialog = true) = 0;

  /*
  * Deletes a viewpoint (potentially deleting it from the "VR Viewpoints" desktop panel).
  */
  virtual void  DeleteVP(bool iCamerasType, CATUnicodeString iVPLabel) = 0;

  /*
  * Clears all viewpoints.
  */
  virtual void ClearVP() = 0;

  /*
  * Determines Product Explore activation.
  */
  virtual bool IsNRToolkitControllerActivated() = 0;

  /*
  * Activates/deactivates Product Explore activation.
  */
  virtual void ToggleProductExplore(bool iOnOff) = 0;

  /*
  * Set event listener to the dialog
  */
  virtual void SetEventListener() = 0;
 
  /*
  * Get the notifier pointer
  */
  virtual IVViewpointsNotifier* GetNotifier() const = 0;

};

//-----------------------------------------------------------------------
CATDeclareHandler( IVICameraServices, CATBaseUnknown );

#endif
