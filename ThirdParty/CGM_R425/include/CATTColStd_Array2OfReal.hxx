// File generated by CPPExt (Value)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.

#ifndef _CATTColStd_Array2OfReal_HeaderFile
#define _CATTColStd_Array2OfReal_HeaderFile

#ifndef _CATStandard_Integer_HeaderFile
#include "CATStandard_Integer.hxx"
#endif
#ifndef _CATStandard_Boolean_HeaderFile
#include "CATStandard_Boolean.hxx"
#endif
#ifndef _CATStandard_Address_HeaderFile
#include "CATStandard_Address.hxx"
#endif
#ifndef _CATStandard_Real_HeaderFile
#include "CATStandard_Real.hxx"
#endif
class CATStandard_RangeError;
class CATStandard_OutOfRange;
class CATStandard_OutOfMemory;
class CATStandard_DimensionMismatch;


#ifndef _CATStandard_Macro_HeaderFile
#include "CATStandard_Macro.hxx"
#endif

#include "SysCascade.h"

class CATTColStd_Array2OfReal  {

public:

 // Methods PUBLIC
 // 
ExportedBySysCascade  CATTColStd_Array2OfReal(const CATStandard_Integer R1,const CATStandard_Integer R2,const CATStandard_Integer C1,const CATStandard_Integer C2);
ExportedBySysCascade  CATTColStd_Array2OfReal(const CATStandard_Real& Item,const CATStandard_Integer R1,const CATStandard_Integer R2,const CATStandard_Integer C1,const CATStandard_Integer C2);
ExportedBySysCascade    void Init(const CATStandard_Real& V) ;
ExportedBySysCascade    void Destroy() ;
~CATTColStd_Array2OfReal()
{
  Destroy();
}

ExportedBySysCascade   const CATTColStd_Array2OfReal& Assign(const CATTColStd_Array2OfReal& Other) ;
 const CATTColStd_Array2OfReal& operator =(const CATTColStd_Array2OfReal& Other) 
{
  return Assign(Other);
}

inline   CATStandard_Integer ColLength() const;
inline   CATStandard_Integer RowLength() const;
inline   CATStandard_Integer LowerCol() const;
inline   CATStandard_Integer LowerRow() const;
inline   CATStandard_Integer UpperCol() const;
inline   CATStandard_Integer UpperRow() const;
inline   void SetValue(const CATStandard_Integer Row,const CATStandard_Integer Col,const CATStandard_Real& Value) ;
inline  const CATStandard_Real& Value(const CATStandard_Integer Row,const CATStandard_Integer Col) const;
inline  const CATStandard_Real& operator()(const CATStandard_Integer Row,const CATStandard_Integer Col) const
{
  return Value(Row,Col);
}

inline   CATStandard_Real& ChangeValue(const CATStandard_Integer Row,const CATStandard_Integer Col) ;
inline   CATStandard_Real& operator()(const CATStandard_Integer Row,const CATStandard_Integer Col) 
{
  return ChangeValue(Row,Col);
}






protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 
ExportedBySysCascade  CATTColStd_Array2OfReal(const CATTColStd_Array2OfReal& AnArray);
ExportedBySysCascade    void Allocate() ;


 // Fields PRIVATE
 //
CATStandard_Integer myLowerRow;
CATStandard_Integer myLowerColumn;
CATStandard_Integer myUpperRow;
CATStandard_Integer myUpperColumn;
CATStandard_Boolean myDeletable;
CATStandard_Address myData;


};

#define Array2Item CATStandard_Real
#define Array2Item_hxx <CATStandard_Real.hxx>
#define CATTCollection_Array2 CATTColStd_Array2OfReal
#define CATTCollection_Array2_hxx <CATTColStd_Array2OfReal.hxx>

#include "CATTCollection_Array2.lxx"

#undef Array2Item
#undef Array2Item_hxx
#undef CATTCollection_Array2
#undef CATTCollection_Array2_hxx


// other inline functions and methods (like "C++: function call" methods)
//


#endif
