// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATIPLMProviderURLTransfo.h
// Define the CATIPLMProviderURLTransfo interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Sep 2007  Creation: Code generated by the CAA wizard  PVO
//===================================================================
#ifndef CATIPLMProviderURLTransfo_H
#define CATIPLMProviderURLTransfo_H

/**
* @level Protected
* @usage U3
*/

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMProviderURLTransfo;
#else
extern "C" const IID IID_CATIPLMProviderURLTransfo ;
#endif

class CATUnicodeString;
class CATPLMID;

//------------------------------------------------------------------

/**
* Used to transform an identifier set included into an URL in a CATPLMID.
*
*/

class ExportedByCATPLMServicesItf CATIPLMProviderURLTransfo: public CATBaseUnknown
{
  CATDeclareInterface;



public:

  /**
  * Returns a PLMID from an URL.
  * Note : This method can connect the provider if needed and enough information is given within the URL.
  * 
  * @param iURL
  *   The parameters including the encoded identifier set (and connection params if needed).
  *   The iURL is UTF-8 encoded.
  * @param oPLMID
  *   The PLM identificator corresponding to the retrived object in the repository
  *
  * @return
  *   <ul>
  *   <li><code>S_OK</code> if the component was found in the database.</li>
  *   <li><code>S_FALSE</code> a connection occurs but the component was not found.</li>
  *   <li><code>E_FAIL</code> no connection occurs so the component was not found.</li>
  *   </ul>
  *
  */


  virtual HRESULT GetPLMIDFromURL (const CATUnicodeString & iURL, CATPLMID & oPLMID) = 0;

};

//------------------------------------------------------------------

#endif
