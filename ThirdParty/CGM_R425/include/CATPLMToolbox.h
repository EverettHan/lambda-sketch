// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATPLMToolbox.h
// Header definition of CATPLMToolbox
//
//===================================================================
//
// Usage notes:
//   Temporary: created to import CATPsVpmToolbox methods used here
//              and to remove the link towards EnoviaV5Adapter
//
//===================================================================
//  Mar 2004  Creation: Code generated by the CAA wizard  jsy
//===================================================================
#ifndef CATPLMToolbox_H
#define CATPLMToolbox_H

#include "CATPLMToolkit.h"
#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"
#include "CATOmxKeyString.h"
#include "CATPLMPathDataH.h"
#include "CATPLMSemanticRelationData.h"

class CATBinary;
class CATPLMCEStamp;
class CATIDOMElement_var;
class CATPLMType;
struct CATIALevelInfo;
class CATUuid;


/**
 * Describe your class here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 */
class ExportedByCATPLMToolkit CATPLMToolbox
{
public:
  /**
  /* Format used for Local Save, please use CATPLMToolboxPrivate! I have authorized CATPLMPXn
  /* CATPLMPathDataH <> CATUnicodeString
  */
  static HRESULT MarshalPathData(const CATPLMPathDataH & iPathData, CATUnicodeString& oValue);
  static HRESULT UnmarshalPathData(const CATUnicodeString& iValue, CATPLMPathDataH & oPathData);

  /*
    USE WITH CAUTION!!!!!!
    Use with caution especially if you are connected to a provider different from M1 and TSTProvider.
    Be sure that binary format returned is the right one for your usage.
  */
  static HRESULT Convert(const CATUuid& iUuid, CATBinary& oBin, unsigned int iFormat = 16);

  /*
    USE WITH CAUTION!!!!!!
    Use with caution especially if you are connected to a provider different from M1 and TSTProvider.
    Be sure that binary format returned is the right one for your usage.
  */
  static HRESULT Convert(const CATBinary& iBin, CATUuid& oUuid, unsigned int iFormat = 16);

  static HRESULT ConvertUpdatestamp(const CATOmxAny& iUpdateStampAsUuidOrInt, CATOmxAny& oUpdateStampAsStringOrInt);

  static HRESULT Convert(const CATUuid& iUuidValue, CATUnicodeString& oUuidAsString);

  static CATUnicodeString Convert(const CATUuid& iUuidValue);

  static HRESULT Convert(const CATUnicodeString& iUuidAsString, CATUuid& oUuidValue);

private:
  static char*  _MarshallDbBinary(char  *p, const  unsigned  char  *data, short  sz);
  CATPLMToolbox();

};

#endif
