// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// PLMIBLClientSaveAction.h
// Define the PLMIBLClientSaveAction interface
//
//===================================================================
// Octo 2015  Creation: Code generated by the CAA wizard ECN
//===================================================================

/**
* @level Protected
* @usage U3
*/

#ifndef PLMIBLClientSaveAction_H
#define PLMIBLClientSaveAction_H

// Export
#include "PLMBusinessLogicInterfaces.h"

// Inheritance
#include "CATBaseUnknown.h"

class CATListValCATIInstance_var;
class CATIInstance_var;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByPLMBusinessLogicInterfaces IID IID_PLMIBLClientSaveAction;
#else
extern "C" const IID IID_PLMIBLClientSaveAction;
#endif

/**
* Interface to launch the integration of the business logic definition related to the PLM Client Save Action : PLM Opening ID="PLMBLClientSaveAction".
*/
class ExportedByPLMBusinessLogicInterfaces PLMIBLClientSaveAction: public CATBaseUnknown
{
  CATDeclareInterface;

public:
 

  /**
  * Provides the Client Save Action specified by the business logic definition.
  *
	* @param iPLMComponentList
  *   List of component proxies on which will be apply the identification initialization
  * @param iPLMContextList
  *   List of contextual objects and parameters. Each context must hold the following information:
  *   <ul>
  *       <li> OperationType (string): "Create" , "Modify" or "Delete". This is equivalent to CIDstatus on CATComponentId component</li>
  *       <li> AggregatingReference (object): when a PLM Instance is created, this parameter provides a pointer to the PLM Reference entity that will aggregate the PLM instance. Reading this PLM entity, the BL can initialized the Instance naming based on its aggregating reference name. </li>
  *       <li> Reference (object): when a PLM Instance is created, this parameter provides a pointer to the PLM Reference entity of the PLM instance. Reading this PLM entity, the BL can initialized the Instance naming based on its reference name.</li>
  *   </ul>
  *
  * @return
  *   <ul>
  *       <li> S_OK     if the business logic is successfully integrated </li>
  *       <li> S_FALSE  in following cases :
  *           <ul>
  *               <li>  if their is no business logic to integrate for at least one component </li>
	*              <li>  if there are some truncation problems : warnings risen by knowledge on attribute valuation 
  *                     according to dictionary. In this case , the caller has to ignore or to deal with the truncation
  *               </li>
  *           </ul>
  *       <li> E_FAIL   if an error occurs. The following error classes and error identifiers can be associated with:
  *           <ul>
  *               <li>  @error PLMIBLClientSaveActionError PLMIBLClientSaveActionError::RunInitialization::InternalError
  *                     The business logic access service failed
  *               </li>
  *               <li>  @error PLMIBLClientSaveActionError PLMIBLClientSaveActionError::RunInitialization::ExecutionError
  *                     The business logic definition execution failed
  *               </li>
  *           </ul>
  *       </li>
  *   </ul>
  */
  virtual HRESULT RunSaveAction(CATListValCATIInstance_var & iPLMComponentList , CATListValCATIInstance_var & ioPLMContextList) = 0;

	 virtual HRESULT RunSaveAction(CATIInstance_var & iPLMComponent , CATIInstance_var & ioPLMContext) = 0;
 
};

#endif
