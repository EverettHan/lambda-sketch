// COPYRIGHT Dassault Systemes 2009
//===================================================================
//  June 2009  Creation: Code generated by the LRG wizard
//===================================================================
#ifndef PLMIConfigurableConnectionsManager_H
#define PLMIConfigurableConnectionsManager_H

/**
* @level Protected
* @usage U3
*/

#include "CATPLMCfgCnxMngrInterfaces.h"
#include "CATBaseUnknown.h"
class CATIPLMConfigFilterable_var;
class CATIPLMComponent_var;
class CATListPtrCATIPLMComponent;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMCfgCnxMngrInterfaces IID IID_PLMIConfigurableConnectionsManager;
#else
extern "C" const IID IID_PLMIConfigurableConnectionsManager ;
#endif

class ExportedByCATPLMCfgCnxMngrInterfaces PLMIConfigurableConnectionsManager: public CATBaseUnknown
{
  CATDeclareInterface;

public:

  /**  
  * The nature of the operations that can be performed on a connection impacted by model changes under 
  * configuration.
  * @param DoNothing                          - Nothing to do on the connection. It is not impacted.
  * @param DeleteConnection                   - The connection will be deleted since it is not valid w.r.t. the 
  *                                             effectivities of its pointed objects.
  * @param RerouteConnectionToVariant         - The connection will be rerouted to the variant model.
  * @param CloneConnectionToVariant           - The connection will be cloned then its clone will be rerouted to 
  *                                             the variant model.
  * @param CloneConnectionToVariantThenDelete - The connection will be cloned then its clone will be 
  *                                             rerouted to the variant model and eventually the original 
  *                                             connection will be deleted since it is not valid.
  * @param UserDecisionRequired               - DEPRECATED !! DO NOT USE ANYMORE !!
  */  
  enum OperationNature { DoNothing=0,
                         DeleteConnection,
                         RerouteConnectionToVariant,
                         CloneConnectionToVariant,
                         CloneConnectionToVariantThenDelete,
                         UserDecisionRequired /*DEPRECATED, DO NOT USE!*/ } ;

  /**  
  * Diagnoses for an impacted connection.
  * @param NotRuled                             - None of the relations of the connection is tagged as ‘Ruled’. 
  *                                               DoNothing will consequently be proposed.
  * @param DoesNotPointScopeWithARuledRelation  - (synchronous mode only) None of the original instances that 
  *                                               have been split or trimmed is pointed by the connection through 
  *                                               a 'Ruled' relation. DoNothing will consequently be proposed.
  * @param RuledRelationNotLoadedInSession      - At least one of the 'Ruled' relations of the connection is
  *                                               not fully loaded. DoNothing will be proposed but an asynchronous
  *                                               analysis will have to be performed !
  * @param PointedEffectivitiesAreDisjoint      - The effectivities pointed by the connection through 'Ruled' relations
  *                                               are disjoint/not compatible. DeleteConnection or 
  *                                               CloneConnectionToVariantThenDelete will consequently be proposed.
  * @param RedundantWithUnionOfOtherConnections - A union of the computed effectivities of some members of the family
  *                                               of this connection already covers the computed effectivity of this
  *                                               connection. DeleteConnection or CloneConnectionToVariantThenDelete
  *                                               will consequently be proposed.
  * @param ValidNo        - The effectivities pointed by the connection has been analyzed.
  */  
  enum Diagnosis { NotRuled=1, DoesNotPointScopeWithARuledRelation, RuledRelationNotLoadedInSession, PointedEffectivitiesAnalyzed } ;

  /**
  * Launch the analysis & retrieves the list of impacted configurable connections. Note that if only a
  * a subset of the impacted connection have been treaten with PerformOperations,
  * <tt>AnalyzeAndGetListOfImpactedConnections</tt> must be called again in order to treat the remaining impacted 
  * connections.
  *
  *  @param   oListOfImpactedInstances
  *      The list of of impacts on configurable connections. <br>
  *      Output parameter. <br>
  *      This list MUST be provided by caller as empty. This method returns an error otherwise. <br>
  *      This list is returned to caller as empty if method fails.
  *      ITEMS IN THIS RETURNED LIST MUST BE RELEASED BY THE CALLER AFTER USE !!
  *   @return
  *     <ul>
  *       <li> S_OK if the method succeeds.</li>
  *       <li> S_FALSE if the method succeeds but there is no impacted connection. <br>
  *       <li> E_INVALIDARG if the input argument is not valid or unexpected.</li>
  *       <li> E_FAIL if this methods failed to analyze & list the impacted connections. There are several 
  *            reasons that can explain this failure that are listed below!<br>
  *           Use @href CATError#CATGetLastError and @href CATError#GetMsgId to retrieve additional information 
  *           about the reason of the failure.
  *           Eventually release the @href CATError you retrieved and call @href CATError#CATCleanLastError to 
  *           clean the error manager.
  *           <ul>
  *             <li><tt>CfgCnxMngr_ERR_03</tt>:</li>
  *                This manager is dead and cannot be used anymore.
  *           </ul>
  *        <li> E_UNEXPECTED otherwise. 
  *      </ul>
  */
  virtual HRESULT AnalyzeAndGetListOfImpactedConnections(CATListPtrCATIPLMComponent& oListOfImpactedConnections)=0;


  /** 
  *	@no doc
  *	DEPRECATED -> Use other signature below.
  */
  virtual HRESULT GetProposedOperationForImpactedConnection(const CATIPLMComponent_var& ispImpactedConnection, OperationNature& oNatureOfProposedOperation)const=0;

  /**
  * Retrieves the proposed operation and a diagnosis for a given impacted configurable connection.
  *
  *  @param   ispImpactedConnection
  *      An impacted configurable connection.<br>
  *      Input parameter. <br>
  *      If must be a connection of the list returned by <tt>AnalyzeAndGetListOfImpactedConnections</tt> 
  *      otherwise this method will fail (see detailed failure codes below)<br>
  *  @param  oNatureOfProposedOperation
  *      The nature of the proposed operation for the given impacted configurable connection.<br>
  *      Output parameter. <br>
  *  @param opDiagnosis
  *      A diagnosis that explains why this operation is proposed.<br>
  *      Output parameter.<br>
  *   @return
  *     <ul>
  *       <li> S_OK if this method succeeds to give a proposed operation (even DoNothing) 
  *            for the given impacted connection.</li>
  *       <li> E_INVALIDARG if the input argument is not valid (null pointers or not a connection!).</li>
  *       <li> E_FAIL if this methods fails to give a proposed operation for the given impacted connection. There 
  *            are several reasons that can explain this failure that are listed below!<br>
  *           Use @href CATError#CATGetLastError and @href CATError#GetMsgId to retrieve additional information 
  *           about the reason of the failure.
  *           Eventually release the @href CATError you retrieved and call @href CATError#CATCleanLastError to 
  *           clean the error manager.
  *           <ul>
  *             <li><tt>CfgCnxMngr_ERR_01</tt>:</li>
  *                Impacts have not yet been analyzed and determined! Plz first call 
  *                <tt>AnalyzeAndGetListOfImpactedConnections</tt> to launch the analysis and retrieve the list 
  *                of impacted connections.
  *             <li><tt>CfgCnxMngr_ERR_02</tt>:</li>
  *                The connection given as input argument argument is not impacted! Plz provide an impacted 
  *                connection from the list previously returned by 
  *                <tt>AnalyzeAndGetListOfImpactedConnections</tt>.<br>
  *                Note that you can also get this error if there are no impacts at all!
  *             <li><tt>CfgCnxMngr_ERR_03</tt>:</li>
  *                This manager is dead and cannot be used anymore!
  *           </ul>
  *        <li> E_UNEXPECTED otherwise.
  *      </ul>
  */
  virtual HRESULT GetProposedOperationAndDiagnosisForImpactedConnection(const CATIPLMComponent_var& ispImpactedConnection,
                                                                        OperationNature& oNatureOfProposedOperation,
                                                                        Diagnosis*& opDiagnosis)const=0;

  /**
  * Validate the proposed operation for a given impacted configurable connection.
  *
  *  @param   ispImpactedConnection
  *      An impacted configurable connection.<br>
  *      Input parameter. <br>
  *      If must be a connection of the list returned by <tt>AnalyzeAndGetListOfImpactedConnections</tt>
  *      otherwise this method will fail (see detailed failure codes below)<br>
  *   @return
  *     <ul>
  *       <li> S_OK if validation of proposed action for the given impacted connection is ok.</li>
  *       <li> E_INVALIDARG if the input argument is not valid (null pointers or not a connection!).</li>
  *       <li> E_FAIL if this methods fails to validate the proposed operation for the given impacted connection. 
  *            There are several reasons that can explain this failure that are listed below!<br>
  *           Use @href CATError#CATGetLastError and @href CATError#GetMsgId to retrieve additional information 
  *           about the reason of the failure.
  *           Eventually release the @href CATError you retrieved and call @href CATError#CATCleanLastError to 
  *           clean the error manager.
  *           <ul>
  *             <li><tt>CfgCnxMngr_ERR_01</tt>:</li>
  *                Impacts have not yet been analyzed and determined! Plz first call 
  *                <tt>AnalyzeAndGetListOfImpactedConnections</tt> to launch the analysis and retrieve the list 
  *                of impacted connections.
  *             <li><tt>CfgCnxMngr_ERR_02</tt>:</li>
  *                The connection given as input argument argument is not impacted! Plz provide an impacted 
  *                connection from the list previously returned by 
  *                <tt>AnalyzeAndGetListOfImpactedConnections</tt>.<br>
  *                Note that you can also get this error if there are no impacts at all!
  *             <li><tt>CfgCnxMngr_ERR_03</tt>:</li>
  *                This manager is dead and cannot be used anymore!
  *           </ul>
  *        <li> E_UNEXPECTED otherwise. 
  *      </ul>
  */
  virtual HRESULT ValidateProposedOperationForImpactedConnection(const CATIPLMComponent_var& ispImpactedConnection)=0;

  /**
  * Force an operation on a given impacted configurable connection.
  *
  *  @param   ispImpactedConnection
  *      An impacted configurable connection.<br>
  *      Input parameter. <br>
  *      If must be a connection of the list returned by <tt>AnalyzeAndGetListOfImpactedConnections</tt> 
  *      otherwise this method will fail (see detailed failure codes below)<br>
  *   @return
  *     <ul>
  *       <li> S_OK if forced action on the given impacted connection is ok.</li>
  *       <li> E_INVALIDARG if the input argument is not valid (null pointers or not a connection!).</li>
  *       <li> E_FAIL if this methods fails to force an operation for the given impacted connection. There are 
  *            several reasons that can explain this failure that are listed below!<br>
  *           Use @href CATError#CATGetLastError and @href CATError#GetMsgId to retrieve additional information 
  *           about the reason of the failure.
  *           Eventually release the @href CATError you retrieved and call @href CATError#CATCleanLastError to 
  *           clean the error manager.
  *           <ul>
  *             <li><tt>CfgCnxMngr_ERR_01</tt>:</li>
  *                Impacts have not yet been analyzed and determined! Plz first call 
  *                <tt>AnalyzeAndGetListOfImpactedConnections</tt> to launch the analysis and retrieve the list 
  *                of impacted connections.
  *             <li><tt>CfgCnxMngr_ERR_02</tt>:</li>
  *                The connection given as input argument argument is not impacted! Plz provide an impacted 
  *                connection from the list previously returned by 
  *                <tt>AnalyzeAndGetListOfImpactedConnections</tt>.<br>
  *                Note that you can also get this error if there are no impacts at all!
  *             <li><tt>CfgCnxMngr_ERR_03</tt>:</li>
  *                This manager is dead and cannot be used anymore!
  *           </ul>
  *        <li> E_UNEXPECTED otherwise. 
  *      </ul>
  */
  virtual HRESULT ForceOperationOnImpactedConnection(const CATIPLMComponent_var& ispImpactedConnection,OperationNature iNatureOfForcedOperation)=0;


  /**
  * Ignore an impacted configurable connection.
  *
  *  @param   ispImpactedConnection
  *      An impacted configurable connection.<br>
  *      Input parameter. <br>
  *      If must be a connection of the list returned by <tt>AnalyzeAndGetListOfImpactedConnections</tt>
  *      otherwise this method will fail (see detailed failure codes below)<br>
  *   @return
  *     <ul>
  *       <li> S_OK the given impacted connection is successfully ignored.</li>
  *       <li> E_INVALIDARG if the input argument is not valid (null pointers or not a connection!).</li>
  *       <li> E_FAIL if this methods fails to ignore the given impacted connection. There are several reasons 
  *            that can explain this failure that are listed below!<br>
  *           Use @href CATError#CATGetLastError and @href CATError#GetMsgId to retrieve additional information 
  *           about the reason of the failure.
  *           Eventually release the @href CATError you retrieved and call @href CATError#CATCleanLastError to 
  *           clean the error manager.
  *           <ul>
  *             <li><tt>CfgCnxMngr_ERR_01</tt>:</li>
  *                Impacts have not yet been analyzed and determined! Plz first call 
  *                <tt>AnalyzeAndGetListOfImpactedConnections</tt> to launch the analysis and retrieve the list 
  *                    of impacted connections.
  *             <li><tt>CfgCnxMngr_ERR_02</tt>:</li>
  *                The connection given as input argument argument is not impacted! Plz provide an impacted 
  *                connection from the list previously returned by 
  *                <tt>AnalyzeAndGetListOfImpactedConnections</tt>.<br>
  *                Note that you can also get this error if there are no impacts at all!
  *             <li><tt>CfgCnxMngr_ERR_03</tt>:</li>
  *                This manager is dead and cannot be used anymore!
  *           </ul>
  *        <li> E_UNEXPECTED otherwise. 
  *      </ul>
  */
  virtual HRESULT IgnoreImpactedConnection(const CATIPLMComponent_var& ispImpactedConnection)=0;

  /**
  * Performs the operations that have been associated on some of the impacted connections.
  *
  *   @return
  *     <ul>
  *       <li> S_OK if all operations have sucessfully been performed!</li>
  *       <li> E_FAIL if this methods fails. There are several reasons that can explain this failure that are
  *           listed below!<br>
  *           Use @href CATError#CATGetLastError and @href CATError#GetMsgId to retrieve additional information 
  *           about the reason of the failure.
  *           Eventually release the @href CATError you retrieved and call @href CATError#CATCleanLastError to 
  *           clean the error manager.
  *           <ul>
  *             <li><tt>CfgCnxMngr_ERR_01</tt>:</li>
  *                Impacts have not yet been analyzed and determined (or analysis must be done again) ! Plz
  *                first call <tt>AnalyzeAndGetListOfImpactedConnections</tt> to launch the analysis
  *                and retrieve the list of impacted connections.
  *             <li><tt>CfgCnxMngr_ERR_03</tt>:</li>
  *                This manager is dead and cannot be used anymore!
  *           </ul>
  *        <li> E_UNEXPECTED otherwise. 
  *      </ul>
  */
  virtual HRESULT PerformOperations()=0;

  /* DO NOT USE! DEPRECATED! */
  virtual HRESULT PerformOperationsAndDie()=0;

  /**
  * Returns TRUE if <tt>this</tt> manager is dead, FALSE otherwise.
  */
  virtual CATBoolean IsDead()=0;



  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(PLMIConfigurableConnectionsManager, CATBaseUnknown);

#endif
