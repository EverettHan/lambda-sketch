// COPYRIGHT Dassault Systemes 2011
//===================================================================
//
// CATIPLMCompassRefinementFacet.h
// Define the CATIPLMCompassRefinementFacet interface
//
//===================================================================
//
// Usage notes:
//   New interface: 
// an adapter for this interface is delivered in CATAdapterPLMCompassRefinementFacet
// and must be used !!!
// 
//
//===================================================================
//
//  Jan 2011  Creation: Code generated by the CAA wizard          olc
//===================================================================
#ifndef CATIPLMCompassRefinementFacet_H
#define CATIPLMCompassRefinementFacet_H

#include "UIModelInterfaces.h"

#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"
#include "CATSetOfCATUnicodeString.h"
#include "CATDataType.h"

#include "CATLISTP_CATBaseUnknown.h"
#include "CATListOfCATBoolean.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByUIModelInterfaces IID IID_CATIPLMCompassRefinementFacet;
#else
extern "C" const IID IID_CATIPLMCompassRefinementFacet ;
#endif

//------------------------------------------------------------------
//enum FacetTypes{
//  /** STRING */
//  TYPE_STRING = 0,
//  /** INTEGER */
//  TYPE_INTEGER = 1,
//  /** BINARY */
//  TYPE_BINARY = 2,
//  /** DOUBLE */
//  TYPE_DOUBLE = 3,
//  /** DATE */
//  TYPE_DATE = 4,
//  /** BOOLEAN */
//  TYPE_BOOLEAN = 5,
//  /** VARIANT */
//  TYPE_VARIANT = 6,
//  /** OTHER (CONFIG, 3D, ...)*/
//  TYPE_OTHER = 7
//};
enum FacetModes{
  /** FREE VALUE */
  MODE_FREEVALUE = 0,
  /** OneDimension */
  MODE_ONEDIMENSION = 1,
  /** ONEVALUEINALIST */
  MODE_ONE_VALUE_IN_A_LIST = 2,
  MODE_MULTI_VALUE_IN_A_LIST = 3
};
enum CompassQuadrant{
  Compass_None  = 0,
  Compass_North = 1,
  Compass_South = 2,
  Compass_East  = 3,
  Compass_West  = 4,
  Compass_Play  = 5
};
enum RefinementW{
  Refinement_None  = 0,
  Refinement_Who   = 1,
  Refinement_What  = 2,
  Refinement_How   = 3,
  Refinement_Why   = 4,
  Refinement_Where = 5,
  Refinement_When  = 6
};

enum DashboardingMode{
  No_Dashboarding       = 0,
  BarChart_Dashboarding = 1
};
  /**
   * Style type.
   * <br><b>Role:</b> It's the style of your facet. The style can be a composition 
   * of several style. Example : CATFacetShading|CATFacetBarChart. Each class lists its allowed type.  
   */
typedef CATULONG32 CATFacetStyle;

#define CATFacetShading                      (1 <<  1)
#define CATFacetBarChart                     (1 <<  2)
#define CATFacetCount                        (1 <<  3)
#define CATFacetStarMode                     (1 <<  4) // reserved usage
#define CATFacetNoSort                       (1 <<  5) // properties of this facet must not be sorted
#define CATFacetAlphaSort                    (1 <<  6) // facet supports alphabetic sort
#define CATFacetCountSort                    (1 <<  7) // facet supports count sort
#define CATFacetRankingSort                  (1 <<  8) // facet supports ranking sort
#define CATFacetClassification               (1 <<  9) // facet supports classification
#define CATFacetAllUncheckedSameAsAllChecked (1 << 10) // facet which have the same behavior if all properties are checked or unchecked (FTS for example)

#define CATFacetSupportListOfValues          (1 << 11)
#define CATFacetSupportRanges                (1 << 12)
#define CATFacetSupportEditor                (1 << 13)

#define CATFacetFTS                          (1 << 14)
#define CATFacetExplicit                     (1 << 15) // for the explicit facet containing the explicit tags

/**
 * 
 */
class ExportedByUIModelInterfaces CATIPLMCompassRefinementFacet: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /** 
     * Retrieve the ID of the facet (MUST BE UNIQUE)
     *
     * <br><b>Role</b>: Retrieve the ID of the facet
     * used for label implementation through itf CATIPLMCompassOpennessQuadrantLabels
     *
     * @return
     *   <code>S_OK</code> if the ID of the facet has been set
     *   <code>E_FAIL</code> in other cases
     *
     */
    virtual HRESULT GetFacetUniqueID(CATString &oFacetID)=0;

    /** 
     * Retrieve the NLS view of the facet
     *
     * <br><b>Role</b>: Retrieve the NLS view of the facet
     *
     *
     * @return
     *   <code>S_OK</code> if the NLS view of the facet has been set
     *   <code>E_FAIL</code> in other cases
     *
     */
    virtual HRESULT GetFacetAlias(CATUnicodeString &oFacetAlias)=0;

    /** 
     * Retrieve the NLS tooltip of the facet
     *
     * <br><b>Role</b>: Retrieve the NLS tooltip of the facet
     *
     * Real tooltip will be built from Alias + Tooltip
     *
     * @return
     *   <code>S_OK</code> if the NLS view of the facet has been set
     *   <code>E_FAIL</code> in other cases
     *
     */
    virtual HRESULT GetFacetTooltip (CATUnicodeString &oFacetTooltip)=0;

    /** 
     * Retrieve the facet group ID (used in the hierchical display of facets)
     *
     * <br><b>Role</b>: 
     *
     *
     * @return
     *
     */
    virtual HRESULT GetFacetGroup(CATSetOfCATUnicodeString &oFacetGroup)=0;

    /**
     * Compass quadrant associated to the facet
     */
    virtual HRESULT GetQuadrant(CompassQuadrant &oQuadrant)=0;

    /**
     * Get the W associated to this facet
     */
    virtual HRESULT GetAssociatedW(RefinementW &oRefinementW)=0;

    /**
     * for facets with no count, no persistency, ...
     */
    //virtual HRESULT GetStarMode(CATBoolean &oStarMode)=0;

    /**
     * Mode of the facet
     * Free value
     * one dimension value
     * One value in a list
     */
    virtual HRESULT GetFacetMode(FacetModes &oFacetMode)=0;

    /**
     * Retrieve list of properties for this facet
     * @param oListProperty the list of properties (objects implementing CATIPLMCompassLegend
     */
    virtual HRESULT GetRefinementProperties(CATListPtrCATBaseUnknown &oListProperty)=0;

    /**
     * Retrieve list of properties for this facet
     * @param iFacetStyle the style to use for properties, can be CATFacetSupportListOfValues CATFacetSupportRanges CATFacetSupportEditor depending on the supported mode of the facet
     *        returned by GetFacetMode
     * @param oListProperty the list of properties (objects implementing CATIPLMCompassLegend
     */
    virtual HRESULT GetRefinementProperties(CATFacetStyle iFacetStyle, CATListPtrCATBaseUnknown &oListProperty)=0;

    /**
     *
     */
    virtual HRESULT ShadingModified()=0;
    virtual HRESULT GetShadingActive(CATBoolean &oShadingActive)=0;
    virtual HRESULT SetShadingActive(CATBoolean iShadingActive)=0;

    virtual HRESULT ClassificationModified()=0;
    virtual HRESULT GetClassificationActive(CATBoolean &oClassificationActive)=0;
    virtual HRESULT SetClassificationActive(CATBoolean iClassificationActive)=0;

    /**
     *
     */
    virtual HRESULT PropertyModified()=0;

    virtual HRESULT GetExpandStatus(CATBoolean &oExpandStatus)=0;
    virtual HRESULT SetExpandStatus(CATBoolean iExpandStatus)=0;

    virtual HRESULT GetDashboardingMode(DashboardingMode &oDashboardingMode)=0;
    virtual HRESULT SetDashboardingMode(DashboardingMode iDashboardingMode)=0;

  /**
   *
   * <br><b>Role</b>: Returns the style of the facet to display (Combination of styles)
   * @return
   * Style of the facet
   */
    virtual CATFacetStyle GetFacetStyle()=0;

    /**
     * In case of multiple properties check modification at once (due to select all command for example),
     * a unique call to this method will be made
     */
    virtual HRESULT OnUserCheck(const CATListPtrCATBaseUnknown &iListProperty, const CATListOfCATBoolean &iListCheckStatus)=0;

    /**
     * Determine if Reset cmd should be displayed or not
     */
    virtual HRESULT IsResetCmdAvailable(CATBoolean &obIsAvailable)=0;
    /**
     * When user clicks on Reset cmd, this method will be called
     * A default behavior is delivered in the adapter but can be overloaded to have a different one
     */
    virtual HRESULT OnUserResetRequest()=0;

    /**
     * Determine if Invert cmd should be displayed or not
     */
    virtual HRESULT IsInvertCmdAvailable(CATBoolean &obIsAvailable)=0;

    virtual HRESULT SendRefinementUpdateNotification(int iRefreshType)=0;
};
CATDeclareHandler( CATIPLMCompassRefinementFacet , CATBaseUnknown );
//------------------------------------------------------------------
#endif
