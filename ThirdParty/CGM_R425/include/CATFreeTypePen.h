//===================================================================
// COPYRIGHT DS SolidWorks Corporation 2012/02/07
//===================================================================
// CATFreeTypePen.cpp
// Header definition of class CATFreeTypePen
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/02/07 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATFreeTypePen_H
#define CATFreeTypePen_H

#include "CATBoolean.h"
#include "CATUnicodeString.h"
#include "CATUnicodeChar.h"
#include "CATFreeTypeFace.h"


class CATFreeTypeFace;

class ExportedBySGInfra CATFreeTypePen {
	// Utility class to advance the baseline position after each character
	// All units are freetype's 26.6 fixed point device units (i.e. 1/64th of a pixel or a subpixel)
	// A pen holds a weak reference to the face. The caller is responsible to manage the face lifetime
public:
	CATFreeTypePen(CATFreeTypeFace const* face, CATUnicodeString const& iString);
	~CATFreeTypePen();

	//! Position the pen at the next character
	CATBoolean Next(int iPath=0);

	//! Get the next charcode at the current pen position
	CATFreeTypeFace::CharType Charcode() const;

	//! Get the x coordinate of the current pen position
	int X() const;

	//! Get the y coordinate of the current pen position
	int Y() const;

	//! Get the truncated x pixel coordinate of the current pen position
	int PixelX() const;

	//! Get the truncated y pixel coordinate of the current pen position
	int PixelY() const;

	//! Get the number of characters the pen has advanced by at the current pen position
	size_t Index() const;

	//! Set the coordinated of the initial pen position. (0,0) by default
	void SetPos(int iX, int iY);

	//! Position the pen before iString[index]
	void MoveTo(size_t index);
	int X(size_t index);
	int Y(size_t index);
	int PixelX(size_t index);
	int PixelY(size_t index);

private:
	void CalculateTo(size_t index);

private:
	struct Node {
		CATFreeType::GlyphAdvance _glyphAdvance;
		int _x;
		int _y;
	};
private:
	CATFreeTypeFace const* _face;
	CATUnicodeString _string;
	CATFreeTypeFace::CharType _charcode;
	size_t _index;
	size_t _len;
	int _x;
	int _y;
	int _startx;
	Node* _nodes;
	size_t _calculated;
	CATFreeType::GlobalMetrics _metrics;
  int _maxGlyphAdvance;
};

#endif // CATFreeTypePen_H 
