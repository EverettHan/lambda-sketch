//===================================================================
// COPYRIGHT Dassault Systemes 2018/05/22
//===================================================================
// CATOmxHttpContentType.cpp
// Header definition of class CATOmxHttpContentType
//===================================================================
//
// Usage notes:
//
// Content type information consisting of a MIME type and an optional charset. 
// This class makes no attempts to verify validity of the MIME type.
// The input parameters of the create(String, String) method, however, may not contain characters <">, <;>, <,> reserved by the HTTP specification.
//
// Adapted from apache http: http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/entity/ContentType.html
//
//===================================================================
//  2018/05/22 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATOmxHttpContentType_H
#define CATOmxHttpContentType_H

#include "CATOmxHttp.h"
#include "CATOmxKeyString.h"
#include "CATUnicodeString.h"
#include "CATOmxHttpHeader.h"

class ExportedByCATOmxHttp CATOmxHttpContentType
{
public:
  /*
  * Constants
  */
  static CATOmxHttpContentType CreateNull();

  // application/json; charset=UTF-8
  static CATOmxHttpContentType CreateApplicationJson();

  // application/octet-stream
  static CATOmxHttpContentType CreateApplicationOctetStream();

  // application/xml; charset=ISO-8859-1
  static CATOmxHttpContentType CreateApplicationXml();

  // text/html; charset=ISO-8859-1
  static CATOmxHttpContentType CreateTextHtml();

  // text/plain; charset=UTF-8
  static CATOmxHttpContentType CreateTextPlain();

  // text/xml; charset=ISO-8859-1
  static CATOmxHttpContentType CreateTextXml();

  /*
  * Creates a new ContentType.
  *
  * @param [iMimeType]
  *   MIME type. It may not be empty. It may not contain characters <">, <;>, <,> reserved by the HTTP specification.
  *
  * @param [iCharset]
  *   charset. It may not contain characters <">, <;>, <,> reserved by the HTTP specification. This parameter is optional.
  *
  * @return
  *   S_OK the ContentType has been created, returned, and is valid.
  *   E_INVALIDARG the ContentType cannot be created, one of the input parameter is not valid.
  */
  static HRESULT Create(const CATOmxKeyString& iMimeType, const CATOmxKeyString& iCharset, CATOmxHttpContentType& oContentType);
  static HRESULT Create(const CATOmxKeyString& iMimeType, CATOmxHttpContentType& oContentType);
  static HRESULT Create(const CATOmxHttpHeader& iContentTypeHeader, CATOmxHttpContentType& oContentType);

  /*
  * Returns true if the given string is valid for the content type.
  * It may not contain characters <">, <;>, <,> reserved by the HTTP.
  */
  static bool IsValid(const CATOmxKeyString& iValue);

  /*
  * Returns the mime type of this content type.
  * Examples:
  *   application/json
  *   text/plain
  *   text/html
  */
  CATOmxKeyString GetMimeType() const;

  /*
  * Returns the charset type of this content type.
  * May be empty.
  * Examples:
  *   UTF-8
  *   ISO-8859-1
  *   empty
  */
  CATOmxKeyString GetCharset() const;

  /*
  * Returns the mime type and charset concatenation.
  * Examples:
  *   application/json
  *   application/json; charset=UTF-8
  */
  CATUnicodeString ToString() const;

  /*
  * Returns true if this content type is null (ie mime type is empty).
  * Returns false otherwise.
  */
  bool IsNull() const;

  // Destructor / copy constructor
  virtual ~CATOmxHttpContentType();
  CATOmxHttpContentType(const CATOmxHttpContentType& iContentType);
  CATOmxHttpContentType& operator=(const CATOmxHttpContentType& iContentType);

private:
  CATOmxHttpContentType(const CATOmxKeyString& iMimeType, const CATOmxKeyString& iCharset);

  CATOmxKeyString _MimeType;
  CATOmxKeyString _Charset;
};

#endif
