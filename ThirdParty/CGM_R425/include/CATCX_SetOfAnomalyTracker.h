
//-----------------------------------------------------------------------------
// COPYRIGHT DASSAULT SYSTEMES 2010
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
//
//	Class		  :		CATCX_SetOfAnomalyTracker
//	Creation	:		18/08/2010
//
//
//	Synopsis	:	Header class of CATCX_SetOfAnomalyTracker (Abstract Class)
//					    Interface that allows tracking and filtering Output Anomalies 
//	            generated by a Topological Operator from Anomalies belonging 
//							to the Inputs of the Operator
//
//
//	Authors		:  KY1
//-----------------------------------------------------------------------------
//18/08/2010 Class creation
//-----------------------------------------------------------------------------

#ifndef CATCX_SetOfAnomalyTracker_H
#define CATCX_SetOfAnomalyTracker_H


#include "ExportedByCATCGMFusion.h"
#include "CATCollec.h"
#include "CATBoolean.h"
#include "IUnknown.h"

class CATCX_SetOfAnomalyManager;
class CATCX_Anomaly;
class CATCGMObject;
class CATLISTP(CATCGMObject);
class CATBody;
class CATLISTP(CATBody);
class CATLISTP(CATCX_Anomaly);
class CATCGMOperator;
class CATCGMHashTableOfAnomaly;
class CATCX_SetOfAnomalies_DynamicFiltering;


/**
* @nodoc
*/
/**
*
*/
class ExportedByCATCGMFusion CATCX_SetOfAnomalyTracker 
{
public:

   //CATCGMNewClassArrayDeclare;

   /**
   * @nodoc
   */
   CATCX_SetOfAnomalyTracker();
  

   /**
   * @nodoc
   */
   virtual void															SetInputBodies(CATLISTP(CATBody)& iListOfInputBodies) = 0;


   /**
   * @nodoc
   */
   virtual void															SetResultBody(CATBody * piResultBody) = 0;

   /**
   * @nodoc
   */
   virtual void															SetCGMOperator(CATCGMOperator *piCGMOperator,CATBoolean iRunOpCtxt=TRUE) = 0;

   /**
   * @nodoc
   */
   virtual CATCGMOperator*									         GetCGMOperator() = 0;

   /**
   * @nodoc
   */
   virtual CATCX_SetOfAnomalies_DynamicFiltering *          Get_SetOfAnomalies_DynamicFiltering() = 0;
   
   /**
   * @nodoc
   */
   virtual int														   	Find(CATCX_Anomaly *piAnomaly,CATBoolean &ioIsExistInInputHT) = 0;

	 /**
   * @nodoc
   */
   virtual HRESULT												   	Run() = 0;

   /**
   * @nodoc
   */
   virtual CATBoolean											   	IsInContextOfRunOperator() = 0;

   /**
   * @nodoc
   */
   virtual void															ReInit(CATCGMOperator * pCGMOperatorContexte) = 0;

	 /**
	 * @nodoc
	 */
	 virtual short												   		IsCheckInput() = 0;
   
   /**
   * @nodoc
   */
	 virtual CATBoolean						   						IsCheckResultBody() = 0;

	 /**
	 * @nodoc
	 */
	 virtual HRESULT							   						DisableCompleted(CATBoolean iDesable) = 0;

	 /**
	 * @nodoc
	 */
	 virtual HRESULT											   		CheckInput() = 0;
   
   /**
   * @nodoc
   */
   virtual int															   InsertInputAnomaly(CATCX_Anomaly *piAnomaly) = 0;

   /**
   * @nodoc
   */
   virtual CATCGMHashTableOfAnomaly*				            Get_HT_InputAnomalies_Operator() = 0;

	 /**
	 * @nodoc
	 */
   virtual void															EnableCleanerCheck(CATBoolean iActivate) = 0;

   /**
   * @nodoc
   */
   virtual CATBoolean												   IsCleanerCheckAsked() = 0;

   /**
   * @nodoc
   */
   static void                                              Set_SetOfAnomalyManager(CATCX_SetOfAnomalyManager *piSetOfAnomalyManager);
	 
	 /**
	 * @nodoc
	 */
	 virtual CATBoolean												   IsClosedConfig() = 0;

    /**
    * @nodoc
    */
    static CATBoolean                                       IsCheckInputOperatorsDone();

    /**
    * @nodoc
    */
    static void                                             SetCheckInputOperatorsDone(CATBoolean iIsDone);

    /**
    * Dtor
    */
    virtual ~CATCX_SetOfAnomalyTracker();

protected :
  /**
  * @nodoc
  */
  static CATCX_SetOfAnomalyManager *                        _pSetOfAnomalyManager;
  static CATBoolean                                         _IsCheckInputOperatorsDone;

private:

   //----------------
   //Forbidden Ctors
   //----------------

   /**
   * @nodoc
   */
   CATCX_SetOfAnomalyTracker(const CATCX_SetOfAnomalyTracker& piAnomaly);
   CATCX_SetOfAnomalyTracker& operator=(const CATCX_SetOfAnomalyTracker& piAnomaly);

};


#endif

