// COPYRIGHT Dassault Systemes 2002
//===================================================================
//
// CATIListenedType.h
// Define the CATIListenedType interface
//
//===================================================================
//
// Usage notes:
//   Interface dedicated to add and remove listener on CATIType
//   These listener will react on the creation, the deletion, the modification
//   of an element of this type,
//
//===================================================================
//
//  Oct 2002  Creation: Code generated by the CAA wizard  CHL
//===================================================================
#ifndef CATIListenedType_H
#define CATIListenedType_H

#include "CATLifSpecs.h"
#include "CATBaseUnknown.h"
#include "CATIInstanceListener.h"
#include "CATIInstance.h"
#include "CATIValue.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATLifSpecs IID IID_CATIListenedType;
#else
extern "C" const IID IID_CATIListenedType ;
#endif

//------------------------------------------------------------------

/**
 * Describe the functionality of your interface here
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 */
class ExportedByCATLifSpecs CATIListenedType: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

	/**
    * @nodoc
	* Adds a listener to the instance.
	*
	* The listeners are called back when events are raised by the instance.
	* @param iListener a listener.
	*/
	virtual HRESULT AddTypeListener( const CATIInstanceListener_var &iListener ) = 0;

	/**
    * @nodoc
	* Removes a listener to the instance.
	*
	* The listeners are called back when events are raised by the instance.
	* @param iListener a listener.
	*/
	virtual HRESULT RemoveTypeListener( const CATIInstanceListener_var &iListener ) = 0;
	/**
	* Propagates a specific event that occured on the instance.
	*
	* @param iEvent Event that happened.
	* @param iList  List of values carried by the event.
	*/
	virtual HRESULT AdviseSpecificEvent(const CATIInstance_var& iInstance,
		const CATBaseUnknown_var &iEvent,
		const CATListValCATBaseUnknown_var &iList ) =0;


};

//------------------------------------------------------------------
CATDeclareHandler(CATIListenedType, CATBaseUnknown) ;

#endif
