// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// CATIEvaluate3DInContext.h
// Define the CATIEvaluate3DInContext interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Oct 2009  Creation: Code generated by the CAA wizard  CHK
//===================================================================
#ifndef CATIEvaluate3DInContext_H
#define CATIEvaluate3DInContext_H

/**
  * @CAA2Level L1
  * @CAA2Usage U3
  */

#include "CATPLMModeler3DInterfaces.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMModeler3DInterfaces IID IID_CATIEvaluate3DInContext;
#else
extern "C" const IID IID_CATIEvaluate3DInContext ;
#endif

class CATMathTransformation;

//------------------------------------------------------------------

/**
* Interface managing 3D element within a context.
*/
class ExportedByCATPLMModeler3DInterfaces CATIEvaluate3DInContext: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /**
      * Returns a 3D element within a positionning context.
      *
      * @param iIID
      *     Name of the interface choosen to handle the 3D element.
      * @param ipMatrix
      *     This input parameter has to be valuated if matrix has to be applied to 3D element.
	  * @param op3D
      *     The returned 3D element positionned.
	  *  @return
	  *      <code>S_OK</code> if the method succeeds. <br>
	  *      <code>E_INVALIDARG</code> if input parameters provided are invalid. <br>
	  *      <code>E_FAIL</code> otherwise. <br>
      *
      */
	  virtual HRESULT Evaluate3D(const IID &iIID, CATMathTransformation* ipMatrix, void ** op3D) =0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};
CATDeclareHandler(CATIEvaluate3DInContext,CATBaseUnknown); 

//------------------------------------------------------------------

#endif
