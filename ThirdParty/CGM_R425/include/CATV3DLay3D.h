//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2012/05/15
//===================================================================
//  2012/05/15 Creation: Code generated by jov
//===================================================================

#ifndef CATV3DLay3D_H
#define CATV3DLay3D_H

#include <VisuImmersive3D.h>
#include <CATV3DLayCollection.h>
#include <CATSYPArray.h>
#include <CATBaseUnknown_var.h>
#include <CATLISTV_CATBaseUnknown.h>
#include <CATSYPHashMap.h>
#include <CATV3DLay3DConstraints.h>
class CATV3DLay3DConstraints;

/**
 * This class defines how to layout a collection of V3D widgets in 3D
 * using CATV3DLay3DConstraints.
 *
 * @ingroup V3DLayout
 */
class ExportedByVisuImmersive3D CATV3DLay3D: public CATV3DLayCollection
{
  CATDeclareClass;
public:
  /** Constructor */
  CATV3DLay3D ();
  /** Sets a constraints on a widget that belongs to the collection. */
  void SetConstraints(const CATBaseUnknown_var& i_spWidget, const CATV3DLay3DConstraints& i_pConstraints);
  /** Sets a list of constraints on a widget that belongs to the collection. */
  void SetConstraints(const CATSYPConstArray<CATBaseUnknown_var> &i_listWidget, const CATSYPConstArray<CATV3DLay3DConstraints> &i_listCst);
  /** @return a constraints of a widget that belongs to the collection.*/
  CATV3DLay3DConstraints GetConstraints(const CATBaseUnknown_var& i_spWidget);

protected:
  /** Destructor */
  virtual ~CATV3DLay3D ();
private:
  CATV3DLay3D (CATV3DLay3D &);
  CATV3DLay3D& operator=(CATV3DLay3D&);
};

#endif
