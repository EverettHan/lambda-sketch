//===================================================================
// COPYRIGHT Dassault Systemes 2018/05/16
//===================================================================
// CATOmxHttpHeader.cpp
// Header definition of class CATOmxHttpHeader
//===================================================================
//
// Usage notes:
//
// Represents an HTTP header field.
// The HTTP header fields follow the same generic format as that given in Section 3.1 of RFC 822.
// Each header field consists of a name followed by a colon (":") and the field value. Field names are case-insensitive.
//
// Adapted from apache http: http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/Header.html
//
//===================================================================
//  2018/05/16 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATOmxHttpHeader_H
#define CATOmxHttpHeader_H

#include "CATOmxHttp.h"
#include "CATUnicodeString.h"
#include "CATOmxKeyString.h"
#include "CATOmxCollecManager.h"

class ExportedByCATOmxHttp CATOmxHttpHeader
{
public:
  CATOmxHttpHeader();
  CATOmxHttpHeader(const CATOmxKeyString& iName, const CATUnicodeString& iValue);
  CATOmxHttpHeader(const CATOmxHttpHeader& iHeader);
  CATOmxHttpHeader& operator=(const CATOmxHttpHeader& iHeader);
  virtual ~CATOmxHttpHeader();

  /*
  * Gets the name of this header.
  */
  CATOmxKeyString GetName() const;

  /*
  * Gets the value of this header.
  */
  CATUnicodeString GetValue() const;

  /*
  * Returns true if the header is null (ie. name and value are empty).
  *
  * @return
  *   true if the header is null, false otherwise.
  */
  bool IsNull() const;

  /*
  * Returns a string representation of the object:
  * 'name: value'
  */
  CATUnicodeString ToString() const;

  /**
  * Compares both headers.
  * @return
  *   -1 : The current header is before the compared one.
  *   0  : The current header is equal to the compared one.
  *   +1 : The current header is after the compared one.
  */
  int Compare(const CATOmxHttpHeader& iOther) const;

  /**
  * ComputeHashKey
  */
  unsigned int ComputeHashKey() const;

private:
  CATOmxKeyString _Name;
  CATUnicodeString _Value;
};

template<> CATOmxCollecManager& CATOmxDefaultCollecManager<CATOmxHttpHeader>::manager();

#endif
