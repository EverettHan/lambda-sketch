// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// PLMIAggregatedRepresentations.h
// Define the PLMIAggregatedRepresentations interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Jan 2008  Creation: Code generated by the CAA wizard  LVT
//===================================================================
#ifndef PLMIAggregatedRepresentations_H
#define PLMIAggregatedRepresentations_H

/**
 * @level Protected
 * @usage U3
 */

#include "CATPLMModelerRepInterfaces.h"
#include "PLMIRepReference.h"

// --- System framework
#include "CATBaseUnknown.h"

// --- Forward declaration
class CATIAdpEnvironment;
class CATListValCATICkeParm_var;
class CATUnicodeString;
class CATListValCATBaseUnknown_var;
class PLMIIterator;
class CATIInstance_var;
class CATIType_var;
class CATBRExtraParameters;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMModelerRepInterfaces IID IID_PLMIAggregatedRepresentations;
#else
extern "C" const IID IID_PLMIAggregatedRepresentations ;
#endif

//------------------------------------------------------------------

/**
 * Interface dedicated to aggregated Representation References management.
 *
 * <br><b>Role</b>: This interface provides means to manage the collection of Aggregated Representation References owned by <tt>this</tt> reference.
 *
 * @href CATIPLMNavRepReference
 */
class ExportedByCATPLMModelerRepInterfaces PLMIAggregatedRepresentations: public CATBaseUnknown
{
  CATDeclareInterface;

public:


    /**
     * Retrieves the number of aggregated representation references of <tt>this</tt> reference.
     *
     *  @param  oSize
     *      The size of <tt>this</tt> aggregated representation references collection. <br>
     *      Output parameter. <br>
     *      This parameter is valuated if method succeeds.
     *  @return 
     *      <code>S_OK</code> if the method succeeds and there is aggregated representation references. <br>
     *      <code>S_FALSE</code> if the method succeeds but there is no aggregated representation references. <br>
     *      <code>E_FAIL</code> otherwise. <br>
     */
    virtual HRESULT Count (int &oSize) = 0;

    /**
     * Retrieves the list of aggregated representation references of <tt>this</tt> reference.
     *
     *  @param  oLAggregatedRepReferences
     *      A list of aggregated representation references. <br>
     *      Output parameter. <br>
     *      This parameter MUST be provided by caller as empty. This method returns an error otherwise. <br>
     *      This parameter is valuated if method succeeds.
     *  @return 
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>S_FALSE</code> if the method succeeds but there is no aggregated representation reference. <br>
     *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
     */
    virtual HRESULT List (CATListValCATBaseUnknown_var &oLAggregatedRepReferences) = 0;

		/**
		 *  Creates an iterator to navigate on the aggregated representation references of <tt>this</tt> reference. <br>
		 *  Do not modify the collection (by removing, replacing or adding an aggregated representation reference for example) 
		 *  while the iterator is being in used.
     *
		 *   @param opIterator  [CATBaseUnknown#Release]
     *      An iterator. <br>
     *      Output parameter. <br>
     *      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
     *      This parameter is returned to caller as NULL if method fails. <br>
     *      This parameter is valuated if method succeeds.
		 *   @return 
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>E_INVALIDARG</code> if parameter provided is unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
		 */
    virtual HRESULT Iterator (PLMIIterator *&opIterator) = 0;

    /**
     * Removes an aggregated representation reference from <tt>this</tt> reference.
     *
     *  @param  iAggregatedRepReference
     *      The aggregated representation reference to remove. <br>
     *      Input Parameter. <br>
     *      This parameter MUST NOT be provided by caller as NULL. This method returns an error otherwise.
     *  @return 
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
     */
    virtual HRESULT Remove (PLMIRepReference *ipAggregatedRepReference) = 0;

     /**
     * Creates an new aggregated representation reference with a CATIA authoring stream.
     *
     *  @param  ipEnvironment
     *      The applicative environnement. <br>
     *      Input Parameter. <br>
     * @param ispType
     *      Functional Type of the Representation Reference to create.
     *      If the input is <tt>NULL</tt>, the modeler type is used.
     *  @param  iControlledListValues
     *      A list of values corresponding to attributes that must be checked by the modeler. <br>
     *      Input Parameter.
     *  @param  iAuthoringType
     *      The type of the new authoring stream. <br>
     *      Input Parameter.
     *  @param  opRepReference  [out, CATBaseUnknown#Release]
     *      The created representation reference. <br>
     *      Output parameter. <br>
     *      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
     *      This parameter is returned to caller as NULL if method fails. <br>
     *      This parameter is valuated if method succeeds.
     *  @param ipExtraParameters
     *      Optional. Context parameters required by the PLMIdentificationInitialization.
     *      <br>Default context parameters accessible within the rule:
     *      <ul>
     *        <li>OperationId set to "Implicit"</li>
     *        <li>OperationDetail set to "None"</li>
     *      </ul>
     *  @return 
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
     */
    virtual HRESULT AddRepresentationWithAuthoringFromType (CATIAdpEnvironment *ipEnvironment, const CATIType_var & ispType, CATListValCATICkeParm_var& iControlledListValues, const CATUnicodeString &iAuthoringType, PLMIRepReference *&opRepReference, const CATBRExtraParameters* ipExtraParameters = NULL)=0;

    /**
     * Creates a new aggregated representation reference with a non CATIA stream.
     *
     *  @param  ipEnvironment
     *      The applicative environnement. <br>
     *      Input Parameter. <br>
     * @param ispType
     *      Functional Type of the Representation Reference to create.
     *      If the input is <tt>NULL</tt>, the modeler type is used.
     *  @param  iControlledListValues
     *      A list of values corresponding to attributes that must be checked by the modeler. <br>
     *      Input Parameter.
     *  @param  iDocumentType
     *      The type of the existing non CATIA document. <br>
     *      For instance: txt, xls, xml, etc. <br>
     *      Input Parameter.
     *  @param  iDocumentPath
     *      The file path of the existing non CATIA V5 document. <br>
     *      Input Parameter.
     *  @param  opRepReference  [out, CATBaseUnknown#Release]
     *      The created representation reference. <br>
     *      Output parameter. <br>
     *      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
     *      This parameter is returned to caller as NULL if method fails. <br>
     *      This parameter is valuated if method succeeds.
     *  @param ipExtraParameters
     *      Optional. Context parameters required by the PLMIdentificationInitialization.
     *      <br>Default context parameters accessible within the rule:
     *      <ul>
     *        <li>OperationId set to "Implicit"</li>
     *        <li>OperationDetail set to "None"</li>
     *      </ul>
     *  @return 
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
     */
    virtual HRESULT AddRepresentationReferenceWithNonCATIAContentFromType (CATIAdpEnvironment *ipEnvironment, const CATIType_var & ispType, CATListValCATICkeParm_var& iControlledListValues, const CATUnicodeString &iDocumentType, const CATUnicodeString &iDocumentPath, PLMIRepReference *&opRepReference, const CATBRExtraParameters* ipExtraParameters = NULL) =0;

     /**
     * Creates an new aggregated representation reference with a CATIA authoring stream.
     *
     *  @param  ipEnvironment
     *      The applicative environnement. <br>
     *      Input Parameter. <br>
     *  @param ispProxy
     *      Proxy of the Representation Reference that will be created.
     *      <br>PLM Attributes initialized on the proxy are copied on the created Representation Reference.
     *  @param  iControlledListValues
     *      A list of values corresponding to attributes that must be checked by the modeler. <br>
     *      Input Parameter.
     *  @param  iAuthoringType
     *      The type of the new authoring stream. <br>
     *      Input Parameter.
     *  @param  opRepReference  [out, CATBaseUnknown#Release]
     *      The created representation reference. <br>
     *      Output parameter. <br>
     *      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
     *      This parameter is returned to caller as NULL if method fails. <br>
     *      This parameter is valuated if method succeeds.
     *  @return 
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
     */
    virtual HRESULT AddRepresentationWithAuthoringFromProxy (CATIAdpEnvironment *ipEnvironment, const CATIInstance_var & ispProxy, CATListValCATICkeParm_var& iControlledListValues, const CATUnicodeString &iAuthoringType, PLMIRepReference *&opRepReference)=0;

    /**
     * Creates a new aggregated representation reference with a non CATIA stream.
     *
     *  @param  ipEnvironment
     *      The applicative environnement. <br>
     *      Input Parameter. <br>
     *  @param ispProxy
     *      Proxy of the Representation Reference that will be created.
     *      <br>PLM Attributes initialized on the proxy are copied on the created Representation Reference.
     *  @param  iControlledListValues
     *      A list of values corresponding to attributes that must be checked by the modeler. <br>
     *      Input Parameter.
     *  @param  iDocumentType
     *      The type of the existing non CATIA document. <br>
     *      For instance: txt, xls, xml, etc. <br>
     *      Input Parameter.
     *  @param  iDocumentPath
     *      The file path of the existing non CATIA V5 document. <br>
     *      Input Parameter.
     *  @param  opRepReference  [out, CATBaseUnknown#Release]
     *      The created representation reference. <br>
     *      Output parameter. <br>
     *      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
     *      This parameter is returned to caller as NULL if method fails. <br>
     *      This parameter is valuated if method succeeds.
     *  @return 
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
     */
    virtual HRESULT AddRepresentationReferenceWithNonCATIAContentFromProxy (CATIAdpEnvironment *ipEnvironment, const CATIInstance_var & ispProxy, CATListValCATICkeParm_var& iControlledListValues, const CATUnicodeString &iDocumentType, const CATUnicodeString &iDocumentPath, PLMIRepReference *&opRepReference) =0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(PLMIAggregatedRepresentations, CATBaseUnknown);

//------------------------------------------------------------------

#endif
