// COPYRIGHT Dassault Systemes 2005
//===================================================================
//
// CATICkeExpressionTree.h
// This interface gives access to the expression tree created after parse
//
//===================================================================
//
// Usage notes:
//   DS internal use only
//
//===================================================================
//
//  Dec 2005  Creation: Code generated by the CAA wizard  frh
//===================================================================
#ifndef CATICkeExpressionTree_H
#define CATICkeExpressionTree_H

#include "CATLifSpecs.h"
#include "CATBaseUnknown.h"

class CATICkeTerm_var;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATLifSpecs IID IID_CATICkeExpressionTree;
#else
extern "C" const IID IID_CATICkeExpressionTree ;
#endif

//------------------------------------------------------------------

/**
* Interface representing an expression (volatile or persistent)
*
* <br><b>Role</b>: Components that implement
* CATICkeExpressionTree are expressions (volatile or persistent)
* <p>
* Never use this interface without the agreement of the Knowledge team
*
* @href CATICkeExpression , CATICkeTerm
*/
class ExportedByCATLifSpecs CATICkeExpressionTree: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /**
     * Gives access to the root of the underlying expression tree. 
	 * It is recommended to have verified the syntax of the expression before this call (@href CATICkeExpression#CanBeEvaluated ).
	 * If not done, it will be done inside this call and may raise some syntax errors.
     * @return : root of the expression tree. NULL_var if the expression syntax is invalid.
     */
	  virtual CATICkeTerm_var AccessTreeRoot () = 0;

};

//------------------------------------------------------------------

// declaration of Handler
CATDeclareHandler(CATICkeExpressionTree,CATBaseUnknown);

#endif
