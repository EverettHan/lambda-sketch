// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATIOmbVOLifeCycle.h
// Define the CATIOmbVOLifeCycle interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Nov 2004  Creation: Code generated by the CAA wizard  dem
//===================================================================
#ifndef CATIOmbVOLifeCycle_H
#define CATIOmbVOLifeCycle_H

/**
 * @level Private
 * @usage U3
 */

#include "CATOmbLnkVO.h"
#include "CATBaseUnknown.h"
#include "CATOmxDeprecated.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATOmbLnkVO IID IID_CATIOmbVOLifeCycle;
#else
extern "C" const IID IID_CATIOmbVOLifeCycle;
#endif

//------------------------------------------------------------------

/**
* Interface managing Virtual Objects session life cycle (VO).
*
* This allows OMB to manage the pointed VO life cycle.
* A VO pointed by a non removable document will be unremovable
* and protect its pointed elements from removability.
* Unload on a document pointed by a VO will cause the VO unload
* and destruction by calling its LifeCycle remove methods.
* To do so, each VO objects should call the @href #Init method of CATIOmbVOLifeCycle
* just after creating it. <br>
* OMB gives the implementation of this interface for each VO.
* @see CATIVO, CATIVOFactory , CATIOmbVORemove
*/
class ExportedByCATOmbLnkVO CATIOmbVOLifeCycle : public CATBaseUnknown
{
  CATDeclareInterface;
public:
  /** not impl*/
  OMX_DEPRECATED("not implemented") virtual HRESULT Unload() = 0;
};

CATDeclareHandler(CATIOmbVOLifeCycle, CATBaseUnknown);


#endif

