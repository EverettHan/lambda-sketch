/* -*-c++-*- */
// COPYRIGHT DASSAULT SYSTEMES 2005
/**
* @level Protected
* @usage U1
*/
//  Nov 2005  Creation: Code generated by the CAA wizard  juz
//===================================================================
#ifndef CATPLMIGEngineServices_H
#define CATPLMIGEngineServices_H

#include "CATPLMImpactGraph.h"
#include "CATBaseUnknown.h"
#include "CATPLMTypeH.h"
#include "CATOmxDeprecated.h"
class CATIPLMImpactGraphEngine;
class CATIPLMEngineListener;
class CATString;

/**
* Class to create an impact graph engine.
*<br><b>Role</b>: Thanks to its static method, you can access to an impact graph engine.
*/
class ExportedByCATPLMImpactGraph OMX_DEPRECATED("Do not use, database performances killer") CATPLMIGEngineServices
{
  public:

     /**
     * Create an impact graph engine.
     * @param oEngine [out, CATBaseUnknown#Release]
     *   The created Impact Graph engine. Release is to be called on the provided pointer when useless.
     * @param iListener [in]
     *   The error listener to use during impact graph process
     * @return
     * <tt>HRESULT</tt>
     * <dl>
     * <dt> <tt>The result of the @href CATBaseUnknown#QueryInterface on the open engine to retrieve a pointer on the @href CATIPLMOpenEngine interface.</tt>
     * </dl>
     */

     OMX_DEPRECATED("Do not use, database performances killer") static HRESULT CreateIGEngine(CATIPLMImpactGraphEngine*& oEngine,CATIPLMEngineListener* iListener = NULL);


     /*
     * Service to get the name of the aggregated attribute corresponding
     * to its classification : IRPC or ER.
     * Warning : it does not check the behavior (i.e if it can be aggregated
     * or not. For example, a call to this method on a reference will return 
     * S_OK and a string "V_Owner", even though a reference cannot be
     * aggregated).
     *
     * @param iType
     *   the type 
     *
     * @param oAttribute
     *   The aggregated attribute, can be "V_Owner" or "from"
     *
     * @return
     * <li><tt>S_OK</tt> if succeeded</li> 
     * <li><tt>E_FAIL</tt> if an error occured during the treatment.</li>
     */
     OMX_DEPRECATED("Do not use, database performances killer") static HRESULT GetAggregatedAttribute(const CATPLMTypeH & iType, CATString & oAttribute);

     /*
     * Service to get the name of the instanciating attribute corresponding
     * to its classification : IRPC or ER.
     * Warning : it does not check the behavior (i.e if it can be instanciated
     * or not. For example, a call to this method on an instance will return 
     * S_OK and a string "V_InstanceOf", even though an instance cannot be
     * instanciated). 
     *
     * @param iType
     *   the  type
     *
     * @param oAttribute
     *   The instanciating attribute, can be "V_InstanceOf" or "to"
     *
     * @return
     * <li><tt>S_OK</tt> if succeeded.</li> 
     * <li><tt>E_FAIL</tt> if an error occured during the treatment.</li>
     */
     OMX_DEPRECATED("Do not use, database performances killer") static HRESULT GetInstanciatingAttribute(const CATPLMTypeH & iType, CATString & oAttribute);
};


#endif
