//===================================================================
// COPYRIGHT DS SolidWorks 2010/08/06
//===================================================================
// SWXUtPacketValueUtils.cpp
// Header definition of class SWXUtPacketValueUtils
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/08/06 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXUtPacketValueUtils_H
#define SWXUtPacketValueUtils_H

#include "SWXUtBasePacket.h"

#include "CATListOfDouble.h"
#include "SWXUtMap.h"
#include "SWXUtVector.h"

class CATBaseUnknown;
class CATBaseUnknown_var;
class CATListValCATBaseUnknown_var;
class CATMathAxis;
class CATMathPlane;
class CATMathPoint;
class CATMathPoint2D;
class CATMathTransformation;
class CATMathVector;
class CATUnicodeString;

//-----------------------------------------------------------------------

class ExportedBySWXUtBasePacket SWXUtPacketValueUtils
{
public:

	static CATUnicodeString EncodePoint(const CATMathPoint& iPoint);
	static HRESULT DecodePoint(const CATUnicodeString& iDoubleString, CATMathPoint& oPoint);

	static CATUnicodeString EncodeVector(const CATMathVector& iVector);
	static HRESULT DecodeVector(const CATUnicodeString& iDoubleString, CATMathVector& oVector);

	static CATUnicodeString EncodePoint2D(const CATMathPoint2D& iPoint);
	static HRESULT DecodePoint2D(const CATUnicodeString& iDoubleString, CATMathPoint2D& oPoint);

	static CATUnicodeString EncodePlane(const CATMathPlane& iPlane);
	static HRESULT DecodePlane(const CATUnicodeString& iPlaneString, CATMathPlane& oPoint);

	static CATUnicodeString EncodeAxis(const CATMathAxis &iValue);
	static HRESULT DecodeAxis(const CATUnicodeString& iString, CATMathAxis& oValue);
	static CATUnicodeString EncodeTransformation(const CATMathTransformation &iValue);
	static HRESULT DecodeTransformation(const CATUnicodeString& iString, CATMathTransformation& oValue);

	static CATUnicodeString EncodeXY(double iX, double iY);
	static HRESULT DecodeXY(const CATUnicodeString& iDoubleString, double &oX, double &oY);
	static CATUnicodeString EncodeXYZ(double iX, double iY, double iZ);
	static HRESULT DecodeXYZ(const CATUnicodeString& iDoubleString, double &oX, double &oY, double &oZ);
	static CATUnicodeString EncodeDoubles(const CATListOfDouble &iDoubles);
	static HRESULT DecodeDoubles(const CATUnicodeString &iDoubleString, CATListOfDouble &oDoubles);
	static CATUnicodeString EncodeDoubles(const SWXUtVector<double> &iDoubles);
	static HRESULT DecodeDoubles(const CATUnicodeString &iDoubleString, SWXUtVector<double>  &oDoubles);

private:

	// Standard constructors and destructors
	// -------------------------------------
	SWXUtPacketValueUtils ();
	virtual ~SWXUtPacketValueUtils ();

	// Copy constructor and equal operator
	// -----------------------------------
	SWXUtPacketValueUtils (SWXUtPacketValueUtils &);
	SWXUtPacketValueUtils& operator=(SWXUtPacketValueUtils&);
};

//-----------------------------------------------------------------------

#endif
