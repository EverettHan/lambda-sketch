//===================================================================
// COPYRIGHT DS SolidWorks 2010/04/19
//===================================================================
// SWXUtEllipse.cpp
// Header definition of class SWXUtEllipse
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/04/19 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXUtEllipse_H
#define SWXUtEllipse_H

#include "SWXMathematics.h"
#include "SWXUtCSys.h"
#include "SWXUtEllipse_Ptr.h"

#include "CATMathPoint.h"
#include "CATMathDirection.h"
#include "CATMathPlane.h"


class CATMathTransformation;
//-----------------------------------------------------------------------

class ExportedBySWXMathematics SWXUtEllipse: public SWXUtCSys
{
private:
	double mMajorRadius;
	double mMinorRadius;
public:
	SWXUtEllipse(CATMathPoint const &iCenter, CATMathDirection const &iXdir, 
		CATMathDirection const &iYdir, double iMajorRadius, double iMinorRadius);
	SWXUtEllipse(){};
	~SWXUtEllipse();

	double GetMajorRadius() const;
	double GetMinorRadius() const;

	void SetMajorRadius(double iMajorRadius);
	void SetMinorRadius(double iMinorRadius);

	void SetCenter(CATMathPoint const &iCenter);
	void SetCSys(CATMathPoint const &iCenter, CATMathDirection const &iXdir, CATMathDirection const &iYdir);

	const CATMathPoint& Center() const { return Point();}
	const CATMathDirection& Axis() const {return ZDir();}	

	void AxisCoord(double &oX, double &oY, double &oZ) const;

	void EvalPoint(const double iParamInRadian, CATMathPoint & oPoint) const;	
	bool GetParam(const CATMathPoint &iPt, double* oParam) const;
	bool ProjectPoint( const CATMathPoint& iPoint, CATMathPoint *oPnt, double *oParam = NULL) const;
    virtual bool GetTangentAtPoint(CATMathPoint const &iPnt,CATMathVector &oV) const;
	bool EvalTangentsFromExternalPoint(const CATMathPoint &iPt, CATMathPoint &oTanPt1, CATMathPoint &oTanPt2) const;

	int PointPosWRTEllipse(const CATMathPoint &iPt) const;

	bool GetCurvature(const CATMathPoint &iPoint, double &oCurvature) const;

	virtual void ApplyTransformation(CATMathTransformation const &iTransformation);
	virtual SWXUtGeometry_Ptr Clone() const;

	virtual bool Accept(SWXUtGeomVisitor *iVis); 
	virtual bool Accept(SWXUtGeomVisitor *iVis) const;
};

//-----------------------------------------------------------------------

#endif
