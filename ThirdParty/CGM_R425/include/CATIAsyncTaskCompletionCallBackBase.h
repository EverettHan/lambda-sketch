//===================================================================
// COPYRIGHT Microsoft 2012/02/16
//===================================================================
// CATIAsyncTaskCompletionCallBack.cpp
// Header definition of class CATIAsyncTaskCompletionCallBack
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/02/16 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef CATIAsyncTaskCompletionCallBack
#define CATIAsyncTaskCompletionCallBack CATIAsyncTaskCompletionCallBack_NG
#endif

#ifndef CATIAsyncTaskCompletionCallBackBase_H
#define CATIAsyncTaskCompletionCallBackBase_H

#include "CATAsyncTasksPlatform_NG.h"
#include "CATBaseUnknown.h"
#include "CATAsyncTaskContext_NG.h"

/*
 ____    ____  _________
|_   \  /   _||  _   _  |
  |   \/   |  |_/ | | \_|
  | |\  /| |      | |
 _| |_\/_| |_    _| |_
|_____||_____|  |_____|

*/

extern ExportedByCATAsyncTasksPlatform  IID IID_CATIAsyncTaskCompletionCallBackBase ;


class ExportedByCATAsyncTasksPlatform CATIAsyncTaskCompletionCallBackBase: public CATBaseUnknown
{
  CATDeclareInterface;

public:

  virtual void OnTaskCompleted(CATAsyncTaskContextBase & iAsyncTaskContext) = 0;

  virtual void OnTaskProgressed(CATAsyncTaskContextBase & iAsyncTaskContext) = 0;

};

template < class R >
class CATIAsyncTaskCompletionCallBack: public CATIAsyncTaskCompletionCallBackBase
{
public:

  virtual void OnTaskCompleted(CATAsyncTaskContext<R> & iAsyncTaskContext) = 0;

  virtual void OnTaskProgressed(CATAsyncTaskContext<R> & iAsyncTaskContext) = 0;

private:

  virtual void OnTaskCompleted(CATAsyncTaskContextBase & iAsyncTaskContext)
  {
    CATAssert(iAsyncTaskContext.IsExtended());
    return OnTaskCompleted(static_cast<CATAsyncTaskContext<R>& >(iAsyncTaskContext));
  }

  virtual void OnTaskProgressed(CATAsyncTaskContextBase & iAsyncTaskContext)
  {
    CATAssert(iAsyncTaskContext.IsExtended());
    return OnTaskProgressed(static_cast<CATAsyncTaskContext<R>& >(iAsyncTaskContext));
  }
};

//-----------------------------------------------------------------------

#endif
