// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// CATIOmySessionRecordManager.h
// Define the CATIOmySessionRecordManager interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Jun 2008  Creation: Code generated by the CAA wizard  pjq
//===================================================================
#ifndef CATIOmySessionRecordManager_H
#define CATIOmySessionRecordManager_H

/**
* @level Protected
* @usage U4 CATIOmySessionRecordManager
*/
#include "CATOMYBaseSession.h"
#include "CATBaseUnknown.h"
#include "CATOmySessionRecordServices.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATOMYBaseSession IID IID_CATIOmySessionRecordManager;
#else
extern "C" const IID IID_CATIOmySessionRecordManager ;
#endif

//------------------------------------------------------------------

/**
* Interface representing xxx.
*
* <br><b>Role</b>: Components that implement
* CATIOmySessionRecordManager are ...
* <p>
* Do not use the CATIOmySessionRecordManager interface for such and such

*
* @example
*  // example is optional
*  CATIOmySessionRecordManager* currentDisplay = NULL;
*  rc = window-&gt;QueryInterface(IID_CATIOmySessionRecordManager,
*                                     (void**) &amp;currentDisplay);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class CATOmyStorageHandler;
class CATOmyStreamHandler;
class CATUnicodeString;
class CATHashDico;
class CATIComSidlStreamTube;
class CATOmySessionRecordTrace;
class CATIOmyRecordAuthorizationErrorReporter;
class ExportedByCATOMYBaseSession CATIOmySessionRecordManager: public CATBaseUnknown
{
  CATDeclareInterface;

public:
  virtual RecordMode GetRecordMode()=0;

  virtual HRESULT SetAuthorizationErrorReporter(CATIOmyRecordAuthorizationErrorReporter *)=0;
  virtual HRESULT CheckModeAuthorization()=0;

  virtual HRESULT SetPathToRecordData(const char * iPathToRecordData)=0;
  virtual HRESULT GetPathToCache(CATUnicodeString & oPathToCache)=0;
  virtual CATUnicodeString GetPathToRecordData() = 0;

  virtual CATOmyStorageHandler * OpenLocalSaveStorage(DWORD iOpenMode)=0;
  virtual CATOmyStorageHandler * OpenLocalVaultStorage(DWORD iOpenMode)=0;
  virtual CATOmyStorageHandler * OpenMessageStorage()=0;
};
CATDeclareHandler(CATIOmySessionRecordManager,CATBaseUnknown);

//------------------------------------------------------------------

#endif
