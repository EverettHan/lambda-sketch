//===================================================================
// COPYRIGHT 3DS 2014/11/04
//===================================================================
// PLMIReference.cpp
// Header definition of class PLMIReference
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2014/11/04 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef PLMIReference_H
#define PLMIReference_H

#include "CATPLMModelerBaseInterfaces.h"
#include "CATBaseUnknown.h"

class CATListValCATBaseUnknown_var;
class CATUFOServiceOutput;
class PLMIReference_var;
class CATIPLMNavInstance_var;
class CATBRExtraParameters;


extern ExportedByCATPLMModelerBaseInterfaces  IID IID_PLMIReference;


class ExportedByCATPLMModelerBaseInterfaces PLMIReference: public CATBaseUnknown
{
CATDeclareInterface;

public: 
  /**
		*   Adds a list of products to a Reference.
		*		<br><b>Role</b>: This method instanciates each Reference and aggregates these newly created instances
		*		under <tt>this</tt>. 
		*   PLM Attributes of each created instance are initialized using Business Logic "IdentificationInitialization".    
		*		<br>This method must be called on a Reference.
    *		<br>By default, this method uses UFO reroute services. To not use it, set boolean iDeclareUFO to false.
		*   @param ispReferences
		*      The list of References to be instanciated.
		*   @param iContext
    *      The path of instances that gives the instanciation context used for the creation.
    *   @param oAddedInstancesList
		*      The set of newly created instances.
		*   @param opOutputParameters
    *       Class to manage output from the UFO Reroute service. Basically a list of all the relations that UFO could not reroute. @see CATUFOServiceOutput
		*   @param iDeclareUFO
    *       Indicate if you want to use UFO Reroute service. Default true.
		*   @param ipExtraParameters
    *      Some BL parameters to be used by BL scripts.
		*      
		*   
		*	@return
		*			An HRESULT value. 
		*			<br><b>Legal values</b>:
		*			<dl>
		*     <dt><tt>S_OK</tt></dt>
		*     <dd>The  References were successfully added</dd>
		*     <dt><tt>E_INVALIDARG </tt></dt>
		*     <dd>Either at least one element of <tt>ispReferences</tt> or <tt>this</tt> is not a  Reference</dd>
		*     <dt><tt>E_FAIL</tt></dt>
		*     <dd>All Product References were not successfully added</dd>
		*   </dl>
		*/
    virtual HRESULT CreateInstances(CATListValCATBaseUnknown_var &ispReferences, //references to instantiate
                                    CATListValCATBaseUnknown_var& iContext , //instanciation context 
                                    CATListValCATBaseUnknown_var& oAddedInstanceList, //created instances
                                    CATUFOServiceOutput *& opOutputParameters, //UFO
                                    CATBoolean iDeclareUFO = TRUE,
                                    const CATBRExtraParameters *ipExtraParameters = NULL)=0; //BL parameters

    /**
		*   Adds a Product to a Product Reference.
		*		<br><b>Role</b>: This method instanciates the given Reference and aggregates the newly created instance
		*		under the calling Product (<tt>this</tt>). 
		*		PLM Attributes of created instance are initialized using Business Logic "IdentificationInitialization".    
		*		<br>This method must be only called on a Reference.
    *		<br>By default, this method uses UFO reroute services. To not use it, set boolean iDeclareUFO to false.
    *   Limitation: With UFO, it's not allow to register many insert in the same transaction.
    *   So for many createInstance in the same transaction, deactivate UFO using iDeclareUFO boolean to false
    *   or use createInstances bulk API.
		*   @param ipReference
		*      The  Reference to be instanciated.
    *   @param iContext
    *      The path of instances that gives the instanciation context used for the creation.
	  *   @param oAddedInstance
		*      The set of newly created instances.
		*   @param opOutputParameters
    *       Class to manage output from the UFO Reroute service. Basically a list of all the relations that UFO could not reroute. @see CATUFOServiceOutput
		*   @param iDeclareUFO
    *       Indicate if you want to use UFO Reroute service. Default true.
		*   @param ipExtraParameters
    *      Some BL parameters to be used by BL scripts.
		*
    *
		*   <br><b>Legal values</b>:
		*   <dl>
		*     <dt><tt>S_OK</tt></dt>
		*     <dd>The  Reference was successfully added and the interface pointer is successfully returned</dd>
		*     <dt><tt>E_INVALIDARG </tt></dt>
		*     <dd>Either <tt>ipReference</tt> or <tt>this</tt> is not a Reference</dd>
		*     <dt><tt>E_FAIL</tt></dt>
		*     <dd>The Product Reference was not successfully added</dd>
		*   </dl>
		*/

    virtual HRESULT CreateInstance(PLMIReference_var& ispReference, //reference to instantiate
                                   CATListValCATBaseUnknown_var& iContext , //instanciation context 
                                   CATIPLMNavInstance_var& oAddedInstance, //created instances
                                   CATUFOServiceOutput *& opOutputParameters, //UFO
                                   CATBoolean iDeclareUFO = TRUE,
                                   const CATBRExtraParameters *ipExtraParameters = NULL)=0; //BL parameters
};

//-----------------------------------------------------------------------
CATDeclareHandler(PLMIReference,CATBaseUnknown);

#endif
