// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATVisImageProcessor.h
// Header definition of CATVisImageProcessor
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2006  Creation: Code generated by the CAA wizard  FOR
//===================================================================
#ifndef CATVisImageProcessor_H
#define CATVisImageProcessor_H

#include "CATVisFoundation.h"
#include "CATErrorDef.h"

class CATPixelImage;


/**
* Class allowing transformations to be applied on images
*
* @href CATPixelImage
*/
class ExportedByCATVisFoundation CATVisImageProcessor
{

public:

  CATVisImageProcessor();
  virtual ~CATVisImageProcessor ();

  /**
  * Applies a dilation filter on an image.
  * <br>  
  *<b>Role</b>: This method modifies an image by applying a dilation filter a given number of times.
  *             By default, the dilation filter is only applied to non-transparent pixels and is defined by the kernel:
  *
  *             1 2 1
  *             2 0 2
  *             1 2 1
  *             
  *             It has been specially created in order to extrapolate colors in a lightmap.
  *             For more generic processing see @href CATMMediaImageProcessor
  * 
  * @param ioImage
  *        A reference to the <tt>CATPixelImage</tt> to modify. The format of this image must be <tt>RGBA</tt>.<br>
  * @param iIterations 
  *        The number of iterations.<br>
  * @return 
  *        <ul>
  *          <li>E_INVALIDARG if the <tt>CATPixelFormat</tt> of <tt>ioImage</tt> is not <tt>RGBA</tt>.
  *          <li>E_INVALIDARG if <tt>iIterations</tt> < 1
  *          <li>S_FALSE if the image is entirely black: nothing is done to <tt>ioImage</tt> in this case.
  *          <li>S_OK if the image has been sucessfully processed
  *          <li>E_FAIL otherwise
  *        </ul>
  * <br>  
  */
  static HRESULT Dilate(CATPixelImage& ioImage, int iIterations = 5);

private:

  CATVisImageProcessor (CATVisImageProcessor &);
  CATVisImageProcessor& operator=(CATVisImageProcessor&);

};


#endif
