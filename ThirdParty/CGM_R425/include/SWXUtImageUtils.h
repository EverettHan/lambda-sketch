//===================================================================
// COPYRIGHT DS SolidWorks Corporation 2011/09/06
//===================================================================
// SWXUtImageUtils.cpp
// Header definition of class SWXUtImageUtils
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2011/09/06 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXUtImageUtils_H
#define SWXUtImageUtils_H

#include "SWXUtImageUtilities.h"

#include "CATListOfCATUnicodeString.h"
#include "CATUnicodeString.h"

// forward declarations
class CATPixelImage;
class CATUnicodeString;

//-----------------------------------------------------------------------

class ExportedBySWXUtImageUtilities SWXUtImageUtils
{
public:
	// Standard constructors and destructors
	// -------------------------------------
	SWXUtImageUtils ();
	~SWXUtImageUtils ();

	static const CATUnicodeString mIconsFolder;
	static const CATUnicodeString mLargeIconsFolder;
	static const CATUnicodeString mNormalIconsFolder;
	static const CATUnicodeString mSmallIconsFolder;

	static const CATUnicodeString mPngExt;
	static const CATUnicodeString mBmpExt;

	// get an image from the file and folder name
	static CATPixelImage * GetImage(const CATUnicodeString & iFileName, const CATUnicodeString & iFolder, bool ibAddExtension, bool ibDynamicImage = false);

	// get an image from a previously generated id
	static CATPixelImage * GetImage(const CATUnicodeString & iIdentifier);

	// store an image and retrieve an id for future lookup
	static CATUnicodeString StoreImage(CATPixelImage * iImage);

	// store an image with a given id
	static void StoreImage(CATPixelImage * iImage, const CATUnicodeString & iIdentifier);

	// store store image from file for future lookup
	static void StoreImage(const CATUnicodeString & iFilePath);

	// remove the image associated with iIdentifier and store a new one, returning the id
	static CATUnicodeString ReplaceImage(CATPixelImage * iImage, const CATUnicodeString & iIdentifier);

	// finds the first instance of an image in the graphic path based upon sub folder priorty rules
	static HRESULT FindImage(const CATUnicodeString & iFileName, const CATListOfCATUnicodeString & iSubFolderList, CATUnicodeString & oFilePath);

	// finds the first instance of an image in the graphic path based upon sub folder priority rules and extension priority
	static HRESULT FindImage(const CATUnicodeString & iFileName, const CATListOfCATUnicodeString & iSubFolderList, const CATListOfCATUnicodeString & iExtensionList, CATUnicodeString & oFilePath);

	// Clear the internal cache of images.
	static void ClearImageCache();

	static void GetImageDimensions(CATPixelImage* iImage, int& oXPixel, int& oYPixel, float& oXMMperPixel, float& oYMMperPixel);

private:
	static unsigned int mImageCounter;
};

//-----------------------------------------------------------------------

#endif
