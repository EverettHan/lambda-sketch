// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATOmyCioCallBackAdapter.h
// Provide implementation to interface
//    CATIOmyCioCallBack

//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//IMPLEMENTATION
//    BOA: CATIOmyCioCallBack

//End CAA2 Wizard Generation Report
//
//  Jan 2006  Creation: Code generated by the CAA wizard  FLE
//===================================================================
/**
 * @level Protected
 * @usage U1
 */
#ifndef CATOmyCioCallBackAdapter_H
#define CATOmyCioCallBackAdapter_H

#include "CATOMYCuteIO.h"
#include "CATIOmyCioCallBack.h"

//-----------------------------------------------------------------------

/**
* Class representing xxx.
*
* <br><b>Role</b>: Provide the basic class function...
* <p>
* It implements the interfaces :
*  <ol>
*  <li>@href CATIOmyCioCallBack
*  </ol>
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByCATOMYCuteIO CATOmyCioCallBackAdapter: public CATIOmyCioCallBack

{
  CATDeclareClass;

  public:

  // Standard constructors and destructors for an implementation class
  // -----------------------------------------------------------------
     CATOmyCioCallBackAdapter ();
     virtual ~CATOmyCioCallBackAdapter ();

     /**
     * Implements a function from an interface.
     * @href CATIOmyCioCallBack#OperationSuccessful
     */
     void OperationSuccessful (int  iOperation  , const CATOmyCioUrlIteration*  iUrl ) ;

     /**
     * Implements a function from an interface.
     * @href CATIOmyCioCallBack#OperationError
     */
     void OperationError (int  iOperation  , const CATOmyCioUrlIteration*  iUrl  , int  iErrorCode ) ;


  private:
  // The copy constructor and the equal operator must not be implemented
  // -------------------------------------------------------------------
  CATOmyCioCallBackAdapter (CATOmyCioCallBackAdapter &);
  CATOmyCioCallBackAdapter& operator=(CATOmyCioCallBackAdapter&);

};

//-----------------------------------------------------------------------

#endif
