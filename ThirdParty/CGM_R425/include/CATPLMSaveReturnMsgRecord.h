// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATPLMSaveReturnMsgRecord.h
// Provide implementation to interface
//    CATIPLMAttrRead
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   IMPLEMENTATION
//   TIE: CATIPLMAttrRead
//End CAA2 Wizard Generation Report
//
//  Jun 2004  Creation: Code generated by the CAA wizard  jvm
//===================================================================
#ifndef CATPLMSaveReturnMsgRecord_H
#define CATPLMSaveReturnMsgRecord_H

#include "CATPLMRecordReadAdapter.h"
#include "CATPLMSaveReturnMsg.h"
#include "CATUnicodeString.h"
#include "CATPLMID.h"

class CATVVSUrl;
class CATString;
class CATIPLMAttrRead;

class CATPLMAttribute;
class CATListPtrCATPLMAttribute;
class CATListValCATString;
class CATListValCATUnicodeString;
class CATString;
class CATPLMCEStamp;
class CATPLMTypeId;

class CATIPLMError;

class CATPLMSemanticRelationData;
class CATPLMStreamDescriptor;
class CATListPtrCATPLMStreamDescriptor;

//
#include "CATCollec.h"
class CATPLMSemanticRelation;
class CATListPtrCATPLMSemanticRelation;
//

//-----------------------------------------------------------------------

/**
 * @level Private
 * @usage U3
 */

/**
 * Class Object modeler implementation class.
 * <br>
 * It implements the interfaces :
 *  <ol>
 *  <li>@see CATPLMServices.CATIPLMAttrRead
 *  </ol>
 * Using this prefered syntax will enable mkdoc to document your class.
 */
class ExportedByCATPLMSaveReturnMsg CATPLMSaveReturnMsgRecord: public CATPLMRecordReadAdapter
{
  CATDeclareClass;
  
public:
  
  // Standard constructors and destructors for an implementation class
  // -----------------------------------------------------------------
  CATPLMSaveReturnMsgRecord (CATUnicodeString iSectionName, 
                                  CATUnicodeString iType, 
                                  CATUnicodeString iId);

  CATPLMSaveReturnMsgRecord (CATUnicodeString iSectionName, 
                             const CATPLMID & iPlmId);

  virtual ~CATPLMSaveReturnMsgRecord ();
  
  /**
  * Sets the report description to the record.
  */ 
  virtual HRESULT SetReport(const CATUnicodeString & iStatus, const CATUnicodeString & iSeverity,
                          const CATUnicodeString & iErrorCode, const CATUnicodeString & iCatalog);

  /**
  * Sets the report Request value to the record.
  */
  virtual HRESULT SetErrorRequestValue(const CATUnicodeString & iValue);
  /**
  * Sets the report Diagnostic value to the record.
  */
  virtual HRESULT SetErrorDiagnosticValue(const CATUnicodeString & iValue);
  /**
  * Sets the Error Advice value to the record.
  */
  virtual HRESULT SetErrorAdviceValue(const CATUnicodeString & iValue);
  
	/**
  * Adds the report Request param to the record.
  */
  virtual HRESULT AddErrorRequestParam(const CATUnicodeString & iValue);
  /**
  * Adds the report Diagnostic param to the record.
  */
  virtual HRESULT AddErrorDiagnosticParam(const CATUnicodeString & iValue);
  /**
  * Adds the Error Advice param to the record.
  */
  virtual HRESULT AddErrorAdviceParam(const CATUnicodeString & iValue);
  

 /**
  * Adds an attribute to the record.
  */ 
  virtual HRESULT AddAttributeValue(const CATUnicodeString & Name, const CATUnicodeString & iValue);
  
	/**
  * Set CEStamp on the record.
  */ 
  virtual HRESULT SetCEStamp(const CATPLMCEStamp & iCESTamp);

	/**
  * Set CEStamp as Unicode value as in the message
  */ 
  virtual HRESULT SetCEStamp(const CATUnicodeString & iValue);
  
  /**
  * Adds a stream to the record.
  */
  virtual HRESULT AddStreamValue(const CATUnicodeString & iType,
                              const CATUnicodeString & iLocation,
                              const CATUnicodeString & iCharacters);

  /**
  * Adds a stream to the record for a stream with a format.
  */
  virtual HRESULT AddStreamValue(const CATUnicodeString & iFormat, const CATUnicodeString & iRole,
                                 const CATUnicodeString & iWaterMarkStamp, const CATUnicodeString & iTypeLate,
                                 const CATUnicodeString & iLocation, const CATUnicodeString & iCharacters);

  /**
  * Set The PLMID on the record
  */
  virtual HRESULT SetNewPLMId (const CATUnicodeString & iValue) ;

  /**
  * Implements functions from interface CATPLMServices.CATIPLMRecordRead
  */
  HRESULT _GetSectionName (CATUnicodeString **  oSectionName  ) ;  
  HRESULT _GetPLMID (CATPLMID &  oId  ) ;
  /*
   * @param oAttrAccess [out, IUnknown#Release]
   */
  HRESULT _GetAttributeAccess (const CATString *  iApplication  , CATIPLMAttrRead **  oAttrAccess  ) ;
  /*
   * @param oAttrAccess [out, IUnknown#Release]
  */
  HRESULT _GetAttributeAccess ( CATIPLMAttrRead **  oAttrAccess , const CATPLMTypeId *  iApplication ) ;
  HRESULT _ListStreamDescriptors(CATListPtrCATPLMStreamDescriptor * oStreamDescList);  
  /*
  * @param oError [out, IUnknown#Release]
  */
  HRESULT _GetReport(CATIPLMError ** oError);

  /**
  * Implements a function from an interface.
  * @href CATIPLMReIdentification#GetNewPLMId
  */
  HRESULT GetNewPLMId (CATPLMID &  oId) ;
  
  
protected:
  /** Section(Operation)  Name */
  CATUnicodeString _SectionName;
  /** Satus of the operation. Either STATUS_FAILED or STATUS_SUCCEEDED */
  CATUnicodeString _Status;
  /** Old CATPLMID */
  CATPLMID _pPLMId;
  /** New CATPLMID got from reidentification */
  CATPLMID _pNewPLMId; 

  // returns the list of stream descriptor written or rewritten during the save or propagate operation.
  CATListPtrCATPLMStreamDescriptor * _pStreamDescList;

  /** List of CATUnicodeString associated to this record */
  //The child record could reuse this list to create the CATVVSURL
  CATListValCATUnicodeString * _pStreamValueList;

private:
  // The copy constructor and the equal operator must not be implemented
  // -------------------------------------------------------------------
  CATPLMSaveReturnMsgRecord (CATPLMSaveReturnMsgRecord &);
  CATPLMSaveReturnMsgRecord& operator=(CATPLMSaveReturnMsgRecord&); 
  
};


#endif
