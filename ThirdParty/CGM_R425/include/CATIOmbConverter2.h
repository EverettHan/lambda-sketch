// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATIOmbConverter22.h
// Define the CATIOmbConverter22 interface
//
//===================================================================
//
// Usage notes:
//   
//
//===================================================================
//
//  Nov 2010  Creation: Code generated by the CAA wizard  BES
//===================================================================
#ifndef CATIOmbConverter2_H
#define CATIOmbConverter2_H

/**
 * @level Protected
 * @usage U3
 */


#include "CATOmbConverterForRestrictedClients.h"
#include "CATBaseUnknown.h"


#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATOmbConverter IID IID_CATIOmbConverter2;
#else
extern "C" const IID IID_CATIOmbConverter2 ;
#endif

class CATDocument;
class CATVVSURLConnection;
class CATUnicodeString;
class CATOmxKeyValueBlock;
#include "CATIOmyIncidentCollector.h"


//------------------------------------------------------------------

/**
 * Main Class to implement a component that allows streaming/unstreaming a document to/from a non V5 legacy stream. 
 * In order to fullfill its contract, it has to implement :
 *  - this interface
 *  - the interface called CATICreateInstance 
 *  - be registered by OMB as an authorized converter 
*/
class ExportedByCATOmbConverter CATIOmbConverter2: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /** 
    * This method allows streaming a V5 document to a non V5 legacy stream. 
    *
    * <br><b>Role</b>: 
    * This method allows streaming a V5 document to a non V5 legacy stream. 
    * Document state should not be modified. (It remains dirty)
    * in CATIA3D, on cluster document, URLConnection is on the vault while in 3dlive, URLConnection points to the SelectiveLoading Cache. 
    * 
    * @param iDoc [in]
    *   The document to be streamed. 
    * @param iUrlConnection [in]
    *   The URLConnection that give access to the ILB where the document will be streamed. 
    * @param iStreamFormat [in]
    *   The stream format in which the document will be streamed. 
	* @param iParamList [in]
	*	A list of parameters useful for streams conversion	
    * @param ioIncidentCollector [inout]
    *   Incident monitor logging errors raised during stream conversion 
    *
    * @return
    *   <code>S_OK</code> document has been streamed correctly.
    *   <code>E_FAIL</code> an error occurs. oError contains more information.
    *
    *
    */
    virtual HRESULT StreamDocumentToExternalFormat(CATDocument& iDoc, CATVVSURLConnection& iUrlConnection, const CATUnicodeString& iStreamFormat, CATOmxKeyValueBlock& iParamList, CATIOmyIncidentCollector_var& ioIncidentCollector) =0;
                          
    /** 
    * This method allows unstreaming a non legacy V5 stream as a V5 CATDocument.
    *
    * <br><b>Role</b>: 
    * This method allows unstreaming a non legacy V5 stream as a V5 CATDocument.
    * This method must have the same behavior than CATIPersistent::Load
    * Reading the non V5 legacy stream, this method will instantiate and add to the document, features that has been streamed. 
    * 
    * in CATIA3D, on cluster document, URLConnection is on the vault while in 3dlive, URLConnection points to the SelectiveLoading Cache. 
    *
    * @param iDoc [inout]
    *   The document to be loaded
    * @param iUrlConnection [in]
    *   The URLConnection giving access to the ILB of the document to be loaded. 
    * @param iStreamFormat [in]
    *   Type of the non V5 legacy stream to be used to generate the document
	* @param iParamList [in]
	*	A list of parameters useful for streams conversion	
    * @param ioIncidentCollector [inout]
    *   Incident monitor logging errors raised during stream conversion 
    *
    * @return
    *   <code>S_OK</code> document has been streamed correctly.
    *   <code>E_FAIL</code> an error occurs. oError contains more information.
    *
    */    
    virtual HRESULT UnstreamDocumentFromExternalFormat(CATDocument& ioDoc, CATVVSURLConnection& iUrlConnection, const CATUnicodeString& iStreamFormat,CATOmxKeyValueBlock& iParamList, CATIOmyIncidentCollector_var& ioIncidentCollector) =0;
};
CATDeclareHandler( CATIOmbConverter2, CATBaseUnknown );
//------------------------------------------------------------------

#endif
