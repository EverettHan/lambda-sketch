// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATIPLMFilterConfig.h
// Define the CATIPLMFilterConfig interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Apr 2004  Creation: Code generated by the CAA wizard  jsy
//===================================================================
/**
* @level Protected
* @usage U3
*/
#ifndef CATIPLMFilterConfig_H
#define CATIPLMFilterConfig_H

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMFilterConfig;
#else
extern "C" const IID IID_CATIPLMFilterConfig ;
#endif

#ifndef NEW_CONFIG_FILTERS
#define NEW_CONFIG_FILTERS
#endif
class CATString;
class CATUnicodeString;
class CATPLMID ;
//------------------------------------------------------------------

/**
 * Describe the functionality of your interface here
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 */
class ExportedByCATPLMServicesItf CATIPLMFilterConfig: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /**
    * Filter type
    */
    enum CfgFilterType
    {
        /**
        * Persistent query-based filter
        */
        CFG_FILTER_TYPE_PERSISTENT,

        /**
        * Volatile query-based filter
        */
        CFG_FILTER_TYPE_VOLATILE,

		/**
		* External Domain filter
		*/
		CFG_FILTER_TYPE_EXTERNAL_DOMAIN
    };

    /**
    * Get type of config filter
    * @param oFilterType
    *   Filter type.
    */
    virtual HRESULT GetFilterType ( CfgFilterType & oFilterType ) const = 0;

     /**
      * DEPRECATED.
      *
	    * Set Identifier of the Config Handler
      * @param iCHId
      *    Identifier of the config handler.
  	  */
    virtual HRESULT SetConfigHandlers(CATString * iCHId) = 0;

    /**
      * DEPRECATED.
      *
	  * Get Identifier of the Config Handler
      * @param oCHId
      *    Identifier of the config handler.
  	  */
	virtual HRESULT GetConfigHandlers(CATString ** oCHId) = 0;

};

//------------------------------------------------------------------

#endif
