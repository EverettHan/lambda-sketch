// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATIOmbVORemove.h
// Define the CATIOmbVORemove interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Nov 2004  Creation: Code generated by the CAA wizard  dem
//===================================================================
#ifndef CATIOmbVORemove_H
#define CATIOmbVORemove_H

/**
 * @level Private 
 * @usage U3
 */

#include "CATOmbLnkVO.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATOmbLnkVO IID IID_CATIOmbVORemove;
#else
extern "C" const IID IID_CATIOmbVORemove ;
#endif

//------------------------------------------------------------------

/**
* Interface mamaging  life cycle managent of virtual Objects (VO) in CATIA session.
* <br>
* Calling Remove should result in the logical desctruction of the VO
* Every Vo has to implement this interface which is used only by OMB
* infrastructure.
* @see CATIVO , CATIVOFactory , CATIOmbVOLifeCycle
*/

class ExportedByCATOmbLnkVO CATIOmbVORemove: public CATBaseUnknown
{
  CATDeclareInterface;

  friend class CATOmbVO;
  friend class CATLifeCycleVirtualObject;

  protected:

    /**
     * Remove method is called by OMB infrastructure in order 
	 * to logically remove one VO.
     * <b>Role:</b> This method removesd logically the concerned VO
	 *   @return
     *      S_OK if everything is OK,
     *      and E_FAIL otherwhise.
     */

	  virtual HRESULT Remove() =0;
};

CATDeclareHandler( CATIOmbVORemove, CATBaseUnknown ) ;


//------------------------------------------------------------------

#endif
