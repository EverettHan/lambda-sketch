// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// CATOmySessionDefaultManager.h
// Provide implementation to interface
//    CATIOmySessionRecordManager

//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//IMPLEMENTATION
//    BOA: CATIOmySessionRecordManager

//End CAA2 Wizard Generation Report
//
//  Jul 2008  Creation: Code generated by the CAA wizard  pjq
//===================================================================
#ifndef CATOmySessionDefaultManager_H
#define CATOmySessionDefaultManager_H

#include "CATIOmySessionRecordManager.h"
#include "CATOMYCommunication.h"
#include "CATUnicodeString.h"
class CATOmyLogInfos;

//-----------------------------------------------------------------------

/**
* Class representing xxx.
*
* <br><b>Role</b>: Provide the basic class function...
* <p>
* It implements the interfaces :
*  <ol>
*  <li>@href CATIOmySessionRecordManager
*  </ol>
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByCATOMYCommunication CATOmySessionDefaultManager: public CATIOmySessionRecordManager

{
  CATDeclareClass;

public:

  // Standard constructors and destructors for an implementation class
  // -----------------------------------------------------------------
  CATOmySessionDefaultManager ();
  virtual ~CATOmySessionDefaultManager ();

  // Implements CATIOmySessionRecordManager::GetRecordMode
  RecordMode GetRecordMode();

  // Implements CATIOmySessionRecordManager::SetAuthorizationErrorReporter
  HRESULT SetAuthorizationErrorReporter(CATIOmyRecordAuthorizationErrorReporter *);
  // Implements CATIOmySessionRecordManager::CheckModeAuthorization
  HRESULT CheckModeAuthorization();

  // Implements CATIOmySessionRecordManager::SetPathToRecordData
  HRESULT SetPathToRecordData (const char *  iPathToRecordData ) ;
  // Implements CATIOmySessionRecordManager::SetPathToRecordData
  HRESULT GetPathToCache(CATUnicodeString & oPathToCache){return E_NOTIMPL;};

  CATUnicodeString GetPathToRecordData() { return CATUnicodeString(); };

  // Implements CATIOmySessionRecordManager::OpenLocalSaveStorage
  CATOmyStorageHandler * OpenLocalSaveStorage (DWORD  iOpenMode ) ;
  // Implements CATIOmySessionRecordManager::OpenLocalVaultStorage
  CATOmyStorageHandler * OpenLocalVaultStorage(DWORD iOpenMode);
  // Implements CATIOmySessionRecordManager::OpenMessageStorage
  CATOmyStorageHandler * OpenMessageStorage();

private:
  // The copy constructor and the equal operator must not be implemented
  // -------------------------------------------------------------------
  CATOmySessionDefaultManager (CATOmySessionDefaultManager &);
  CATOmySessionDefaultManager& operator=(CATOmySessionDefaultManager&);

};

//-----------------------------------------------------------------------

#endif
