// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// CATAfrSeparatorView.h
// Header definition of CATAfrSeparatorView
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Jul 2009  Creation: Code generated by the CAA wizard  LD3
//===================================================================
#ifndef CATAfrSeparatorView_H
#define CATAfrSeparatorView_H

#include "CATAfrItf.h"
#include "CATAfrModelView.h"

//-----------------------------------------------------------------------
/**
 * Implement a Separator view Factory.
 * <b>Role</b>: Allow to create a Factory class for your Separator view. To be validated and compiled, you have to include 
 * some files like this:
 * <tt>
 *      #include "CATEAfrSeparatorViewFactory.h"
 *      #include "TIE_CATIAfrSeparatorViewFactory.h"
 *      CATImplementSeparatorViewFactory(CATAfrMySeparatorView,MyRepresentationType);
 * </tt>
 * The first file is the adapter of your factory and
 * the second file is the TIE file allowing to implement CATIAfrSeparatorViewFactory interface.
 *<b>Important:</b> Your Separator view class must have a constructor with a CATBaseUnknown argument.
 * For instance:
 *  <tt>CATAfrMySeparatorView (CATBaseUnknown *ipModel);</tt>
 * @param classname 
 *   The class name of your Separator view. The factory which return an instance of this class. 
 * @param lateType
 *   The representation type of your implementation.
 */
#define CATImplementSeparatorViewFactory( classname, lateType )\
class CAT##lateType##SeparatorFactory: public CATEAfrSeparatorViewFactory\
{\
  CATDeclareClass;\
public :\
 CATAfrSeparatorView * CreateInstanceSeparatorView (CATBaseUnknown *ipModel);\
};\
  CATImplementClass( CAT##lateType##SeparatorFactory,\
                     CodeExtension,\
                     CATEAfrSeparatorViewFactory,\
                     lateType );\
TIEchain_CATIAfrSeparatorViewFactory(CAT##lateType##SeparatorFactory);\
CATAfrSeparatorView * CAT##lateType##SeparatorFactory::CreateInstanceSeparatorView (CATBaseUnknown *ipModel)\
{\
  return new classname(ipModel);\
}


/**
* Adapter class representing the view of a separator. 
* Derive this class and overload the necessary methods to create a separator
* (for example a space, a line are separators)
*
* <br><b>Role</b>: Allow to create a widgets separator
*/
class ExportedByCATAfrItf CATAfrSeparatorView: public CATAfrModelView
{
  CATDeclareClass;

  public:

  // Standard constructors and destructors
  // -------------------------------------
     CATAfrSeparatorView (CATCommand * iParent=NULL,CATString * const iIdentifier=NULL);
     CATAfrSeparatorView (CATBaseUnknown * ipModel);
     virtual ~CATAfrSeparatorView ();

    /**
     *   Initialize the widgets separator
     *   @param ipParent
     *      The parent command. In Dialog, components needs to know their parent.
     *   @return
     *      The created separator command which will added (Ex : @href CATDlgLabel, 
     *      @href CATVidGPSquare or even @hrefCATVidLayGrid)
     * 
     */
     virtual CATCommand * InitSeparatorWidget(CATCommand * ipParent);

    /**
     *   Delete the widgets separator
     * 
     */
     virtual void DeleteSeparatorWidget();

     virtual void SetTitle(const CATUnicodeString & iTitle);
};

//-----------------------------------------------------------------------

#endif
