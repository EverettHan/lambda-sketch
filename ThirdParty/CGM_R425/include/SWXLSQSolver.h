//===================================================================
// COPYRIGHT DS SolidWorks 2010/11/30
//===================================================================
// SWXLSQSolver.cpp
// Header definition of class SWXLSQSolver
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/11/30 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXLSQSolver_H
#define SWXLSQSolver_H

#include "SWXMathematics.h"
#include "SWXUtMap.h"
//-----------------------------------------------------------------------

class SWXLSQSolverState;

/**
* Sparse linear least squares solver -- with support for hard constraints
* Intended usage:
*    SWXLSQSolver s;
*    [
*      s.AddConstraint(...); //boolean flag specifies whether soft or hard
*    ]
*    s.Factor();
*    [
*      [
*        s.SetRhs(...);
*      ]
*      s.Solve();
*      [
*        ... = s.GetResult(...);
*      ]
*    ]
* Where the stuff in brackets [] may be repeated multiple times
*/

class ExportedBySWXMathematics SWXLSQSolver
{
public:
    SWXLSQSolver ();
    virtual ~SWXLSQSolver ();

    typedef SWXUtMap<int, double> tCoefficients;

    void AddConstraint(bool iHard, const tCoefficients &iLhs, int iId);
    void AddConstraint(bool iHard, double iRhs, const tCoefficients &iLhs);
    void SetRhs(int iId, double iRhs);
    bool Factor();
    bool Solve();
    double GetResult(int iVar) const;

private:
    SWXLSQSolver (SWXLSQSolver &);
    SWXLSQSolver& operator=(SWXLSQSolver&);

    SWXLSQSolverState *mState;

};

//-----------------------------------------------------------------------

#endif
