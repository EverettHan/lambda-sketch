//===================================================================
// COPYRIGHT Dassault Systemes 2018/05/03
//===================================================================
// CATPLMMajorVersion.cpp
// Header definition of class CATPLMMajorVersion
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2018/05/03 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATPLMMajorVersion_H
#define CATPLMMajorVersion_H

#include "CATPLMServicesItf.h"
#include "CATOmxSharable.h"
#include "CATOmxSR.h"
#include "CATPLMMajorVersionData.h"
#include "CATPLMMinorVersion.h"
#include "CATOmxArray.h"

class ExportedByCATPLMServicesItf CATPLMMajorVersion : public CATOmxSharable
{
public:
  CATPLMMajorVersion(CATPLMMajorVersionData* ipMajorVersionData, CATOmxArray<CATPLMMinorVersion*>& iMinorVersions);
  virtual ~CATPLMMajorVersion();

  /**
  * Returns the major version informations of the element.
  *
  * @param oMajorInfo [out, CATBaseUnknown#Release]
  *   The major information found on the source.
  *
  * @return
  *   <code>S_OK</code> if there is a major information.
  *   <code>E_FAIL</code> if there is not a major information.
  */
  HRESULT GetMajorVersionData(CATPLMMajorVersionData*& opMajorVersionData);

  /*
  * Returns the major version informations of the element.
  * The returned ptr may be NULL and must not be released.
  * Ptr is handled by this object and thus must not be stored somewhere else without a proper addref/release.
  */
  CATPLMMajorVersionData* GetMajorVersionData() const;

  /*
  * Returns the minor versions of the element.
  *
  * @return
  *   <code>S_OK</code> if there are minor version information.
  *   <code>E_FAIL</code> if there is no minor version information.
  */
  HRESULT GetMinorVersions(CATOmxArray<CATPLMMinorVersion*>& oMinorVersion) const;

  /*
  * Returns the minor versions of the element.
  */
  CATOmxArray<CATPLMMinorVersion*>& GetMinorVersions();

  /**
  * Returns a value based on the order of major information.
  *
  * @return
  *   -1 : The current CATPLMMajorVersion info is before the compared one.
  *   0  : The current CATPLMMajorVersion info is equal to the compared one.
  *   +1 : The current CATPLMMajorVersion info is after the compared one.
  */
  int Compare(const CATPLMMajorVersion& iComparedMajorVersion) const;

  /**
  * ComputeHashKey
  */
  unsigned int ComputeHashKey() const;

private:
  CATPLMMajorVersion (CATPLMMajorVersion &);
  CATPLMMajorVersion& operator=(CATPLMMajorVersion&);

  // Attributes
  CATOmxSR<CATPLMMajorVersionData> _spMajorVersionData;
  CATOmxArray<CATPLMMinorVersion*> _MinorVersions;
};

template<> CATOmxCollecManager& CATOmxDefaultCollecManager<CATPLMMajorVersion*>::manager();

#endif
