/**
* @fullReview AOO4 NSI 22:12:16
*/
//===================================================================
// COPYRIGHT  2022/09/19
//===================================================================
// IVIARTrackerDevice.cpp
// Header definition of class IVIARTrackerDevice
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2022/09/19 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef IVIARTrackerDevice_H
#define IVIARTrackerDevice_H

#include "IVInterfaces.h"
#include "CATBaseUnknown.h"
#include "CATMathTransformation.h"
#include "IVIImageDevice.h"
#include "IVIARCameraDevice.h"


extern ExportedByIVInterfaces  IID IID_IVIARTrackerDevice ;
class ExportedByIVInterfaces IVIARTrackerDevice: public CATBaseUnknown
{
CATDeclareInterface;

public:

  /**
   * @brief Get the Camera Pose
   * 
   * @param oCameraPose 
   * @return HRESULT 
   */
  virtual HRESULT GetCameraPose(CATMathTransformation & oCameraPose) const = 0;

  /**
   * @brief Get the Tracking Status
   * 
   * @return int 
   * 
   * 	TrackingStatus_NOT_READY = -1
	 *  TrackingStatus_NO_IMAGE_YET = 0
	 *  TrackingStatus_TRACKING = 1
	 *  TrackingStatus_TEMP_LOST = 2
	 *  TrackingStatus_LOST = 3
   * 
   */
  virtual int GetTrackingStatus() = 0;

  /**
   * @brief Get the Tracking Score object
   * 
   * @return double between [0.0 ; 1.0]
   */
  virtual double GetTrackingScore() = 0;

  /**
   * @brief Get the Image Device
   * 
   * @return IVIImageDevice_var 
   */
  virtual IVIImageDevice_var GetImageDevice() const = 0;

  /**
   * @brief Get the Camera Device object
   * 
   * @return IVIARCameraDevice_var 
   */
  virtual IVIARCameraDevice_var GetCameraDevice() const = 0;

  /**
   * @brief Start the device
   * 
   * @return HRESULT 
   */
  virtual HRESULT Start() = 0;

  /**
   * @brief Resume the device after a pause state
   * 
   * @return HRESULT 
   */
  virtual HRESULT Resume() = 0;

  /**
   * @brief Pause the device
   * 
   * @return HRESULT 
   */
  virtual HRESULT Pause() = 0;

  /**
   * @brief Stop the device
   * 
   * @return HRESULT 
   */
  virtual HRESULT Stop() = 0;

  /**
   * @brief Get the Device Status
   * 
   * @return int wich represents
   *     NO_STATE = 0,
   *     DEVICE_READY,
   *     DEVICE_RUNNING,
   *     DEVICE_IN_PAUSE,
   *     DEVICE_IN_STOP
   */
  virtual int GetStatus() = 0;

  /**
   * @brief Set the Camera Pose
   * 
   * @param iCameraPose 
   */
  virtual void SetPose(CATMathTransformation& iCameraPose) = 0;

  /**
   * @brief Show/Hide the AABB
   * 
   * @param iOnOff 
   */
  virtual void DisplayAABB(int iOnOff) = 0;

  /**
   * @brief Get the Tracking Statistics on learning mode
   * 
   * @param iStats 
   */
  virtual void GetStatistics(CATUnicodeString& oStats) = 0;

  /**
   * @brief Save the current relocalization learning file
   * 
   * @return HRESULT 
   */
  virtual HRESULT SaveLearningFile(CATUnicodeString& olearningFilePath, CATUnicodeString& iLearningFilename) = 0;

};

//-----------------------------------------------------------------------
CATDeclareHandler( IVIARTrackerDevice, CATBaseUnknown );

#endif
