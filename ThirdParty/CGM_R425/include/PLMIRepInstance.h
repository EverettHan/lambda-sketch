// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// PLMIRepInstance.h
// Define the PLMIRepInstance interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Feb 2008  Creation: Code generated by the CAA wizard  LVT
//===================================================================
#ifndef PLMIRepInstance_H
#define PLMIRepInstance_H

/**
 * @level Protected
 * @usage U3
 */

#include "CATPLMModelerRepInterfaces.h"

// --- System framework
#include "CATBaseUnknown.h"

// --- Forward declaration
class PLMIRepReference;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMModelerRepInterfaces IID IID_PLMIRepInstance;
#else
extern "C" const IID IID_PLMIRepInstance ;
#endif

//------------------------------------------------------------------

/**
 * Interface dedicated to Representation Instance management.
 *
 * <br><b>Role</b>: This interface provides means to manage a Representation Instance aggregated by a reference.
 *
 * @href PLMIRepReference, PLMIRepInstances
 */
class ExportedByCATPLMModelerRepInterfaces PLMIRepInstance: public CATBaseUnknown
{
  CATDeclareInterface;

public:

		/**
		 * Retrieves the Reference which aggregates the Representation Instance.
     *
		 *  @param opReference  [CATBaseUnknown#Release]
		 *      The reference aggregating this representation instance. <br>
     *      Output parameter. <br>
     *      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
     *      This parameter is returned to caller as NULL if method fails. <br>
     *      This parameter is valuated if method succeeds.
     *  @return 
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
		 */
		virtual HRESULT GetFather(CATBaseUnknown *&opReference) = 0;

		/**
		 * Retrieves the instanciated Representation Reference.
     *
		 * @param opRepReference  [CATBaseUnknown#Release]
		 *      The Representation Reference. <br>
     *      Output parameter. <br>
     *      This parameter MUST be provided by caller as NULL. This method returns an error otherwise. <br>
     *      This parameter is returned to caller as NULL if method fails. <br>
     *      This parameter is valuated if method succeeds.
     *  @return 
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
     */
		virtual HRESULT GetRepReferenceInstanceOf(PLMIRepReference *&opRepReference) = 0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(PLMIRepInstance, CATBaseUnknown);

//------------------------------------------------------------------

#endif
