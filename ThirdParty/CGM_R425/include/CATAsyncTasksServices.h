//===================================================================
// COPYRIGHT Microsoft 2012/02/10
//===================================================================
// CATAsyncTasksServices.cpp
// Header definition of class CATAsyncTasksServices
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/02/10 Creation: Code generated by the 3DS wizard
//===================================================================

#ifdef KOALA_MIGRATION
#include "CATAsyncTasksServices_NG.h"
#else

#include "CATAsyncTasksPlatform.h"

#ifdef AsyncCompileError
#error "CATAsyncTasksServices.h should not be included. Migrate on new platform : cf. KOALA_MIGRATION.Contact JBX."
#else
#pragma message ("CATAsyncTasksServices.h should not be included. Migrate on new platform : cf. KOALA_MIGRATION. Contact JBX.")
#endif 

#ifndef CATAsyncTasksServices_H
#define CATAsyncTasksServices_H 

#include "CATAsyncTaskID.h"
#include "CATOmxArray.h"
#include "CATAsyncTasksUtils.h"
#include "CATAsyncTaskContext.h"

//-----------------------------------------------------------------------

class ExportedByCATAsyncTasksPlatform_OLD CATAsyncTasksServices
{
public:
  // Standard constructors and destructors
  // -------------------------------------
  CATAsyncTasksServices ();
  virtual ~CATAsyncTasksServices ();

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT AddPhysicalTask(const CATAsyncTaskID & iLogicalTaskId, const CATAsyncTaskID & iPhysicalTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT AddAsyncTask(const CATAsyncTaskID & iLogicalTaskId, const CATAsyncTaskID & iAsyncTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT StartAsyncTask(const CATAsyncTaskID & iTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT IsAsyncTaskStarted(const CATAsyncTaskID & iTaskId, CATBoolean & obAsyncTaskStarted);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT StartAsyncTaskAndWait(const CATAsyncTaskID & iTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT StartAsyncTaskAndWaitForTasks(const CATAsyncTaskID & iTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT WaitAsyncTask(const CATAsyncTaskID & iTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT WaitAllAsyncTasks();

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT SetNotifyProgression(const CATAsyncTaskID & iTaskId, CATBoolean ibNotifyProgression);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT CancelAsyncTask(const CATAsyncTaskID & iTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT GetAsyncTaskContext(CATAsyncTaskContext & oAsyncTaskContext);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT GetAsyncTaskContext(const CATAsyncTaskID & iTaskID, CATAsyncTaskContext & oAsyncTaskContext);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT GetAsyncTaskInContext(CATAsyncTaskID & oTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT GetParentLogicalTask(const CATAsyncTaskID & iTaskId, CATAsyncTaskID & oLogicalTaskId, CATBoolean ibLastParent = FALSE);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT GetChildrenAsyncTasks(const CATAsyncTaskID &iLogicalTask, CATOmxArray<CATAsyncTaskID> &oChildrenAsyncTasks);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT IsAsyncTaskExisting(const CATAsyncTaskID & iTaskId, CATAsyncTask_Type & oAsyncTaskType);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT IsLogicalTask(const CATAsyncTaskID & iTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT IsPhysicalTask(const CATAsyncTaskID & iTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  CATAsyncTaskStatus GetAsyncTaskStatus(const CATAsyncTaskID & iTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT DeleteAsyncTask(const CATAsyncTaskID & iTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT WaitForTasks(const CATAsyncTaskID & iLogicalTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT KeepAliveUntilExplicitCallToTerminate(const CATAsyncTaskID & iLogicalTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT Terminate(const CATAsyncTaskID & iLogicalTaskId);

  /**
  * @DEPRECATED - Migrate to ObjectModelerSystem/ProtectedInterfaces/CATAsyncTasksServices_NG.h
  */
  HRESULT FlushAllNonRunningTask(const CATAsyncTaskID & iLogicalTaskId);
  

private:
  // Copy constructor and equal operator
  // -----------------------------------
  CATAsyncTasksServices (CATAsyncTasksServices &);
  CATAsyncTasksServices& operator=(CATAsyncTasksServices&);

};
#endif
//-----------------------------------------------------------------------

#endif
