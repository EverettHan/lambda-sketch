// COPYRIGHT Dassault Systemes 2005
//===================================================================
//
// CATPolyMCurveSelfIntersectionOper.h
// Header definition of CATPolyMCurveSelfIntersectionOper
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  March 2005  Creation: Code generated by the CAA wizard  rxu
//===================================================================
#ifndef CATPolyMCurveSelfIntersectionOper_H
#define CATPolyMCurveSelfIntersectionOper_H

#include "CATPolyMCurveAnalyzeOperators.h"
#include "CATPolyMCurveAnalyzeOper.h"
#include "CATBoolean.h"


//-----------------------------------------------------------------------
/**
 * This operator finds all the intersected mesh point on a set of mesh curves.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 */

class CATPolyMPoint;
class CATPolyMCurve;
class CATPolyMCurveSelfIntersectionMap;


class ExportedByCATPolyMCurveAnalyzeOperators CATPolyMCurveSelfIntersectionOper: public CATPolyMCurveAnalyzeOper
{

public:

   // Standard constructors and destructors
   // -------------------------------------
   CATPolyMCurveSelfIntersectionOper ();
   virtual ~CATPolyMCurveSelfIntersectionOper ();

  /**
   * Set mesh curve
   * @param iMCurve
   *   the mesh curve
   */
   HRESULT SetMeshCurve (CATPolyMCurve *iMCurve);

  /**
   * Run the operator
   * @return
   * S_OK: success;  E_FAIL otherwise.
   */
   HRESULT Run ();

  /**
   * Returns the intersection map.  This object will be destructed by the operator.
   */
   const CATPolyMCurveSelfIntersectionMap* GetIntersectionMap () const;

private:

   CATBoolean AreSamePoints(const CATPolyMPoint& iPoint1, const CATPolyMPoint& iPoint2) const;

   //--------- Data:
   CATPolyMCurveSelfIntersectionMap *_IntersectionMap;
   CATPolyMCurve                    *_MCurve;

};

//-----------------------------------------------------------------------


#endif
