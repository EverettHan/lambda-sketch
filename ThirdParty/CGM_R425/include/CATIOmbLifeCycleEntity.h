// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATIOmbLifeCycleEntity.h
// Define the CATIOmbLifeCycleEntity interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Mar 2006  Creation: Code generated by the CAA wizard  fsd
//===================================================================
/**
* @level  Protected
* @usage   U3
*/
#ifndef CATIOmbLifeCycleEntity_H
#define CATIOmbLifeCycleEntity_H

#include "CATOmbLifeCycle.h"
#include "CATBaseUnknown.h"
#include "CATBoolean.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATOmbLifeCycle IID IID_CATIOmbLifeCycleEntity;
#else
extern "C" const IID IID_CATIOmbLifeCycleEntity ;
#endif

//------------------------------------------------------------------
#define AuthorizedModule 999
// List of authorized modules 
#define CATOmbLifeCycle                            AuthorizedModule
#define CATPLMClientCoreModel                      AuthorizedModule
#define CATPLMSpecsGenericBag                      AuthorizedModule
#define CATOsmTSTBAG                               AuthorizedModule
#define CATPLMTosPending                           AuthorizedModule
#define CATOmbDebugLink                            AuthorizedModule

#if _MK_MODNAME_ == AuthorizedModule
#else
#error Forbidden Access To CATIOmbLifeCycleDelegate Services from a non-authorized module
// Fatal error on solaris
@error 
#endif

#undef CATOmbLifeCycle
#undef CATPLMClientCoreModel
#undef CATPLMSpecsGenericBag
#undef CATOsmTSTBAG
#undef CATPLMTosPending
#undef CATOmbDebugLink

class CATListPtrCATBaseUnknown;

/**
 *@level Protected
 *@usage U5
 */

/**
* Interface representing internal removable object.
* <b>Role:</b>This interface can only be implemented within a list of dedicated modules.<br>
* It is used to trigger actions when an object is inserted or removed from a bag.<br>
*/

class ExportedByCATOmbLifeCycle CATIOmbLifeCycleEntity: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /**
	 * Enables life cycle entity to know it has been inserted as root object in a bag.
     */  	
	virtual HRESULT OnBagInsertion() = 0;

	/**
	 * Checks whether a life cycle entity is removable from a bag.
	 * (this method is here for compatibility purpose with older life cycle mechanisms)
	 */
	virtual HRESULT IsRemovable( CATBoolean & oIsLocked ) = 0;

	/**
	 * Removes the life cycle entity from a bag if removable.
	 */
	 virtual HRESULT DoRemove() = 0;

	 /**
	  * Retrieves the Remove prerequisites.
	  */
	 virtual HRESULT ListPrerequisitesForRemove( CATListPtrCATBaseUnknown & oPreqs ) = 0;

	 /**
	  * Retrieves the Remove post-requisites.
	  */
	 virtual HRESULT ListPostrequisitesForRemove( CATListPtrCATBaseUnknown & oPreqs ) = 0;
	 
	 // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------

#endif
