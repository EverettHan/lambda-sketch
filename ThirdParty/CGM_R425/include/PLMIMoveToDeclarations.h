// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// PLMIMoveToDeclarations.h
// Define the PLMIMoveToDeclarations interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Mar 2009  Creation: Code generated by the CAA wizard  WUS
//===================================================================
#ifndef PLMIMoveToDeclarations_H
#define PLMIMoveToDeclarations_H

/**
 * @level Protected
 * @usage U3
 */

#include "CATPLMModelerBaseInterfaces.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMModelerBaseInterfaces IID IID_PLMIMoveToDeclarations;
#else
extern "C" const IID IID_PLMIMoveToDeclarations ;
#endif

// --- Forward declaration
class CATListPtrCATIPLMClientCorePath;
class CATUFOServiceOutput;

//------------------------------------------------------------------

/**
 *
 */
class ExportedByCATPLMModelerBaseInterfaces PLMIMoveToDeclarations : public CATBaseUnknown
{
  CATDeclareInterface;

public:
  /**
  * Declare that the move to command begins on a given path of instances.
  * @param iListMovingPaths 
  *  List of moving paths.
  *  Each path ends with the dragged component.
  * @return
  *  S_OK if declaration was registered <br>
  *  E_FAIL if something went wrong <br>
  */
  virtual HRESULT BeginMoveTo(CATListPtrCATIPLMClientCorePath & iListMovingPaths) = 0;

  /**
  * Declare that the move to command ends with a new given path of instances.
  * @param iMovedPath 
  *  List of moved paths.
  *  Each path ends with the dropped component.
  * @param opOutputParameters [out, IUnknown#Release]
  *  A set of output results - must be released
  * @return
  *  S_OK if declaration was registered <br>
  *  E_INVALIDARG if opOutputParameters is not NULL when the method is called
  *  E_FAIL if something went wrong <br>
  */

  virtual HRESULT EndMoveTo(CATListPtrCATIPLMClientCorePath & iListMovedPaths, CATUFOServiceOutput *& opOutputParameters) = 0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(PLMIMoveToDeclarations, CATBaseUnknown);

//------------------------------------------------------------------

#endif
