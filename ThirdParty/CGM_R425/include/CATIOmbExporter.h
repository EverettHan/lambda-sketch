#ifndef CATIOmbExporter_H
#define CATIOmbExporter_H

/**
 * @level Protected
 * @usage U3
 */

#include "CATOmbImportExport.h"
#include "CATBaseUnknown.h"

#include "CATOmbImportExportParameters.h"
#include "CATUnicodeString.h"
#include "CATILockBytes2.h"

extern ExportedByCATOmbImportExport IID IID_CATIOmbExporter;

/**
* Main Class to implement a component that exports Data.
* In order to fullfill its contract, it has to implement :
*  - this interface
*  - the interface called CATICreateInstance
*
*  - a declarative text file named <late type of the object implementing this interface>.capa, that lists all the capabilities of the exporter. 
*    Each line into this declarative file defines a specific exporter and its I/O and is formatted this way:
*
*    From[Type(,Subtype)] Generates[Extension(,Usage),(Role)] On[File/ILB] WithParameters[Param1,Param2]
*
*    Here are some Examples  :
*    From[RepresentationReference,CATPart] Generates[cgr,AuthoringVisu]  WithParameters[SAG:12,TST:15]
*    From[RepresentationReference,CATPart] Generates[cgr]  WithParameters[TST:15]
*    From[Reference] Generates[cgr,NavRep]  WithParameters[SAG:10,TST:15]
*
*    the set Type,Extension(,Usage),(Role) identify a given exporter implementation, in a unique way.
*    the Usage and Role discriminate, if needed, each exporter implementation relative to a family of StreamDescriptors:
*     For example, in .xdefinition:
*        Exporter[CATOmbTstRepRefExporter]   From[PLMCoreRepReference,CATData_OMBTSTCONT_1] Generates[cgr,AuthoringVisu]             On[File]
*        Exporter[CATOmbTstRepRefExporter2]  From[PLMCoreRepReference,CATData_OMBTSTCONT_1] Generates[cgr,AuthoringVisu,CATIAV5INV6] On[File] WithParameters[TextInput]
*
*    Formally 4 sections are defined :
*     From[..] :      The PLM basetype Type + Optionaly separated by a comma, the specific type for a representation reference (drawing, part, analysis).
*     Generates[..] :  The extension of the stream to be generated
*                     + Optionaly, separated by a comma, the specific Usage, that may match the Format of the StreamDescriptor handling this stream in session 
*                        For example, if different CAD System use the prt extension (.prt), usage field determines the export implementation specific to each CAD System.
*                        This field can also be used to discriminate exporter implementations, based on the Format of the stream descriptor handling the stream.
*                     + Optionaly, separated by a comma, the specific Role, that matches the Role of the StreamDescriptor handling this stream in session.
*                        this field can be used to discriminate exporter implementations, based on the Role of the stream descriptor handling the stream.
*     On[..] :         The envelope capable to handle the stream for a given exporter: it can work with File IO or CATIA IO. 
*                      If the exporter writes to a file path output, specify File. In the other case, specify ILB, as a generic abstraction of the stream location.
*     Parameters[..] : Eventual applicative parameters needed to compute the stream. Parameters are separated by commas.
*                      For each parameter, specify its name and value using CATOmbImportExportParameters API.
*                      System internal parameter names CATOmbRole, EXPORT_STATUS are not allowed.
*                      All Parameters are optional. Each exporter should work with default/no parameter.                     
*/

class ExportedByCATOmbImportExport CATIOmbExporter: public CATBaseUnknown
{
  CATDeclareInterface;

public:

  /** 
  * Export PLM Component Data to an Ilockbytes stream
  * @param iComponent 
  * The PLM Component from which data are to be exported
  * @param iExtension 
  * The extension defining the internal data format of the stream to be generated
  * @param iUsage 
  * The target usage that eventually discriminates among distinct exporters for the same PLM input data and extension
  * @param iLockBytes 
  * The Stream abstraction into which the stream is to be generated
  * @param iParameters 
  * The eventual applicative stream generation parameters
  * Parameter CATOmbRole is always valuated from the StreamDescriptor and added to the eventual list of parameter when this method is invoked, at Save time:
  *   For a given [Type(,Subtype)]  [Extension(,Usage)..] set, and so for a given implementation of this method, this default parameter allows to discriminate, if needed,
  *   separate export processing codes, relative to a StreamDescriptor family: same Usage-Format / different Roles.
  * @return
  *  S_OK: Stream generated by exporter as expected AND ouput stream is not empty
  *  CATOmb_S_KeepPreviousStream : nothing should be done and previous stream should not be updated. This return code cannot be used at stream creation.
  *  E_FAIL: An unexpected error occured during stream (re)generation
  */
  virtual HRESULT ExportFromComptAsExtAndUsageToILB(CATBaseUnknown& iComponent, const CATUnicodeString& iExtension, const CATUnicodeString& Usage, 
                                                    CATILockBytes2* iLockBytes, CATOmbImportExportParameters* iParameters) = 0;

  /** 
  * Export PLM Component Data to a File stream
  * @param iComponent 
  * The PLM Component from which data are to be exported
  * @param iExtension 
  * The extension of the target file, defining the internal data format of the stream to be generated
  * @param iUsage
  * The target usage that eventually discriminates among distinct exporters for the same PLM input data and extension
  * @param iFile 
  * The file path into which the stream is to be generated
  * @param iParameters 
  * The eventual applicative stream generation parameters
  * Parameter CATOmbRole is always valuated from the StreamDescriptor and added to the eventual list of parameter when this method is invoked, at Save time:
  *   For a given [Type(,Subtype)]  [Extension(,Usage)..] set, and so for a given implementation of this method, this default parameter allows to discriminate, if needed,
  *   separate export processing codes, relative to a StreamDescriptor family: same Usage-Format / different Roles.
  * @return
  *  S_OK:   Stream generated by exporter as expected AND ouput stream is not empty
  *  CATOmb_S_KeepPreviousStream : nothing should be done and previous stream should not be updated. This return code cannot be used at stream creation.
  *  E_FAIL: An unexpected error occured during stream (re)generation
  */
  virtual HRESULT ExportFromComptAsExtAndUsageToFile(CATBaseUnknown& iComponent, const CATUnicodeString& iExtension,const CATUnicodeString& Usage, 
                                                     const CATUnicodeString& iFilePath, CATOmbImportExportParameters* iParameters) = 0;

};

CATDeclareHandler( CATIOmbExporter, CATBaseUnknown );

#endif
