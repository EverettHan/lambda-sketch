// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// PLMIIterator.h
// Define the PLMIIterator interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Jan 2008  Creation: Code generated by the CAA wizard  LVT
//===================================================================
#ifndef PLMIIterator_H
#define PLMIIterator_H

/**
 * @level Protected
 * @usage U3
 */

#include "CATPLMModelerBaseInterfaces.h"

// --- System framework
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMModelerBaseInterfaces IID IID_PLMIIterator;
#else
extern "C" const IID IID_PLMIIterator ;
#endif

//------------------------------------------------------------------

/**
 *	Interface dedicated to browse a set of objects.
 */
class ExportedByCATPLMModelerBaseInterfaces PLMIIterator: public CATBaseUnknown
{
  CATDeclareInterface;

public:

   /**
    *   Retrieves an interface pointer on the next element of the set of objects.
    *
    *   <br><b>Role</b>: This method should be used like in the following example:
    *   <pre>PLMIIterator* pIterator = ... ;
    *   if(pIterator)
    *   {
    *     CATBaseUnknown* pElement = NULL;
    *     while(SUCCEEDED(pIterator->Next(pElement)))
    *     {
    *       ...
    *       pElement->Release(); pElement=NULL;
    *     }
    *     pIterator->Release(); pIterator=NULL;
    *   }</pre>
    *
    *   @param opNext [CATBaseUnknown#Release]
    *     The interface pointer on the next element.
    *	  @return
    *     <code>S_OK</code> if the next element was successfully retrieved.<br>
    *     <code>E_FAIL</code> if there is no more element to browse.
    */
	  virtual HRESULT Next(CATBaseUnknown*& opNext) = 0;

   /**
    *   Retrieves an interface smart pointer on the next element of the set of objects.
    *
    *   @param ospNext
    *      The interface smart pointer on the next element.
    *		@return
    *     <code>S_OK</code> if the next element was successfully retrieved.<br>
    *     <code>E_FAIL</code> if there is no more element to browse.
    */
	  virtual HRESULT Next(CATBaseUnknown_var & ospNext) = 0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(PLMIIterator, CATBaseUnknown);

//------------------------------------------------------------------

#endif
