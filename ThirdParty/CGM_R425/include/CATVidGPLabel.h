// COPYRIGHT Dassault Systemes 2005
//===================================================================
//  Oct 2005  Creation: Code generated by the CAA wizard  jov
//===================================================================
#ifndef CATVidGPLabel_H
#define CATVidGPLabel_H

#include <VisuDialog.h>
#include <CATVidGP.h>
#include <CATVidEnum.h>
#include <CATUnicodeString.h>
#include <CATGraphicAttributeSet.h>
#include <CATVidColor.h>
#include <CATGraphicMaterial.h>
#include <CAT3DCustomRep.h>
#include <CATVid.h>
#include <CATVidFontDescription.h>
#include <CATBoolean.h>
#include <CATSYPDeprecated.h>

class CATPickingRender;
#include <CATVidBorder.h>

/**
 * @ingroup VIDGP
 * 
 * The Label is used to display a single line of text.
 * It has very basic font management, if you need more control on the text displayed, you can use #CATVidCtlLineEditor in Read-Only
 */
class ExportedByVisuDialog CATVidGPLabel: public CATVidGP
{
  CATDeclareClass;

public:

  // Standard constructors and destructors
  CATVidGPLabel();
  CATVidGPLabel(CATCommand *i_pParent, const CATString & i_pIdentifier, CATBoolean i_useManipulatorFlag);

  void SetText(const CATUnicodeString& i_text);
  const CATUnicodeString&GetText() const;

  void SetFontName(const CATUnicodeString& i_fontName);
  const CATUnicodeString&GetFontName() const;

  /** Sets the font size in pixels. */
  void SetFontSize(int i_fontSize);
  /** @return the font size in pixel. */
  int GetFontSize() const;

  void SetUnderlineFlag(CATBoolean i_underlineFlag);
  INLINE CATBoolean GetUnderlineFlag() const
  {
    return _underlineFlag;
  }

  void SetBoldFlag(CATBoolean i_boldFlag);
  CATBoolean GetBoldFlag() const;

  void SetItalicFlag(CATBoolean i_italicFlag);
  CATBoolean GetItalicFlag() const;

  SYP_DEPRECATED("Use CATVidGPLabel::SetFontSize instead ()") void SetTextHeight(unsigned int i_textHeight);
  unsigned int GetTextHeight();

  void SetFontDescription(const CATVidFontDescription& i_fontDescription);
  const CATVidFontDescription& GetFontDescription() const;

  // Set/Get text color
  void SetTextColor(const CATVidColor& i_color);
  const CATVidColor& GetTextColor() const;

  // Set/Get crop policy
  void SetCropPolicy(CATVid::CropPolicy i_cropPolicy);
  CATVid::CropPolicy GetCropPolicy() const;

  /**
   * Returns TRUE if the label text is cropped, FALSE otherwise.
   */
  CATBoolean GetCroppedState() const;

  /**@deprecated. Better use BoldFlag property*/
  void SetCaptionFontFlag(const CATBoolean& i_captionFontFlag);
  /**@deprecated*/
  CATBoolean GetCaptionFontFlag() const;
  
  // Set outline flag on text
  void SetOutlineOnFlag(const  CATBoolean i_outlineOnFlag);

  void SetHorizontalAlignment(const CATVidHAlignment& i_hAlign);
  CATVidHAlignment GetHorizontalAlignment() const;
  void SetVerticalAlignment(const CATVidVAlignment& i_vAlign);  
  CATVidVAlignment GetVerticalAlignment() const;

  /** 
   * Sets the margins used around the layout.
   * By default, these margins are null.
   */
  void SetContentsMargins(const CATVidBorder& i_contentsMargins);

  /**
   * @return the margins used around the layout.
   */
  INLINE const CATVidBorder& GetContentsMargins() const 
  {
    return _contentsMargins;
  }

  /**
   * A margin in px that will be applied on left and right, unless specific margins have been set on it (margin != 0).
   * Ex. : if LeftMargin:5, HorizontalMargin:10, margins will be : (Left:5, Right:10).
   * If both right and left margins have been specified, HorizontalMargin won't be used.
   */
  void SetHorizontalMargin(unsigned int i_horizontalMargin);
  /** @see SetHorizontalMargin */
  unsigned int GetHorizontalMargin() const;
  /**
   * A margin in px that will be applied on top and bottom, unless specific margins have been set on it (margin != 0).
   * Ex. : if TopMargin:5, VerticalMargin:10, margins will be : (Top:5, Bottom:10).
   * If both bottom and top margins have been specified, VerticalMargin won't be used.
   */
  void SetVerticalMargin(unsigned int i_verticalMargin);
  /** @see SetVerticalMargin */
  unsigned int GetVerticalMargin() const;
  /** A margin at the left of the text, in pixels. */
  void SetLeftMargin(unsigned int i_LeftMargin);
  /** @see SetLeftMargin */
  unsigned int GetLeftMargin() const;
  /** A margin at the top of the text, in pixels. */
  void SetTopMargin(unsigned int i_topMargin);
  /** @see SetTopMargin */
  unsigned int GetTopMargin() const;
  /** A margin at the rigth of the text, in pixels. */
  void SetRightMargin(unsigned int i_RightMargin);
  /** @see SetRightMargin */
  unsigned int GetRightMargin() const;
  /** A margin at the bottom of the text, in pixels. */
  void SetBottomMargin(unsigned int i_BottomMargin);
  /** @see SetBottomMargin */
  unsigned int GetBottomMargin() const;

  /**@deprecated */
  void SetTesselateFontFlag(const CATBoolean& i_tesselateFontFlag){}
  /**@deprecated */
  CATBoolean GetTesselateFontFlag() const{return 0;}

  /** @see SetLeftMargin, SetTopMargin, SetRightMargin, SetBottomMargin */
  void SetTextMargins ( int i_left, int i_top, int i_right, int i_bottom );
  /* @see SetTextMargins */
  void GetTextMargins ( int * ip_left, int * ip_top, int * ip_right, int * ip_bottom ) const;

  /**
   * Returns the preferred width of the label.
   * The preferred width consists in the computed width needed to display the full text.
   */
  float GetPreferredWidth();

protected:

	virtual ~CATVidGPLabel();
  // Copy constructor and equal operator
  // -----------------------------------
  CATVidGPLabel(CATVidGPLabel &);
  CATVidGPLabel& operator=(CATVidGPLabel&);

  virtual HRESULT BuildRep();

  // protected virtual fron CATVidWidget
  virtual void UpdateComputedMinimumDimension();
private:

  void Empty();
  void Crop(CATVid::CropPolicy i_cropPolicy, CATUnicodeString& io_text, CATVidFontDescription& i_scaledFontDescription, CATMathPoint2Df& o_textSpace, float& i_textWidth, float& i_textHeight, int& fullTextIsDisplayed);
  void SetCroppedState(CATBoolean i_croppedState);

private:

  friend class CATVidVisitor_SKIA;

  CATVidBorder _contentsMargins;
  CATVidColor _color;
  CATUnicodeString _text;

  unsigned int _outlineOnFlag     :1;
  unsigned int _cropPolicy        :3;
  unsigned int _hAlign            :2;
  unsigned int _vAlign            :2;
  unsigned int _underlineFlag     :1;
  unsigned int _computedFullTextWidthDeprecated  :1;
  unsigned int _croppedState      :1;
  unsigned int _wishedTextHeight  :22;

  CATVidFontDescription _fontDescription;

  float _computedFullTextWidth;

#ifndef VID_DEPRECATED
  public:
  // Set/Get crop property
  // ---------------------
  void SetCropProperty(CATVidLabelCropProperty i_crop);
  CATVidLabelCropProperty GetCropProperty() const;
#endif
  friend class l_CATVidGPLabel;
};

#endif
