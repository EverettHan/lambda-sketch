// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// CATIPLMFilterVolumeLine.h
// Define the CATIPLMFilterVolumeLine interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Sep 2008  Creation: Code generated by the CAA wizard  DST
//===================================================================
/**
* @level Protected
* @usage U3
*/
#ifndef CATIPLMFilterVolumeLine_H
#define CATIPLMFilterVolumeLine_H

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMFilterVolumeLine;
#else
extern "C" const IID IID_CATIPLMFilterVolumeLine ;
#endif

//------------------------------------------------------------------

/**
* Interface representing CATIPLMFilterVolumeLine.
*
*/
class ExportedByCATPLMServicesItf CATIPLMFilterVolumeLine: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /**
    * Set the Origin of the Line.
    * @param iX
    *     The X coordinate value
    * @param iY
    *     The Y coordinate value
    * @param iZ
    *     The Z coordinate value
    */
    virtual HRESULT SetOrigin( double iX, double iY, double iZ )=0;

    /**
    * Set the Direction of the Line.
    * @param iX
    *     The X coordinate value
    * @param iY
    *     The Y coordinate value
    * @param iZ
    *     The Z coordinate value
    */
	virtual HRESULT SetDirection( double iX, double iY, double iZ )=0;

    /**
    * Get the Origin of the Line.
    * @param oX
    *     The X coordinate value
    * @param oY
    *     The Y coordinate value
    * @param oZ
    *     The Z coordinate value
    */
	virtual HRESULT GetOrigin( double& oX, double& oY, double& oZ )=0;

    /**
    * Get the Direction of the Line.
    * @param oX
    *     The X coordinate value
    * @param oY
    *     The Y coordinate value
    * @param oZ
    *     The Z coordinate value
    */
	virtual HRESULT GetDirection( double& oX, double& oY, double& oZ )=0;

};

//------------------------------------------------------------------

#endif
