// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATIPLMError.h
// Define the CATIPLMError interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//  Aug 2004  Creation: Code generated by the CAA wizard  jvm
//===================================================================
/**
* @level Protected
* @usage U3
*/
#ifndef CATIPLMError_H
#define CATIPLMError_H

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMError;
#else
extern "C" const IID IID_CATIPLMError;
#endif

class CATUnicodeString;
class CATListValCATUnicodeString;
class CATString;
class CATError;

/**
 * Defines the severity
 */
enum CATPLMSeverity {
  PLMSEVERITYUNDEFINED = 0,
  PLMSEVERITYWARNING = 1,
  PLMSEVERITYLIMITED = 2,
  PLMSEVERITYFATAL = 3
};

/**
* Error definition.
*/
class ExportedByCATPLMServicesItf CATIPLMError : public CATBaseUnknown
{
  CATDeclareInterface;

public:
  /**
  * Get error severity code.
  * @param oSeverity
  *    The severity code.
  */
  virtual HRESULT GetSeverity(CATPLMSeverity * oSeverity) = 0;

  /**
  * Get error severity code.
  */
  virtual CATPLMSeverity GetSeverity() const = 0;

  /**
  * Get error code.
  * @param oErrorCode
  *    The error code.
  * @param oCatalogName
  *    The catalog name where the error code is defined.
  */
  virtual HRESULT GetErrorCode(CATString ** oErrorCode, CATString ** oCatalogName) = 0;

  /**
  * Get error code.
  * @param oErrorCode
  *    The error code.
  * @param oCatalogName
  *    The catalog name where the error code is defined.
  */
  virtual HRESULT GetErrorCode(CATString& oErrorCode, CATString& oCatalogName) const = 0;

  /**
  * Get error key.
  */
  virtual CATString GetErrorKey() const = 0;

  /**
  * Get error catalog.
  */
  virtual CATString GetCatalogName() const = 0;

  /**
  * Returns the request error message (short error message).
  * @param oMsg
  *    The short error message.
  */
  virtual HRESULT GetRequest(CATUnicodeString ** oMsg) = 0;

  /**
  * Returns the diagnostic error message (long error message).
  * @param oMsg
  *    The long error message.
  */
  virtual HRESULT GetDiagnostic(CATUnicodeString ** oMsg) = 0;

  /**
  * Returns the Advice error message.
  * @param oMsg
  *    The advice error message.
  */
  virtual HRESULT GetAdvice(CATUnicodeString ** oMsg) = 0;

  /**
  * Returns the Request NLS Paramters error message.
  * @param oParams
  *    The ordered list of NLS Paramaters.
  */
  virtual HRESULT GetRequestNLSParams(CATListValCATUnicodeString * oParams) = 0;

  /**
  * Returns the diagnostic NLS Paramters  error message.
  * @param oParams
  *    The ordered list of NLS Paramaters.
  */
  virtual HRESULT GetDiagnosticNLSParams(CATListValCATUnicodeString * oParams) = 0;

  /**
  * Returns the Advice NLS Paramters error message.
  * @param oParams
  *    The ordered list of NLS Paramaters.
  */
  virtual HRESULT GetAdviceNLSParams(CATListValCATUnicodeString * oParams) = 0;

  /**
  * Returns the CATIA error.
  * @param oError
  *    The error.
  */
  virtual HRESULT GetError(CATError ** oError) = 0;

  /**
  * Returns the request error message (short error message).
  * @return
  *    The short error message.
  */
  virtual CATUnicodeString GetRequest() const = 0;

  /**
  * Returns the diagnostic error message (long error message).
  * @return
  *    The long error message.
  */
  virtual CATUnicodeString GetDiagnostic() const = 0;

  /**
  * Returns the Advice error message.
  * @return
  *    The advice error message.
  */
  virtual CATUnicodeString GetAdvice() const = 0;

  /**
  * Returns the Request NLS Paramters error message.
  * @param oParams
  *    The ordered list of NLS Paramaters.
  */
  virtual CATListValCATUnicodeString GetRequestNLSParams() const = 0;

  /**
  * Returns the diagnostic NLS Paramters  error message.
  * @return
  *    The ordered list of NLS Paramaters.
  */
  virtual CATListValCATUnicodeString GetDiagnosticNLSParams() const = 0;

  /**
  * Returns the Advice NLS Paramters error message.
  * @return
  *    The ordered list of NLS Paramaters.
  */
  virtual CATListValCATUnicodeString GetAdviceNLSParams() const = 0;

  /**
  * Returns the CATIA error.
  * @return
  *    The error. Release must be made.
  */
  virtual CATError* GetError() = 0;

private:
  /**
  * Set error severity code.
  * @param iSeverity
  *    The severity code.
  */
  virtual void SetSeverity(CATPLMSeverity iSeverity) = 0;

  /**
  * Set error code.
  * @param iErrorCode
  *    The error code.
  * @param iCatalogName
  *    The catalog name where the error code is defined.
  */
  virtual void SetErrorCode(const CATString& iErrorCode, const CATString& iCatalogName) = 0;

  virtual HRESULT SetDiagnosticNLSParams(const CATListValCATUnicodeString& iParams) = 0;

  virtual HRESULT SetAdviceNLSParams(const CATListValCATUnicodeString& iParams) = 0;

  virtual HRESULT SetRequestNLSParams(const CATListValCATUnicodeString& iParams) = 0;

  /**
  * Set the CATIA error.
  * @param ipError
  *    The error.
  */
  virtual void SetError(CATError* ipError) = 0;
};

class ExportedByCATPLMServicesItf CATIPLMErrorBuilder
{
public:
  static HRESULT Build(CATError* ipError, CATIPLMError* iopPLMError);
};

#endif
