//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2012/04/03
//===================================================================
// CATIInstanceDelegation.cpp
// Header definition of class CATIInstanceDelegation
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/04/03 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef CATIInstanceDelegation_H
#define CATIInstanceDelegation_H

#include "CATLifSpecs.h"
#include "CATUnicodeString.h"
#include "CATListValCATIType.h"
#include "CATBaseUnknown.h"
#include "CATIValue.h"


/** 
* Usage U4 CATKweInstanceDelegationAdapter
*/
extern ExportedByCATLifSpecs  IID IID_CATIInstanceDelegation ;


class ExportedByCATLifSpecs CATIInstanceDelegation: public CATBaseUnknown
{
CATDeclareInterface;

public:
 /**
	* Fills the given list with types supported by this feature extension.
	* <br>
	* The list is input may not be empty. This method is supposed to add some types to the list.
	*
	* @param iolListOfCATIType the filled list.
	*/
	virtual HRESULT ListSupportedTypes( CATListValCATIType_var& iolListOfCATIType ) const = 0;

	/**
	* Sets an attribute value.<br>
	* The contract of this method is to copy the value in input in its internal attribute value.<br>
	* If the value passed as argument is Unset, the contract of this method is to Unset the attribute value (if it makes sense).<br>
	*
	* @param iKey Name of the attribute.
	* @param iValue Value of the attribute.
	*/
	virtual HRESULT SetValue( const CATUnicodeString& iKey,
							  const CATIValue_var& iValue ) = 0;

	/**
	* Gets an attribute value.<br>
	* The contract of this method is to retrieve the value from its internal attribute value and return it.<br>
	* In some contexts a copy may be created. But if the attribute is a parameter, the method is supposed to return the parameter itself.<br>
	* If the internal attribute value is Unset, the contract of this method is to Unset the attribute value that is returned.<br>
	*
	* @param iKey Name of the attribute.
	* @return [CATBaseUnknown#Release]iValue Value of the attribute (an AddRef is done, if not NULL).
	*/
	virtual CATIValue* GetValue( const CATUnicodeString& iKey ) = 0;
};

//-----------------------------------------------------------------------

#endif
