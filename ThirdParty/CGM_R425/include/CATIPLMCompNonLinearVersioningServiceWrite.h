//===================================================================
// COPYRIGHT Dassault Systemes 2018/05/30
//===================================================================
// CATIPLMCompNonLinearVersioningService.cpp
// Header definition of class CATIPLMCompNonLinearVersioningService
//===================================================================
//
// Usage notes:
//
// Interface for Non Linear Versioning functions (a.k.a NLV).
// These interfaces mostly takes JSON format in input and output.
// JSON schemas are described in comments.
//
// See: CATOmxJsonObject, CATOmxJsonArray, CATOmxJsonSchema
//
// Summary:
//    AddVersions               -> creates new NLV versions from an object's physical id
//    AddVersionEdges           -> creates new semantic edges from a version (based on one or multiple object's physicalid)
//    DeleteVersion             -> deletes the given version (based on an object's physical id)
//    DeleteVersions            -> deletes the given versions (based on multiple object's physical id)
//    DeleteVersionEdges        -> deletes the given semantic edges (based on one or multiple object's physical id)
//    GetSemanticVersionGraph   -> returns semantic version graph from an object's physical id
//    GetSemanticVersionGraphs  -> returns semantic version graphs from multiple object's physical id
//    GetVersionNumberProposal  -> returns version number proposals according policy and creation request
//    GetAllowedSemantics       -> returns the list of authorized Semantic Version relation types
//    GetLastVersions           -> returns the last versions information
//    GetSemanticVersionPath    -> Compute Semantic Version Path for a set of versions based on Semantic version graph
//
//===================================================================
//  2018/05/30 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATIPLMCompNonLinearVersioningService_H
#define CATIPLMCompNonLinearVersioningService_H

#include "CATPLMServicesNLV.h"
#include "CATBaseUnknown.h"
#include "CATUuid.h"
#include "CATOmxOSet.h"
#include "CATOmxOMap.h"
#include "CATOmxList.h"
#include "CATOmxJsonObject.h"
#include "CATIPLMError.h"
#include "CATPLMRepositoryName.h"
#include "CATPLMxNLVWebServiceWrite.h"
#include "CATIPLMCompCopyRecordWrite.h"
#include "CATPLMOmxCollections.h"
#include "CATIPLMCompCloneRecordWrite.h"

class CATIPLMCompNewVersionRecordWrite;
class CATIPLMCompRecordReadSet;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesNLV IID IID_CATIPLMCompNonLinearVersioningServiceWrite;
#else
extern "C" const IID IID_CATIPLMCompNonLinearVersioningServiceWrite;
#endif

class ExportedByCATPLMServicesNLV CATIPLMCompNonLinearVersioningServiceWrite : public CATBaseUnknown
{
  CATDeclareInterface;
public:

  virtual HRESULT CreateCopy(const CATPLMRepositoryName& iRepository,
    const CATOmxList<CATIPLMCompCopyRecordWrite>& ilistCompRecordWrite,
    const CATPLMID& iChangePLMID,
    CATIPLMCompRecordReadSet*& oRecordReportSet) = 0;

  virtual HRESULT CreateCopyWithSelectAttr(const CATPLMRepositoryName& iRepository,
    const CATOmxList<CATIPLMCompCopyRecordWrite>& ilistCompRecordWrite,
    const CATPLMTypeHToOrderedOSetOfKS& iMapBaseTypeHToSetOfAttr,
    const CATPLMTypeHToTypeHToOrderedOSetOfKS& iMapBaseTypeHToExtTypeHToSetOfAttr,
    const CATPLMID& iChangePLMID,
    CATIPLMCompRecordReadSet*& oRecordReportSet) = 0;

  virtual HRESULT CreateVersion(const CATPLMRepositoryName& iRepository,
    const CATOmxList<CATIPLMCompNewVersionRecordWrite>& ilistCompRecordWrite,
    const CATPLMID& iChangePLMID,
    CATIPLMCompRecordReadSet*& oRecordReportSet) = 0;

  virtual HRESULT CreateVersionWithSelectAttr(const CATPLMRepositoryName& iRepository,
    const CATOmxList<CATIPLMCompNewVersionRecordWrite>& ilistCompRecordWrite,
    const CATPLMTypeHToOrderedOSetOfKS& iMapBaseTypeHToSetOfAttr,
    const CATPLMTypeHToTypeHToOrderedOSetOfKS& iMapBaseTypeHToExtTypeHToSetOfAttr,
    const CATPLMID& iChangePLMID,
    CATIPLMCompRecordReadSet*& oRecordReportSet) = 0;

  virtual HRESULT CreateClone(const CATPLMRepositoryName& iRepository,
    const CATOmxList<CATIPLMCompCloneRecordWrite>& ilistCompRecordWrite,
    const CATPLMID& iChangePLMID,
    CATIPLMCompRecordReadSet*& oRecordReportSet) = 0;

  virtual HRESULT CreateCloneWithSelectAttr(const CATPLMRepositoryName& iRepository,
    const CATOmxList<CATIPLMCompCloneRecordWrite>& ilistCompRecordWrite,
    const CATPLMTypeHToOrderedOSetOfKS& iMapBaseTypeHToSetOfAttr,
    const CATPLMTypeHToTypeHToOrderedOSetOfKS& iMapBaseTypeHToExtTypeHToSetOfAttr,
    const CATPLMID& iChangePLMID,
    CATIPLMCompRecordReadSet*& oRecordReportSet) = 0;

};

#endif
