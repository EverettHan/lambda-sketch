// COPYRIGHT Dassault Systemes 2003
//===================================================================
//
// CATIPLMCompRecordReadSet.h
// Define the CATIPLMCompRecordReadSet interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Nov 2003  Creation: Code generated by the CAA wizard  jvm
//===================================================================
/**
* @level Protected
* @usage U3
*/
#ifndef CATIPLMCompRecordReadSet_H
#define CATIPLMCompRecordReadSet_H
#include "CATPLMFTSAvailable.h"
#include "CATIAV5Level.h"
#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"
#include "CATListOfCATUnicodeString.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMCompRecordReadSet;
#else
extern "C" const IID IID_CATIPLMCompRecordReadSet ;
#endif

#include "CATOmxIter.h"

class CATIPLMRecordRead;
class CATIPLMError;
class CATPLMTaxonCategory;
class CATPLMFacet;
class CATPLMAdapterTag;
class CATPLMClientTasks;

/**
* Interface belonging to the <b>Component services</b>.
* Using this level of abstraction you manipulate only Componet Id without knowing the PDM it belongs to.<br>
*
* A CATIPLMCompRecordSet provides access to the list of record (the table of data)..
* The message can be seen as a set of Record. The CATIPLMCompRecordSet.Next method is used to move to the next record of the RecrodSet, making the next record become the current record.
*/
class ExportedByCATPLMServicesItf CATIPLMCompRecordReadSet: public CATBaseUnknown
{
  CATDeclareInterface;
  
public:
  
  /**
  * Moves the cursor down one record from its current position.
  *
  * @param oRecord [out, CATBaseUnknown#Release]
  *         next record
  * @return
  *   Error code of function :
  *   <dl>
  *     <dt>S_OK</dt>
  *     <dd>the new current record is valid.</dd>
  *     <dt>S_FALSE </dt>
  *     <dd>there are no more records</dd>
  *     <dt>E_FAIL </dt>
  *     <dd>A problem occurs during the operation. get further information by using CATIPLMErrorStack</dd>
  *   </dl>
  */
  virtual HRESULT Next (CATIPLMRecordRead ** oRecord) = 0;

	/**
  *	Returns the report of the incident that occurs on the recordSet. NULL if the recordSet is successfully which means No record inside are Failed
  *	@param  oError [out, CATBaseUnknown#Release]
  *     The error description.
  * @return
  *     Error code of function :
  *   <dl>
  *     <dt>S_OK</dt>
  *     <dd>recordset is successfully. All records are ok </dd>
  *     <dt>S_FALSE</dt>
  *     <dd>recordset contains at least one error. Get further information by using CATIPLMError</dd>
  *     <dt>E_FAIL </dt>
  *     <dd>A problem occurs during the operation.</dd>
  *   </dl>
  */
  virtual HRESULT GetReport(CATIPLMError ** oError) = 0;

  /**
  * Returns the report of the incident that occurs on the record read set. NULL if no error found on record read set
  *
  * @return IUnknown#Release
  */
  virtual CATIPLMError* GetReport() = 0;

  /**
  * Return info/notice made by application code executed server side
  * 2 kinds of client tasks can be found:
  * a- simple messages.
  * b- list of modified objects.
  * Only transaction that create/update/delete/modify data are concerned.
  */
  virtual CATPLMClientTasks GetClientTasks() = 0;

  /**
  * Total number of objects returned by a query.
  * Kept in 420 because called but return 0
  *
  * <br><b>Role</b>:
  * Total number of objects returned by a query.
  * eg:
  * 1- Suppose the query returns 10 000 objects.
  * 2- Suppose you have chosen to display results of this query using pages containing 50 objects.
  * oNumberOfObjectsFound returns 10 000.
  *
  * @param oNumberOfObjectsFound
  *
  * @return
  * <dl>
  * <dt><code>S_OK</code> <dd>
  * <dt><code>E_FAIL</code> <dd>
  * </dl>
  */
  virtual HRESULT GetFetchGlobalCount(int& oNumberOfObjectsFound) = 0;

#ifdef FTSAvailable
  /**
  * Returns the next Taxon Category.
  *
  * @param oTaxonCategory [out, CATBaseUnknown#Release]
  *         next Taxon Category
  * @return
  *   Error code of function :
  *   <dl>
  *     <dt>S_OK</dt>
  *     <dd>the new current Taxon Category is valid.</dd>
  *     <dt>S_FALSE </dt>
  *     <dd>there are no more Taxon Category</dd>
  *     <dt>E_FAIL </dt>
  *     <dd>A problem occurs during the operation.</dd>
  *   </dl>
  */
  virtual HRESULT NextTaxonCategory (CATPLMTaxonCategory ** oTaxonCategory) = 0;

	/**
	 * Returns the next Facet.
   * removed in 420
	 *
	 * @param oFacet [out, CATBaseUnknown#Release]
	 *         next Facet
	 * @return
	 *   Error code of function :
	 *   <dl>
	 *     <dt>S_OK</dt>
	 *     <dd>the new current Facet is valid.</dd>
	 *     <dt>S_FALSE </dt>
	 *     <dd>there are no more Facet</dd>
	 *     <dt>E_FAIL </dt>
	 *     <dd>A problem occurs during the operation.</dd>
	 *   </dl>
	 */	
	virtual HRESULT NextFacet(CATPLMFacet **oFacet) = 0;

	/**
	 * Returns the list of suggestions.
   * removed in 420
   *
	 * @param oSuggestions
	 *         list of suggestions
	 * @return
	 *   Error code of function :
	 *   <dl>
	 *     <dt>S_OK</dt>
	 *     <dd>Evrything is ok.</dd>
	 *     <dt>E_FAIL </dt>
	 *     <dd>No suggestions.</dd>
	 *   </dl>
	 */	
	virtual HRESULT GetSuggestions(CATListOfCATUnicodeString &oSuggestions) = 0;
#endif

	/**
	 * Returns an iterator on all tags returned by server.
   * Kept in 420 because called but return E_NOTIMPL
	 */	
  virtual HRESULT GetTagIterator ( CATOmxIter <CATPLMAdapterTag> &oTagIterator) = 0;
};

//------------------------------------------------------------------

#endif
