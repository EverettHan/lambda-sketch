//===================================================================
// COPYRIGHT [!output company] 2010/04/20
//===================================================================
// PLMIBLMigrationAttributesValuation.cpp
// Header definition of class PLMIBLMigrationAttributesValuation
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/04/20 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef PLMIBLMigrationAttributesValuation_H
#define PLMIBLMigrationAttributesValuation_H

#include "PLMBusinessLogicInterfaces.h"
#include "CATBaseUnknown.h"


class CATListValCATIInstance_var;


#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByPLMBusinessLogicInterfaces IID IID_PLMIBLMigrationAttributesValuation;
#else
extern "C" const IID IID_PLMIBLMigrationAttributesValuation ;
#endif

//------------------------------------------------------------------

/**
* Interface representing xxx.
*
* <br><b>Role</b>: Component that implement
* PLMIBLMigrationAttributesValuation is PLMEBLMigrationAttributesValuation
* <p>
* Do not use the PLMIBLMigrationAttributesValuation interface for such and such

*
* @example
*  // example is optional
*  PLMIBLMigrationAttributesValuation* currentDisplay = NULL;
*  rc = window-&gt;QueryInterface(IID_PLMIBLMigrationAttributesValuation,
*                                     (void**) &amp;currentDisplay);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/


class ExportedByPLMBusinessLogicInterfaces PLMIBLMigrationAttributesValuation: public CATBaseUnknown
{
CATDeclareInterface;

public:

    /** List of supported operation Id.*/
    enum OperationId {
        BatchV4V6 = 0
    };

    /**
    * Provides the PLM Migration Attributes Valuation specified by the business logic definition. 
    *
    * @param iOperationId
    *   Operation Id to differentiate the contextual usage. Authorized values are:
    *   <ul>
    *       <li> PLMIBLMigrationAttributesValuation::BatchV4V6 (for BatchV4V6 command) </li>
    *   </ul>
    * @param iPLMContextList
    *   List of contextual objects and parameters. Each context may either be NULL or hold the following information:
    *   <ul>
    *       <li> IncSessionId (integer): used to provide a key for identification uniqueness specific scheme (if not provided default incrementation is PLM type grained) </li>
    *       <li> IdString (string): used to provide a key for the identifier attribute valuation (retrieved from the preferences if not valuated) </li>
    *       <li> oReferenceId (string): used to pre-valuate identifier attribute of File while exporting. This is the name of product reference or representation reference </li>
    *   </ul>
    * @param iPLMComponentList
    *   List of component proxies on which will be apply the identification initialization
    *
    * @return
    *   <ul>
    *       <li> S_OK     if the business logic is successfully integrated </li>
    *       <li> S_FALSE  if their is no business logic to integrate for at least one component </li>
    *       <li> E_FAIL   if an error occurs. The following error classes and error identifiers can be associated with:
    *           <ul>
    *               <li>  @error PLMBLMigrationAttributesValuationError PLMBLMigrationAttributesValuationError::RunInitialization::InternalError
    *                     The business logic access service failed
    *               </li>
    *               <li>  @error PLMBLMigrationAttributesValuationError PLMBLMigrationAttributesValuationError::RunInitialization::ExecutionError
    *                     The business logic definition execution failed
    *               </li>
    *           </ul>
    *       </li>
    *   </ul>
    */
    virtual HRESULT RunValuation(PLMIBLMigrationAttributesValuation::OperationId iOperationId,
                                      CATListValCATIInstance_var & iPLMContextList,
                                      CATListValCATIInstance_var & ioPLMComponentList) = 0;


  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------

};

//-----------------------------------------------------------------------

#endif
