// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// CATEAfrDynamicCreationContainer.h
// Header definition of CATEAfrDynamicCreationContainer
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Jul 2009  Creation: Code generated by the CAA wizard  LD3
//===================================================================
#ifndef CATEAfrDynamicCreationContainer_H
#define CATEAfrDynamicCreationContainer_H

#include "CATAfrFoundation.h"
#include "CATBaseUnknown.h"
//---------------------------------------------------------------------- System
#include "CATUnicodeString.h"
#include "CATString.h"

//-----------------------------------------------------------------------
class CATCmdAccess;
/**
* Adapter class to create new accesses.
* Use this adapter to implement @href CATIAfrDynamicCreationContainer interface.
* @See CATIAfrDynamicCreationContainer
*/
class ExportedByCATAfrFoundation CATEAfrDynamicCreationContainer: public CATBaseUnknown
{
  CATDeclareClass;

  public:

  // Standard constructors and destructors
  // -------------------------------------
     CATEAfrDynamicCreationContainer ();
     virtual ~CATEAfrDynamicCreationContainer ();



    /**
    * Creates new childs and returns them for the concerned container
    * @return 
    *  The created access
    */
    virtual CATCmdAccess * CreateNewChilds();

        /**
    *
    * <br><b>Role</b>: Create new childs by using C-Afr declarative way (CATCAfrToolbar refer to the documentation on codewiki).
    * @param i_containerName the name of the father container that will contains the new child
    * @param o_instanceName the name of your instance, it should be unique for all component; So choose very well your id. It will also be helpful to not scan the model several times.</br>
    *        <strong>Note </strong>that you not worry about the life cycle of your component, it will be deleted in same time of the father container
    * 
    * @param o_templateName the template name of the CAfrComponent
    * 
    * @param o_fileXML the name of the xml file that contains your template
    * 
    */
    virtual void CreateNewChildsByDeclarative(const CATString & i_containerName,CATString & o_instanceName, CATUnicodeString & o_templateName, CATUnicodeString & o_fileXML) ;

};

//-----------------------------------------------------------------------

#endif
