// COPYRIGHT Dassault Systemes 2005
//===================================================================
//
// CATAdpOpenSaveServices.h
// Header definition of CATAdpQueryServices
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  May 2005  Creation: Code generated by the CAA wizard  PMM
//===================================================================
/**
* @CAA2Level L1
* @CAA2Usage U1  
*/
#ifndef CATAdpQueryServices_H
#define CATAdpQueryServices_H

#include "CATPLMIntegrationAccess.h"
#include "IUnknown.h"
#include "CATCollec.h"
class CATIAdpPLMIdentificator;
class CATIAdpType;

class CATBaseUnknown;
class CATListPtrCATIAdpPLMIdentificator ;
class CATAdpIdentificationSet;
class CATAdpAttributeSet;
class CATLISTP(CATAdpQueryResult);
class CATIAdpPLMErrorReviewer;


//-----------------------------------------------------------------------

/**
* Class to manage queries on PLM component in database.
*
* <br><b>Role</b>: Provides all basic functions to query PLM data.
*/
class ExportedByCATPLMIntegrationAccess CATAdpQueryServices
{

  public:

/** 
 * @deprecated R213 Use @href CATAdpPLMQueryServices#GetElementByIdentificationSet instead  <br>
 * Retrieves in the current repository the object corresponding to the unique identification set provided.
 *
 * <br><b>Role</b>: This method retrieves in the current repository, the unique object responding 
 * to the criteria defined by the identification set.
 * <ul>
 * <li> If no provider is currently connected, the query will result in a E_FAIL return.</li>
 * <li> If more than one provider is connected, the query will result in a E_FAIL return.</li>
 * <li> The service will always query a distant repository irrespective of the fact that the component 
 * is loaded or not in the current session. Since communication to a distant server (net access) is far 
 * less efficient than querying the local session (local CPU access), a performance degradation is 
 * unavoidable, each time this API is called.</li>
 * <li> It is thus strongly recommended not to use this API if the component is loaded in session, 
 * and use it if necessary otherwise.</li>
 * <li><code>ERR_04_QUERY</code> error is available through @href CATError#CATGetLastError if the provided IdentifierSet is not complete.</li>
 * </ul>
 *
 * @param iType [in]
 *   The type of the object to be retrieved.
 * <ul>
 * <li>  This argument can be obtained by using @href CATIAdpEnvironment#GetAuthoringType or @href CATIAdpEnvironment#GetUsableTypes.</li>
 * <li>  The type must not be an abstract type, this resulting in a <code>E_INVALIDARG</code> return. Only customized types are accepted.</li>
 * </ul>
 * @param iIdentifyingSet [in]
 *   The parameters enabling to identify the component in the database.
 * @param oComponentIdentifier [out]
 *   The PLM identificator corresponding to the retrived object. in the repository. The component is not loaded in memory. Use @href CATAdpOpenSaveServices#ExpandAndOpen to load it.
 *
 * @return
 *   <ul>
 *   <li><code>S_OK</code> if the component was found in the database.</li>
 *   <li><code>E_FAIL</code> if the component was not found.</li>
 *   <li><code>E_INVALIDARG</code> if the provided <tt>iType</tt> is invalid or if the provided <tt>iIdentifyingSet</tt> is not complete.
 *   The blocking error can be accessed through @href CATError#CATGetLastError protocol.</li>
 *   </ul>
 *
 */
  static HRESULT GetElementByIdentificationSet( CATIAdpType * iType, const CATAdpIdentificationSet & iIdentifyingSet,
                                                CATIAdpPLMIdentificator *& oComponentIdentifier );

/** 
 * @deprecated R417 Use @href CATAdpPLMQueryServices#GetUniqueKey in any case instead  <br>
 * Searches the attributes corresponding to the unique identification set for a given object.
 *
 * <br><b>Role</b>: This method searches in database the key/value attributes which correspond to the unique identification set
 * of the identified object. It must be used on element created with V1 typing. Used @href CATAdpPLMQueryServices#GetUniqueKey
 * to retrieve an identifier on a element created with new typing.
 * <ul>
 * <li><code>ERR_01_QUERY</code> error is available through @href CATError#CATGetLastError if the provided component has no identification set defined in the metadata.</li>
 * <li><code>ERR_02_QUERY</code> error is available through @href CATError#CATGetLastError if the provided component has an identification not available.</li>
 * </ul>
 *
 * @param iComponentIdentifier [in]
 *   The identifier of the object on which user wants to retrieve the identifier set.
 *   It is invalid if the pointer is nul.
 * @param oIdentifyingSet [out]
 *   The parameters enabling to identify the component in the database.
 *   It is invalid if it is not empty.
 * @param iopErrorReviewer [inout]
 *   The ErrorReviewer dedicated to store and handle all PLM Errors raised during the execution of this service.
 *
 * @return
 *   <ul>
 *   <li><code>S_OK</code> if search successfully done. The <tt>oIdentifyingSet</tt> can be empty.</li> 
 *   <li><code>E_INVALIDARG</code> if input arguments are invalid.</li> 
 *   <li><code>E_FAIL</code> if an error occured. The blocking error can be accessed through @href CATError#CATGetLastError method.</li> 
 *   </ul>
 *
 */
  static HRESULT GetIdentificationSet( CATIAdpPLMIdentificator * iComponentIdentifier, CATAdpIdentificationSet & oIdentifyingSet, CATIAdpPLMErrorReviewer * iopErrorReviewer = NULL );


/** 
 * @deprecated R213 Use @href CATAdpPLMQueryServices#GetRepresentationsFromReference instead  <br>
 * Retrieves all the representation references from a PLM reference object.
 *
 * <br><b>Role</b>: This method retrieves PLM identicators of all representations associated to a PLMCoreReference object.
 * Lists should be empty when calling this method otherwise this method returns <tt>E_INVALIDARG</tt>.
 *
 * @param iReference  [in]
 *   The reference object on which user wants to retrieve all representations.
 * @param oRepresentations [out]
 *   The list of representations of the reference, all elements of this list should be released.
 *
 * @return
 *   <ul>
 *   <li><tt>S_OK</tt>: Search successfully done. </li> 
 *   <li><tt>E_INVALIDARG</tt>: if input arguments are not corrects (NULL or not Empty List or not a CoreReference)</li>
 *   <li><tt>E_FAIL</tt>: Error during query</li>
 *  </ul>
 *
 */
   static HRESULT GetRepresentationsFromReference( CATBaseUnknown * iReference,
                                                   CATListPtrCATIAdpPLMIdentificator & oRepresentations);

/** 
 * @deprecated R213 Use @href CATAdpPLMQueryServices#GetElementsFromAttributes (CAA use)  <br>
 * @deprecated R417 Use @href CATAdpPLMExtendedQueryServices#GetElementsFromQueryFilter (CAA use)  <br>
 * @deprecated R417 Use @href CATAdpExtendedQueryServices#GetElementsFromQueryFilter (internal use)  <br>
 *
 * Retrieves in the current repository the objects corresponding to a simple set of string attributes.
 *
 * <br><b>Role</b>: This method retrieves in the current repository the objects matching the input defined criterion.
 * <ul>
 * <li> The input criterion is a set of attributes which objects must match the values (see further on for more accurate description).</li>
 * <li> If no provider is currently connected, the query will result in an E_FAIL return.</li>
 * <li> If more than one provider is connected, the query will result in an E_FAIL return.</li>
 * </ul>
 *
 * @param iType [in]
 *   The type of the object to be retrieved.
 *   This argument can be obtained by using @href CATIAdpEnvironment#GetAuthoringType or @href CATIAdpEnvironment#GetUsableTypes .
 * @param iAttributeSet [in]
 *   The attribute set that the searched object should match. It contains the names and values of the
 *   attributes which will be used during the search operation. It must not be empty.
 * <ul>
 * <li> All attributes are combined through a ‘AND’ condition, thus leading to a search of objects which match all the attributes of the set.</li>
 * <li> These attributes should be of only string types.</li>
 * <li> Wildcard are supported as attribute values.</li>
 * </ul>
 *   The set is invalid if :
 * <ul>
 * <li> The attribute set is empty.</li>
 * <li> Or, one of the attributes available in the set is not defined for such a @href CATIAdpType in the metadata.</li>
 * <li> Or, one of the attributes available in the set is not defined as a string attribute in the metadata.</li>
 * </ul>
 * @param oQueryResults [out]
 *   Returned list of information (@href CATAdpQueryResult ) objects associated with the PLMComponents retrieved. 
 * <ul>
 * <li> The list is emptied by the beginning of the method.</li> 
 * <li> You must delete the elements of the list when useless.</li> 
 * <li> These objects are not loaded in a session. </li>
 * <li> Objects are identified through @href CATIAdpPLMIdentificator by using the @href CATAdpQueryResult#GetIdentifier method.</li>
 * <li> The attributes obtained through the @href CATAdpQueryResult#GetAttributeSet method are the one which were given as 
 *      input in <tt>iAttributeSet</tt> with the exact values retrieved from the database.</li>
 * </ul>
 *
 * @return
 *   <ul>
 *   <li><code>S_OK</code> if a component was found in the database.</li>
 *   <li><code>S_FALSE</code> if no component matching the criterion was found in the database.</li>
 *   <li><code>E_FAIL</code> if no component was found. If a blocking error occured, it can be accessed through @href CATError#CATGetLastError method.</li>
 *   <li><code>E_INVALIDARG</code> if the provided <tt>iType</tt> or <tt>iAttributeSet</tt> is invalid.</li>
 *   </ul>
 *
 */
   static HRESULT GetElementsFromAttributes( CATIAdpType * iType, const CATAdpAttributeSet & iAttributeSet,
                                             CATLISTP(CATAdpQueryResult) & oQueryResults );


};
#endif
