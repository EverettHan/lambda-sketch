// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// CATAfrPLMBarStarterView.h
// Header definition of CATAfrPLMBarStarterView
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Jul 2009  Creation: Code generated by the CAA wizard  LD3
//===================================================================
#ifndef CATAfrPLMBarStarterView_H
#define CATAfrPLMBarStarterView_H


#include "CATAfrStarterView.h"
#include "CATAfrFoundation.h"

//-----------------------------------------------------------------------
class CATAfrButtonWrapper;
#include "CATCommandHeader.h"
class CATAfrComboWrapper;
class CATSYPEventArgs;
class CATCmdAccess;
class CATNotification;
/**
* Class representing the PLM Bar starter representation. 
*
* <br><b>Role</b>: Create a PLM Bar component (combo + button).
* As the PLM Bar is a special toolbar, the components are wrapped
* (See @href CATAfrButtonWrapper, @href CATAfrComboWrapper) in order to
* impact few four clients (Search, Impact, Propagate, Collaborate).
*
* Defrive from @href CATAfrStarterView
*/
class ExportedByCATAfrFoundation CATAfrPLMBarStarterView: public CATAfrStarterView
{
  CATDeclareClass;
  friend class CATAfrPLMBarStarterView_UT;  // For Unit Testing

  public:

  // Standard constructors and destructors
  // -------------------------------------

     CATAfrPLMBarStarterView (CATCommand * iParent,CATString * const iIdentifier, CATString  headerName, CATBoolean comboEditable, CATBoolean comboIcon);
     virtual ~CATAfrPLMBarStarterView ();


  // Virtual methods to initiate and destroy your widget
  // -------------------------------------

    /**
     *   Initialize the widget representing the starter model.
     *   @param ipParent
     *      The parent command. In Dialog, components needs to know their parent.
     *   @return
     *      The created starter command. 
     *      The starter command which will added (Ex : @href CATDlgPushButton, @href CATVidCtlPushButton or even @href CATVidLayGrid)
     * 
     */
     CATCommand * InitWidget(CATCommand * parent,const CATString & objectName="");

    /**
     *   Delete the created widget.
     */
     void DeleteWidget();


  // Virtual methods to manage behaviour of the widget during command launching
  // -------------------------------------
    /**
     *   Enable the widget.
     */
     void EnableWidget() const ;
    /**
     *   Disable the widget.
     */
     void DisableWidget()  const ;
    /**
     *   Simulate press action on the widget
     */
     void ActivateWidget()   const ;
    /**
     *   Point whether the widget is pressed.
     *   @return
     *     1 if pressed. Otherwise, 0
     */
     int  IsWidgetActivated() ;
    /**
     *   Simulate the release of the widget
     * 
     */
     void DeactivateWidget() const ;


  // methods to set the ressource from command header
  // -------------------------------------

    /** @nodoc */
     void SetIconName(const CATString& iIconNameNormal,
                      const CATString& iIconNameSelected = "",
                      const CATString& iIconNameFocused = "",
                      const CATString& iIconNameDisabled = "");
    /** @nodoc */
     void SetAccelerator(const CATUnicodeString &accelerator);
    /** @nodoc */
     void SetMnemonic( CATUnicodeChar iLetter);
    /** @nodoc */
     void SetTitle(const CATUnicodeString & nlsCommandName);
    /** @nodoc */
     void SetHelp(const CATUnicodeString & help);
    /** @nodoc */
     void SetHelpRsc(const CATString & help);
    /** @nodoc */
     void SetShortHelp(const CATUnicodeString & help);
    /** @nodoc */
     void SetShortHelpIconName(const CATString & icon);
    /** @nodoc */
     void SetLongHelp(const CATUnicodeString & help);
    /** @nodoc */
     void SetLongHelpIconName(const CATString & icon);
    /** @nodoc */
     void SetLongHelpId(const CATUnicodeString& longHelpId);


    // specific methods for PLM Bar
    // -------------------------------------
  CATAfrComboWrapper  *GetPLMBarCombo();  // Gets a pointer to the combo.
  CATAfrButtonWrapper *GetPLMBarButton(); // Gets a pointer to the button.
  void SetPLMBarComboEditable (CATBoolean ibool);
  void SetPLMBarComboIcon (CATBoolean ibool);

  void SetXAfrView(CATAfrModelView * i_pView);
  CATAfrModelView * GetXAfrView() {return NULL;};


  void SetAccess(CATCmdAccess * ipAccess){ _pAccess = ipAccess;};
  void HandleEditorCB(CATBaseUnknown* i_input, CATSYPEventArgs* i_pArgs);

private:
  
  void MenuSelectCB (CATCommand * iPublishingCommand, 
                     CATNotification * iNotification, 
                     CATCommandClientData iData);

  void ComboSelectCB(CATCommand * iPublishingCommand, 
                     CATNotification * iNotification, 
                     CATCommandClientData iData);
  void ComboEditCB  (CATCommand * iPublishingCommand, 
                     CATNotification * iNotification, 
                     CATCommandClientData iData);

  CATString             _headerName;
  CATString             _headerNameBis;
  CATAfrButtonWrapper * _pButton;
  CATAfrComboWrapper  * _pCombo;
  CATBoolean            _comboEditable;
  CATBoolean            _comboIcon;
  CATCmdAccess        * _pAccess;

};

//-----------------------------------------------------------------------

#endif
