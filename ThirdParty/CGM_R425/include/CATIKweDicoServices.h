//===================================================================
// COPYRIGHT Dassault Systemes 2017/10/25
//===================================================================
// CATIKweDicoServices.cpp
// Header definition of class CATIKweDicoServices
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2017/10/25 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef CATIKweDicoServices_H
#define CATIKweDicoServices_H

#include "CATLifSpecs.h"
#include "CATBaseUnknown.h"

#include "CATCollec.h"
#include "CATSysBoolean.h"
#include "CATBaseUnknown_var.h"
#include "CATICkeExpressionRestriction.h"
#include "CATITypeDictionary.h"
#include "CATICkeType.h"

class CATLISTV_CATICkeType;
class CATListValCATICkeType_var;
class CATListValCATCkeFunctionAsText;
class CATCkeFunctionAsText;
class CATIKweAppResourceTypeFilter_var;

extern ExportedByCATLifSpecs  IID IID_CATIKweDicoServices ;


class ExportedByCATLifSpecs CATIKweDicoServices: public CATBaseUnknown
{
CATDeclareInterface;

public:

//
// TODO: Add your methods for this interface here.
//

	enum DictionaryKind {
		Client = 1,
		PublicServer, PrivateServer
	};

/**
* Returns the list of attributes/methods filtered by a restriction potentially
* also, the editor can give information that are contextual to the expression
* such as included reusable functions libraries
* @param iFromServerDictionary
* TRUE if the methods are retrieved from the server dictionary,
* FALSE if they are coming from the client dictionary.
*/
	virtual void BuildMethodList(
		CATLISTV(CATCkeFunctionAsText)& oMethods,
		CATLISTV(CATCkeFunctionAsText)& oMethodsAttribute,
		DictionaryKind iFromServerDictionary,
		const CATICkeExpressionRestriction_var &iRest = NULL_var) = 0;

	virtual CATITypeDictionary_var  GetDictionary(DictionaryKind iFromServerDictionary) = 0;

	virtual const CATLISTV(CATICkeType_var) &  GetLiteralTypes(CATBoolean onlyNewable = FALSE) = 0;

	// Return the list of types filtered by applicative restriction
	virtual void BuildTypeList(CATListOfCATUnicodeString &typeList,
		const CATICkeExpressionRestriction_var &iRest = NULL_var,
		const IID &iFilterInterface = IID_CATBaseUnknown,
		CATBoolean iFilterWithPreferedPackages = FALSE,
		CATBoolean checkVisibility = TRUE,
		DictionaryKind iFromServerDictionary = CATIKweDicoServices::Client) = 0;

	virtual void GetFunctionDescription(const CATCkeFunctionAsText &iFunc, CATUnicodeString &oDescription, CATUnicodeString &oSample, const CATBoolean &iSyntaxHighlighting = FALSE) = 0;

	virtual void BuildFilteredTypeList
	(const CATIKweAppResourceTypeFilter_var&	iFilter
		, const CATUnicodeString&		iItemName
		, const CATUnicodeString&		iSubItemName
		, CATListOfCATUnicodeString&	typeList
	) = 0;

	virtual void GetUserDefinedTypes(CATListOfCATUnicodeString & typeList, CATLISTV(CATICkeType_var) & spTypesList) = 0;

	virtual HRESULT GetHiddenPackages(CATListOfCATString& oPreferedPackages) = 0;

	// Return the list of types filtered by applicative restriction
	virtual void BuildTypeListForPackages(CATListOfCATUnicodeString &typeList,const CATListOfCATString & packages,const CATBoolean & recoverLiterals = TRUE) = 0;


	/**
	* Returns the list of attributes/methods for certain packages (input list)
	* @param iFromServerDictionary
	* TRUE if the methods are retrieved from the server dictionary,
	* FALSE if they are coming from the client dictionary.
	*/
	virtual void BuildMethodListFromPackage(
		CATLISTV(CATCkeFunctionAsText)& oMethods,
		CATLISTV(CATCkeFunctionAsText)& oMethodsAttribute,
		CATListOfCATUnicodeString packages,
		DictionaryKind iFromServerDictionary,
		CATBoolean iShowAllFunctions) = 0;
	virtual void BuildMethodListFromPackage(
		CATLISTV(CATCkeFunctionAsText)& oMethods,
		CATLISTV(CATCkeFunctionAsText)& oMethodsAttribute,
		CATListOfCATUnicodeString packages,
		CATBoolean iFromServerDictionary,
		CATBoolean iShowAllFunctions) = 0;

};

//-----------------------------------------------------------------------
CATDeclareHandler( CATIKweDicoServices, CATBaseUnknown );

#endif
