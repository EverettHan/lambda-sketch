//===================================================================
// COPYRIGHT Dassault Systemes 2021/02/05
//===================================================================
// IVisuProductLoaderHttpClient.h
// Header definition of class IVisuProductLoaderHttpClient
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2021/02/05 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef IVisuProductLoaderHttpClient_H
#define IVisuProductLoaderHttpClient_H

#include "CATVisItf.h"

#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"
#include <memory>

class CATUnicodeString;

//-----------------------------------------------------------------------
enum class VisuHttpRequestType {
  Unknown,
  Json,
	Text,
	Png,
	Cgr,
	Bin
};

extern ExportedByCATVisItf IID IID_IVisuProductLoaderHttpClient;


/**
* @class IVisuProductLoaderHttpClient is an abstract interface to external techno dependancies.
* Its implementations Http communication for the Product Loader.
*/
class ExportedByCATVisItf IVisuProductLoaderHttpClient : public CATBaseUnknown
{
  CATDeclareInterface;
public:
	
	//Download file
	virtual HRESULT GetRequestFile(const CATUnicodeString& iUrl, const CATUnicodeString& iPath, VisuHttpRequestType iType = VisuHttpRequestType::Bin) = 0;
	virtual HRESULT GetRequestBuffer(const CATUnicodeString& iUrl, std::unique_ptr<char[]>& oBuffer, unsigned int& oReceivedLen, VisuHttpRequestType iType = VisuHttpRequestType::Bin) = 0;
	virtual HRESULT GetRequestBuffer(const CATUnicodeString& iUrl, std::shared_ptr<char>& oBuffer, unsigned int& oReceivedLen, VisuHttpRequestType iType = VisuHttpRequestType::Bin) = 0;

	virtual HRESULT GetRequest(const CATUnicodeString& url, CATUnicodeString& oData, VisuHttpRequestType iType = VisuHttpRequestType::Text) = 0;
	virtual HRESULT PostRequest(const CATUnicodeString& iUrl, const CATUnicodeString& iData, CATUnicodeString& oData, VisuHttpRequestType iType = VisuHttpRequestType::Json) = 0;

	// dedicated to ODT and debug
	virtual bool IsReadFile() const = 0;
	virtual bool IsWriteFile() const = 0;
	virtual HRESULT ReadFile(const char* ope, const CATUnicodeString& iUrl, const CATUnicodeString& iData, char*& oBuffer, unsigned int& oReceivedLen, VisuHttpRequestType iType = VisuHttpRequestType::Bin) = 0;
	virtual HRESULT WriteFile(const char* ope, const CATUnicodeString& iUrl, const CATUnicodeString& iData, char* iBuffer, unsigned int iReceivedLen, VisuHttpRequestType iType = VisuHttpRequestType::Bin) = 0;
	virtual CATUnicodeString GetReadFileName(const char* ope, const CATUnicodeString& iPrefixForTraceFile, bool iConcatWithUUID, const CATUnicodeString& iUrl, const CATUnicodeString& iData, const char* iFilenameEtension = ".txt") const = 0;
	virtual CATUnicodeString GetWriteFileName(const char* ope, const CATUnicodeString& iPrefixForTraceFile, bool iConcatWithUUID, const CATUnicodeString& iUrl, const CATUnicodeString& iData, const char* iFilenameEtension = ".txt") const = 0;
	virtual const CATUnicodeString& GetReadDirectoryName() const = 0;
	virtual const CATUnicodeString& GetWriteDirectoryName() const = 0;
	virtual HRESULT SetPrefixFileName(const CATUnicodeString& iPrefixForTraceFile) = 0;
	virtual HRESULT SetUUIDFileName(bool iConcatWithUUID) = 0;

};

//-----------------------------------------------------------------------
CATDeclareHandler(IVisuProductLoaderHttpClient, CATBaseUnknown);


#endif
