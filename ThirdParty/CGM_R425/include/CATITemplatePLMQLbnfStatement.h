// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATITemplatePLMQLbnfStatement.h
// Define the CATITemplatePLMQLbnfStatement interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  May 2007  Creation: Code generated by the CAA wizard  HSU
//===================================================================
#ifndef CATITemplatePLMQLbnfStatement_H
#define CATITemplatePLMQLbnfStatement_H
/**
* @level Private
* @usage U3
*/
#include "CATPLMQLCPPParser.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMQLCPPParser IID IID_CATITemplatePLMQLbnfStatement;
#else
extern "C" const IID IID_CATITemplatePLMQLbnfStatement ;
#endif
class CATITemplateStatementHandler;
class CATIPLMCompRecordReadSet;
class  CATIPLMExpandResultHandler;
class CATUnicodeString;
//------------------------------------------------------------------

/**
The User who want to use this Interface first need to implement CATITemplateStatementHandler interface.
* Interface representing CATITemplatePLMQLbnfStatement.
*
* <br><b>Role</b>: Components that implement
* CATITemplatePLMQLbnfStatement are ...CATPLMQL\CATPLMQLCPPParser.m\src\CATTemplatePLMQLbnf_Statement.cpp
* <p>
* Do not use the CATITemplatePLMQLbnfStatement interface for normal PLMQL statement exection

*
* @example
				CATITemplatePLMQLbnfStatement* pStatement=NULL;
				CATIPLMCompRecordReadSet *opRecordReadSet=NULL;
				CATITemplateStatementHandler *iMyHandler=......////do something
				CATUnicodeString plmql=...//plmql statement
  				if(S_OK==CATPLMQLbnfServices::CreateTemplatePLMQLStatement(&plmql,&pStatement))
				{
					
					if(S_OK==pStatement->Execute(iMyHandler,&opRecordReadSet))
					{
						//do something......

					}
				}
				CATSysReleasePtr(pStatement);
				CATSysReleasePtr(iMyHandler);
				CATSysReleasePtr(opRecordReadSet);

*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByCATPLMQLCPPParser CATITemplatePLMQLbnfStatement: public CATBaseUnknown
{
	CATDeclareInterface;

public:

  virtual HRESULT SetAdditionnalParam(const CATUnicodeString& iKey,const CATUnicodeString& iValue) = 0;

	/**
	* <dl>
	* <dt><b>Execute:</b>
	* <pre>
	*      
	*   Executes a PLMQL Template statement 
	*   @param iMyHandler[In]
	*      a pointer to CATITemplateStatementHandler interface.
	* @param oRecordSet [out, CATBaseUnknown#Release]
	*    a CATIPLMCompRecordReadSet interface provides access to the result . 
	*	@return
	*			Error code of function :
	*   <dl>
	*     <dt>S_OK</dt>
	*     <dd>Statement is successfully executed .</dd>
	*     <dt>E_FAIL </dt>
	*     <dd>A problem occurs during the Statement . get further information by using CATIPLMError</dd>
	*   </dl>

	* 
	* </pre>
	* </dl>
	*/
	virtual HRESULT Execute(CATITemplateStatementHandler  * iMyHandler,CATIPLMCompRecordReadSet ** oRecordSet)=0;

	/**
	* <dl>
	* <dt><b>Execute:</b>
	* <pre>
	*      
	*   Executes a PLMQL Template statement 
	*   @param iMyHandler[In]
	*      a pointer to CATITemplateStatementHandler interface.
	* @param oNumberOfResults [out, int ]
	*    no of records
	*	@return
	*			Error code of function :
	*   <dl>
	*     <dt>S_OK</dt>
	*     <dd>Statement is successfully executed .</dd>
	*     <dt>E_FAIL </dt>
	*     <dd>A problem occurs during the Statement . get further information by using CATIPLMError</dd>
	*   </dl>

	* 
	* </pre>
	* </dl>
	*/

	virtual HRESULT ExecuteQueryCount(CATITemplateStatementHandler  * iMyHandler,int & oNumberOfResults)=0;

	/**
    * Execute a PLMQL Push Expand statement.
    * @param iExpandHandler
    *     CATIPLMExpandResultHandler - expand handler
    *	@return
    *			Error code of function :
    *   <dl>
    *     <dt>S_OK</dt>
    *     <dd>Statement is successfully executed .</dd>
    *     <dt>E_FAIL </dt>
    *     <dd>A problem occurs during the Statement . get further information by using CATIPLMError</dd>
    *   </dl>
    */
    virtual HRESULT ExecutePushExpand(CATITemplateStatementHandler  * iMyHandler,CATIPLMExpandResultHandler * ioExpandHandler)=0;

	// No constructors or destructors on this pure virtual base class
	// --------------------------------------------------------------
};

//------------------------------------------------------------------

#endif
