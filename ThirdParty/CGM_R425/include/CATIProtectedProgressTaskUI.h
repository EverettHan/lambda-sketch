//===================================================================
// COPYRIGHT Dassault Systemes 2019/01/15
//===================================================================
// CATIProtectedProgressTaskUI.cpp
// Header definition of class CATIProtectedProgressTaskUI
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2019/01/15 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef CATIProtectedProgressTaskUI_H
#define CATIProtectedProgressTaskUI_H

#include "CATBoolean.h"
#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"
#include "CATAfrProgressTask.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATAfrProgressTask IID IID_CATIProtectedProgressTaskUI;
#else
extern "C" const IID IID_CATIProtectedProgressTaskUI;
#endif

/**
* Interface used to add addtional information to the Progress Bar.
* @see CATIProgressTaskUI
*/
class ExportedByCATAfrProgressTask CATIProtectedProgressTaskUI: public CATBaseUnknown
{
CATDeclareInterface;

public:

  /**
  * Sets the current progress indicator's value and the estimated remaining time.
  * <br><b>Role</b>:The progress indicator's value is used to define:
  *  <ul>
  *  <li>The current value of the progress control. </li>
  *  <li>The percentage of process executed:</li>
  *  <p><tt> p = (iValue-min)/(max-min)</tt></p>
  *   <p>where "min" and "max" define the range set by the @href #SetRange method</p>
  * </ul>
  * @param iValue
  * The range of the value must be between the minimum and maximum bounds. if iValue is greated
  * than the maximum value, the step progression is the maximum value. If the ivalue is less
  * than the minimum value, the step progression is the minimum value.
  * @param iRemainingTime
  * The estimated time remaining in millisecond to display in the Progress Bar.
  * If the iRemainingTime is greater or equal to 1000 ms, the provided iRemainingTime value is displayed in the progress bar.
  * If the iRemainingTime is greater or equal to 0 and less than 1000 ms, "n/a" is displayed in the progress bar.
  * Otherwise, the default estimated time remaining is used for display.
  * @return
  * S_OK in all cases
  */
  virtual HRESULT SetProgress(long iValue, long iRemainingTime) = 0;
};

//-----------------------------------------------------------------------
CATDeclareHandler( CATIProtectedProgressTaskUI, CATBaseUnknown );

#endif
