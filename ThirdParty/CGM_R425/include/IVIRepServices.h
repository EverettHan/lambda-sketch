//===================================================================
// COPYRIGHT Dassault Systemes 2018/07/20
//===================================================================
// IVIRepServices.cpp
// Header definition of class IVIRepServices
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2018/07/20 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef IVIRepServices_H
#define IVIRepServices_H

#include "IVInterfaces.h"
#include "CATBaseUnknown.h"
#include "IVISUIInteractionContext.h"
#include "IVRepData.h"

class CATVizViewer;
class CAT3DBagRep;
class CAT3DFinalBagRep;
class CAT3DFilterBagRep;
class CAT3DRep;
class CATViewpoint;

extern ExportedByIVInterfaces  IID IID_IVIRepServices;

class IVIRepServices_var;


class ExportedByIVInterfaces IVIRepServices : public CATBaseUnknown
{
  CATDeclareInterface;

public:

  static HRESULT GetInstance(IVIRepServices_var& ohSingleton);

  /**
  * Returns a new instance of a bag rep set with several properties.
  * @param iRepProperties [in]
  *   The properties of the rep to be created, including unclipping, view mode and potential attachment to an existing SUI element.
  * @param oParentRep [out]
  *   The UIBagRep returned is the last child of a tree of reps, whose root is oParentRep.
  * @return
  *   A new CAT3DFinalBagRep, that is the leaf of a tree - in short :
  *   
  *   CAT3DFinalBagRep*  oParentRep
  *                          |
  *                          .
  *                          . [an assembly of different reps designed to satisfy the input properties]
  *                          .
  *                          |
  *   CAT3DFinalBagRep* [returned rep]                  
  *
  */
  virtual CAT3DFinalBagRep* CreateUIBagRep(IVRepProperties& iRepProperties, CAT3DFilterBagRep*& oParentRep) = 0;

  /**
  * Cleans the rep hierarchy that was created with CreateUIBagRep.
  * Has to be called in order to delete tools (filters, etc) used when creating the reps. Reps themselves are not destroyed.
  * @param iLeafRep [in]
  *   The CAT3DFinalBagRep that was returned by CreateUIBagRep (the leaf of the rep hierarchy).
  */
  virtual void CleanUIBagRep(CAT3DFinalBagRep* iLeafRep) = 0;

  /**
  * Dynamically (re)sets the "uncut" property on a bagrep previously created through the CreateUIBagRep method.
  * @param iLeafRep [in]
  *   The CAT3DFinalBagRep that was returned by CreateUIBagRep (the leaf of the rep hierarchy).
  * @param iUncut [in]
  *   If true : Sets the "uncut" property. If false : Removes the "uncut" property.
  */
  virtual void SetUncut(CAT3DFinalBagRep* iLeafRep, bool iUncut) = 0;

  /**
  * Sets the view mode on a bag rep.
  * @param ipRep [in]
  *   The bag rep impacted by the view mode.
  * @param iViewModeData [in]
  *   If iViewModeData.activated == true, the view mode will be applied. If false, all view modes will be deactivated on the rep (hence the rep's view mode will depend on the viewer's).
  *   iViewModeData.viewMode : the view mode of the rep to be created, e.g. REP_VIEW_MESH, REP_VIEW_MATERIAL, etc. (See CATRep.h for the rep view modes available).
  *   iViewModeData.viewer : the viewer in which the rep exists (necessary as a VIEW_REP_OVERLOAD has to be set on the viewer in order for the rep's view mode to be taken into account.
  *   If set here, the view Mode of the viewer won't affect the rep's.
  */
  virtual void SetViewMode(CAT3DFilterBagRep* ipRep, const IVRepViewModeData& iViewModeData) = 0;

  /**
  * Defines whether the bounding box of the reps are taken into account.
  * @param iLeafRep [in]
  *   The CAT3DFinalBagRep that was returned by CreateUIBagRep (the leaf of the rep hierarchy).
  * @param iUseBoundingBox [in]
  *    If true, the bounding box of the reps in the hierarchy will be taken into account. If false, an infinite bounding box will be used.
*/
  virtual void UseBoundingBox(CAT3DFinalBagRep* iLeafRep, bool iUseBoundingBox) = 0;

  /**
  * Adds a given rep to the viewer's slave viewpoints.
  * @param ipVizViwer [in]
  *   The viewer whose slaves in which to add the rep.
  * @param ipRep [in]
  *   The rep to be added.
  * @param iShadowCastDisabled [in]
  *   If shadow cast is disabled, the rep won't cast any shadow.
  */
  virtual void AddRepInVRViewpoints(CATVizViewer* ipVizViewer, CAT3DRep* ipRep, bool iShadowCastDisabled = false) = 0;

  /**
  * Remove given rep from the viewer's slave viewpoints
  * @param ipVizViwer [in]
  *   The viewer whose slaves from which to remove the rep.
  * @param ipRep [in]
  *   The rep to be removed.
  * @param iShadowCastDisabled [in]
  *   Informs whether the rep had the "no shadow cast" option activated at creation. 
  *   ! Warning ! It may not seem important to need this attribute at removal, but for obscure visu reasons 
  *   (unregistering of actors that were registered at creation of the rep...), it is.
  */
  virtual void RemoveRepFromVRViewpoints(CATVizViewer *ipVizViewer, CAT3DRep* ipRep, bool iShadowCastDisabled = false) = 0;

  /**
  * Set the scene rep as hidden in the viewer's slave viewpoints
  * @param ipVizViwer [in]
  *   The viewer whose slaves from which to hide the rep.
  */
  virtual void HideSceneInVRViewpoints(CATVizViewer* ipVizViewer) = 0;

  /**
  * Set the scene rep as shown  in the viewer's slave viewpoints
  * @param ipVizViwer [in]
  *   The viewer whose slaves from which to show the rep.
  */
  virtual void ShowSceneInVRViewpoints(CATVizViewer* ipVizViewer) = 0;

  /**
  * Get the pos of the objects with respect to the ModelBag pos
  * @param pos [in]
  * The transformation whose conversion in ModelBag Referantial is required.
  * @param CATMathTransformation& [out]
  * the transformed pos with the model bag rep pos
  */
  virtual CATMathTransformation GetModelPoseInVR(const CATMathTransformation& pos) = 0;

};

//-----------------------------------------------------------------------
CATDeclareHandler(IVIRepServices, CATBaseUnknown);

#define IVISUIBasicHmdScenarioFactory_Create_2 /* CPT : for IVISUIBasicHmdScenarioFactory.h, IVISUIBasicHmdScenarioFactory_Create */

#endif
