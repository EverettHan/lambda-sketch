// File generated by CPPExt (Storable)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
#ifndef _CATStandard_Storable_HeaderFile
#define _CATStandard_Storable_HeaderFile

#ifndef _CATStandard_Integer_HeaderFile
#include "CATStandard_Integer.hxx"
#endif
#ifndef _CATStandard_Boolean_HeaderFile
#include "CATStandard_Boolean.hxx"
#endif
//#ifndef _CATStandard_OStream_HeaderFile
//#include "CATStandard_OStream.hxx"
//#endif
#ifndef _CATStandard_PrimitiveTypes_HeaderFile
#include "CATStandard_PrimitiveTypes.hxx"
#endif


#ifndef _CATStandard_Macro_HeaderFile
#include "CATStandard_Macro.hxx"
#endif

#include "SysCascade.h"

ExportedBySysCascade  Handle_CATStandard_Type& CATStandard_Storable_Type_();

class CATStandard_Storable  {

public:

 // Methods PUBLIC
 // 
ExportedBySysCascade  virtual  CATStandard_Integer HashCode(const CATStandard_Integer Upper) const;
ExportedBySysCascade    CATStandard_Boolean IsEqual(const CATStandard_Storable& Other) const;
  CATStandard_Boolean operator ==(const CATStandard_Storable& Other) const
{
  return IsEqual(Other);
}

ExportedBySysCascade    CATStandard_Boolean IsSimilar(const CATStandard_Storable& Other) const;
//ExportedBySysCascade  virtual  void ShallowDump(CATStandard_OStream& S) const;




 // Type management
 //
 ExportedBySysCascade  friend Handle_CATStandard_Type& CATStandard_Storable_Type_();

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //


};





// other inline functions and methods (like "C++: function call" methods)
//
inline CATStandard_Integer HashCode(const CATStandard_Storable& me,const CATStandard_Integer Upper) {
 return me.HashCode(Upper);
}

inline CATStandard_Boolean IsSimilar(const CATStandard_Storable& me,const CATStandard_Storable& Other) {
 return me.IsSimilar(Other);
}

/*inline void ShallowDump(const CATStandard_Storable& me,CATStandard_OStream& S) {
 me.ShallowDump(S);
}*/



#endif
