/** WARNING: YWE 14:12:17 SINGLE-CODE 2013x => NO LOCAL CHANGE EXPECTED - USE IMPORT **/
// COPYRIGHT Dassault Systemes 2003
//===================================================================
//
//  Oct 2003  Creation: Code generated by the CAA wizard  NHB
//===================================================================
#ifndef CheckRepStaticInfo_H
#define CheckRepStaticInfo_H

/** 
 *  @level Protected 
 *  @usage U1
 */
#include "CATUnicodeString.h"
#include "CATListOfCATUnicodeString.h"
#include "CATListOfInt.h"
#include "ExportedByCATClnBase.h"


/**
 * This class implements Static definition of error implementation for UI purpose.
 * <br><b>Role:</b>This class is used to get and filter CATDUA cleaner error codes.<br>
 * Filteration can be done based on <br>
 * <p>Domains,Keywords and severeties.
 */
class ExportedByCATClnBase  CheckRepStaticInfo {
  public:
/**
 * Constructs and initialises  ErrorStaticList Object.
 */
  CheckRepStaticInfo();
/**
 * Destructs an ErrorStaticList Object and releases the resources.
 */
  virtual ~CheckRepStaticInfo();
/**
 * Builds the list of errors to display according to filter criteria.
 * @param iPDM
 *		Supported PDM type.
 * <br><b>Legal values:</b><br>
 * <tt>"File"</tt>    <br>
 * <tt>"ENOVIA5"</tt> <br>
 * @param iSeverity
 *			List of supported Severities. iSeverity list cannot be empty.
 * <br><b>Legal values:</b><br>
 * <tt>0</tt> Severity 0.<br>
 * <tt>1</tt> Severity 1.<br>
 * <tt>2</tt> Severity 2.<br>
 * <tt>3</tt> Severity 3.<br>
 * @param oList
 *			List of errors.
 * return
 *		Status flag
 * <br><b>Legal values:</b><br>
 * <tt>0</tt> Success.<br>
 * <tt>1</tt> No static definition found<br>
 * <tt>2</tt> PDM != [File,ENOVIA5]<br>
 * <tt>3</tt> iSev[i] != [0-3]<br>
 * <tt>4</tt> Errorxxx different size<br>
 * <tt>5</tt> No severity defined<br>
 */
  int GetListValidError(CATUnicodeString iPDM, CATListOfInt iSeverity,CATListOfCATUnicodeString & oList) ;

  /**
 * Builds the list of errors based on Domain or KeyWord.
 * @param iPDM
 *		Supported PDM type.
 * <br><b>Legal values:</b><br>
 * <tt>"File"</tt> <br>
 * <tt>"ENOVIA5"</tt> <br>
 * @param iDomainOrKeywords
 *			List of supported Domains/KeyWords.
 * @param oList
 *			List of errors.
 * @param iSwitch
 *			Switch to indicate Domain or KeyWord.
 * <br><b>Legal values:</b><br>
 * <tt>1</tt> For Domain<br>
 * <tt>2</tt> For KeyWord<br>
 * @return
 *			Status flag
 * <br><b>Legal values:</b><br>
 * <tt>0</tt> Success.<br>
 * <tt>2</tt> PDM != [File,ENOVIA5]<br>
 * <tt>3</tt> PDM != [File,ENOVIA5]<br>
 */
  int GetListValidErrorDomainOrKeyWordWise(CATUnicodeString iPDM,CATListOfCATUnicodeString iDomainOrKeywords, CATListOfCATUnicodeString & oList,int iSwitch);
/**
 * Returns supported list of Domain for Severity and Keypwords list.
 * @param iListSev
 *			input Severity list.
 * @param iListKwrd
 *			input keywords list.
 * @param oDomains
 *			output list of Domains.
 */
  void GetDomainNames(const CATListOfCATUnicodeString& iListSev ,const CATListOfCATUnicodeString& iListKwrd, CATListOfCATUnicodeString& oDomains);
/**
 * Returns supported list of KeyWords for Severity and dmomain list.
 * @param iListSev
 *			input Severity list.
 * @param iListDom
 *			input domain list.
 * @param oKeyWords
 *			output list of KeyWords.
 */
  void GetKeyWordsNames(const CATListOfCATUnicodeString& iListSev, const CATListOfCATUnicodeString& iListDom,CATListOfCATUnicodeString& oKeyWords);

/**
 * Returns all information for an error.
 * @param iErrorId
 *			Identificator of the error.
 * @param oSev
 *			Severity for this error [1-3].
 * @param oDomain
 *			Domain for this error.
 * @param opdm
 *			PDM availablility for this error.<ul>
 *                      <br>= 0 : available
 *                      <br>= 1 : not available</ul>
 * @param oKeyWords
 *			list of KeyWords for this error.
 */
//  void GetInfo(CATUnicodeString ErrorId, CATUnicodeString & oSev, CATUnicodeString & oDomain , CATUnicodeString & opdm , CATListOfCATUnicodeString & oKeyWord) ;
  void GetInfo(CATUnicodeString ErrorId, int & oSev, CATUnicodeString & oDomain , int & opdm , CATListOfCATUnicodeString & oKeyWord) ;
/**
 * Returns supported list of severeties for domain and keywords list.
 * @param iListDom
 *			Input selected domain list
 * @param iListKwrd
 *			Input selected keywords list
 * @param oSevereties
 *			Output severety list
 */
  void GetSeveretyNames(const CATListOfCATUnicodeString& iListDom ,const CATListOfCATUnicodeString& iListKwrd,CATListOfCATUnicodeString& oSevereties);  
 /**
 * Filters the main static lists on the basis of Admin Error File
 * @param iAllButMode
 *			Input all but mode of the admin file
 * @param iAdminErrorList
 *			Input external errors list
 */
  void FilterMainListsBasedOnAdmFile(const int & iAllButMode, const CATListOfCATUnicodeString & iAdminErrorList);  
/**
 * Filters the main static lists on the basis of PDM type - File TST or VPM
 * @param iPDM
 *			input PDM type 
 */
  void FilterMainListsBasedOnPDMType(const CATUnicodeString & iPDM);
  /**
 * Provides the domain name and the level of the domain (1 to 4) for a particular rule code
 * @param iErrorCode
 *		The error code whose domain na dlevel are to be retreived
 * @param oDomainName
 *		The domain name for the error code
 * @param oLevel
 *		The level of the domain
 */
  HRESULT GetDomainAndLevelfromError(CATUnicodeString iErrorCode, CATUnicodeString & oDomainName, int & oLevel);
  
  private :
   int AreAllListsValid(CATUnicodeString* PDM=NULL);
   void SplitKeyWords(const CATUnicodeString & iKeywrdString, CATListOfCATUnicodeString & oKeyWords);
   int AreErrorsAvailable(const int & iSev,const CATUnicodeString & iDom,const CATUnicodeString & iKwrd);  
   CATListOfCATUnicodeString ErrorCode ;
//   CATListOfCATUnicodeString ErrorR20x ;
   CATListOfInt    ErroriSev ;
   CATListOfInt    ErrorFBDI ;
   CATListOfInt    ErrorVPLM ;
   CATListOfCATUnicodeString ErrorDomain ;
   CATListOfCATUnicodeString ErrorKeyWord;
  
} ;
#endif
