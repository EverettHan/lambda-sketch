//===================================================================
// COPYRIGHT Microsoft 2011/02/07
//===================================================================
// CATAdapterPLMCompassLegend.cpp
// Header definition of class CATAdapterPLMCompassLegend
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2011/02/07 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATAdapterPLMCompassLegend_H
#define CATAdapterPLMCompassLegend_H

#include "UIModelInterfaces.h"
#include "CATIPLMCompassLegend.h"
#include "CATUnicodeString.h"
#include "CATString.h"
#include "CATAfrColor.h"
//-----------------------------------------------------------------------

class ExportedByUIModelInterfaces CATAdapterPLMCompassLegend: public CATIPLMCompassLegend
{
  CATDeclareClass;

public:

    // Standard constructors and destructors
    // -------------------------------------
    CATAdapterPLMCompassLegend ();
    virtual ~CATAdapterPLMCompassLegend ();

   /**
    * Get item label
    */
    virtual HRESULT GetLabel( CATUnicodeString &oLabel ) ;

   /**
    * Get item tooltip
    * the real tool tip displayed will contain the label and the tool tip given by this method
    */
    virtual HRESULT GetTooltip( CATUnicodeString &oTooltip );

   /**
    * @return The introspectable provider in charge of returning the tooltip 
    * content's data block. 
    */
    virtual CATISYPIntrospectableProvider_var GetTooltipProvider();

   /**
    * Get the facet containint the current property
    * 
    * @param opBUFacet [out, CATBaseUnknown#Release]
    *         the facet containing this property
    *
    * @Return
    *         S_OK: the facet is defined
    *         E_FAIL: otherwise
    */
    virtual HRESULT GetFacet(CATBaseUnknown *&opBUFacet);

   /**
    * Get default item color
    */
    virtual HRESULT GetDefaultColor( unsigned char &oRed, unsigned char &oGreen, unsigned char &oBlue ) ;

   /**
    * Get item color
    */
    virtual HRESULT GetColor( unsigned char &oRed, unsigned char &oGreen, unsigned char &oBlue ) ;

   /**
    * Change item color
    */
    virtual HRESULT SetColor( unsigned char iRed, unsigned char iGreen, unsigned char iBlue ) ;

   /**
    * Get default item color
    */
    virtual HRESULT GetDefaultColor( unsigned char &oRed, unsigned char &oGreen, unsigned char &oBlue, unsigned char &oT );

   /**
    * Get item color
    */
    virtual HRESULT GetColor( unsigned char &oRed, unsigned char &oGreen, unsigned char &oBlue, unsigned char &oT );

   /**
    * Change item color
    */
    virtual HRESULT SetColor( unsigned char iRed, unsigned char iGreen, unsigned char iBlue, unsigned char iT );

  /**
    * Item selected
    */
    virtual void OnSelect( void ) ;

   /**
    * GetCheckState
    */
    virtual HRESULT GetCheckState(CATBoolean & oCheckState)  ;

   /**
    * GetValue
    */
    virtual HRESULT GetValue(CATUnicodeString & oStringValue, float & oFloatValue) ;

   /**
    * GetCount
    */
    virtual HRESULT GetCount(int &oCountValue);

   /**
    * OnUserCheck
    */
    virtual HRESULT OnUserCheck(const CATBoolean & iNewCheckState) ;

   /**
    * OnTagUnset
    */
    virtual HRESULT OnTagUnset();
    
   /**
    * OnLabelPropertyClick
    */
    virtual HRESULT OnLabelPropertyClick();

   /**
    * OnLabelPropertyDoubleClick
    */
    virtual HRESULT OnLabelPropertyDoubleClick();

   /**
    * OnShadingPropertyClick
    */
    virtual HRESULT OnShadingPropertyClick();

   /**
    * Retrieve list of sub-properties for this property
    * @param oListProperty the list of properties (objects implementing CATIPLMCompassLegend
    */
    virtual HRESULT GetRefinementSubProperties(CATListPtrCATBaseUnknown &oListProperty);

    virtual HRESULT GetExpandStatus(CATBoolean &oExpandStatus);
    virtual HRESULT SetExpandStatus(CATBoolean iExpandStatus);

   /**
    *
    * <br><b>Role</b>: When the user interacts with the expander
    * @param iNewExpandStatus: the new expand status obtained
    * <br><code>TRUE</code> the user has expanded, otherwise, the user has collapsed.
    * @return
    * <dl>
    * <dt><code>S_OK</code> <dd>
    * <dt><code>E_FAIL</code> <dd>
    * </dl>
    */
    virtual HRESULT OnUserExpand(const CATBoolean & iNewExpandStatus);

   /**
    *
    * <br><b>Role</b>: When the user interacts with the editor
    * @param iusNewEdtValue: the new editor value
    * @return
    * <dl>
    * <dt><code>S_OK</code> <dd>
    * <dt><code>E_FAIL</code> <dd>
    * </dl>
    */
    virtual HRESULT OnEditorValidation(const CATUnicodeString &iusNewEdtValue);

    virtual HRESULT GetEditorValue(CATUnicodeString &ousEdtValue);

    // used for slider mode
    virtual HRESULT GetMinMaxAuthorizedEditorValue(int &oMinEdtValue, int &oMaxEdtValue);
    virtual HRESULT OnEditorValidation(int iNewIntValue);
    virtual HRESULT GetEditorValue(int &oIntEdtValue);

   /**
    *
    * <br><b>Role</b>: Returns the style of the legend to display (Combination of styles)
    * @return
    * Style of the legend
    */
    virtual CATLegendStyle GetLegendStyle();
    virtual CATLegendType GetLegendType();

   /**
    * DEPRECATED
    */
    virtual HRESULT GetRangeValues(CATUnicodeString &oMinRange, CATUnicodeString &oMaxRange);
   /**
    * DEPRECATED
    */
    virtual HRESULT OnRangeEditorValidation(const CATUnicodeString &iusNewMinEdtValue, const CATUnicodeString &iusNewMaxEdtValue);

   /**
    * Get string range values
    * args could be NULL if not yet valuated
    */
    virtual HRESULT GetRangeStringValues(CATLegendOperator &oMinOperator, CATUnicodeString *&opMinVal, CATLegendOperator &oMaxOperator, CATUnicodeString *&opMaxVal);
    virtual HRESULT OnRangeStringValidation(CATLegendOperator iMinOperator, CATUnicodeString *ipusNewMinValue, CATLegendOperator iMaxOperator, CATUnicodeString *ipusNewMaxValue);

   /**
    * Get range values with CATTime, only for legend with LegendType=LegendDate
    * method should return NULL pointer if not yet valuated
    */
    virtual HRESULT GetRangeTimeValues(CATLegendOperator &oMinOperator, CATTime *&opMinDate, CATLegendOperator &oMaxOperator, CATTime *&opMaxDate);
    virtual HRESULT OnRangeTimeValidation(CATLegendOperator iMinOperator, CATTime *ipNewMinDate, CATLegendOperator iMaxOperator, CATTime *ipNewMaxDate);

   /**
    * Get double range values
    * args could be NULL if not yet valuated
    * MinOperator can be equal to : LegendEqualOp, LegendGreaterOp, LegendGreaterEqOp
    * MaxOperator can be equal to : LegendEqualOp, LegendLessOp, LegendLessEqOp
    */
    virtual HRESULT GetRangeDoubleValues(CATLegendOperator &oMinOperator, double *&opMinVal, CATLegendOperator &oMaxOperator, double *&opMaxVal);
    virtual HRESULT OnRangeDoubleValidation(CATLegendOperator iMinOperator, double *ipusNewMinValue, CATLegendOperator iMaxOperator, double *ipusNewMaxValue);

   /**
    * Get int range values
    * args could be NULL if not yet valuated
    * MinOperator can be equal to : LegendEqualOp, LegendGreaterOp, LegendGreaterEqOp
    * MaxOperator can be equal to : LegendEqualOp, LegendLessOp, LegendLessEqOp
    */
    virtual HRESULT GetRangeIntValues(CATLegendOperator &oMinOperator, int *&opMinVal, CATLegendOperator &oMaxOperator, int *&opMaxVal);
    virtual HRESULT OnRangeIntValidation(CATLegendOperator iMinOperator, int *ipusNewMinValue, CATLegendOperator iMaxOperator, int *ipusNewMaxValue);

    virtual HRESULT GetIcon(CATUnicodeString &oIconNamePath);

    virtual HRESULT SendRefinementUpdateNotification(int iRefreshType);

    virtual CATUnicodeString GetLabel();
    virtual void SetLabel(const CATUnicodeString &iusLabel);
    virtual CATUnicodeString GetTooltip();
    virtual void SetTooltip(const CATUnicodeString &iusTooltip);
    virtual CATAfrColor GetColor();
    virtual void SetColor(const CATAfrColor &iColor);

  private:
    // Copy constructor and equal operator
    // -----------------------------------
    CATAdapterPLMCompassLegend (CATAdapterPLMCompassLegend &);
    CATAdapterPLMCompassLegend& operator=(CATAdapterPLMCompassLegend&);

    CATUnicodeString _usLabel;
    CATUnicodeString _usTooltip;
    CATAfrColor      _Color;
};
//-----------------------------------------------------------------------
#endif

