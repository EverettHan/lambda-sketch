//===================================================================
// COPYRIGHT Dassault Systemes 2017/11/15
//===================================================================
// CATAsyncTaskStatistics.cpp
// Header definition of class CATAsyncTaskStatistics
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2017/11/15 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATAsyncTaskStatistics_H
#define CATAsyncTaskStatistics_H

#include "CATAsyncTasksPlatform_NG.h"
#include "CATAsyncStatistics.h"
#include "CATOmxKeyString.h"
#include "CATOmxSet.h"
#include "CATUuid.h"

class ExportedByCATAsyncTasksPlatform CATAsyncTaskStatistics : public CATAsyncStatistics
{
public:
  CATAsyncTaskStatistics();
  CATAsyncTaskStatistics(const CATUnicodeString& iTaskName, const CATOmxKeyString& iTaskType);
  virtual ~CATAsyncTaskStatistics();

  virtual CATUnicodeString GetName() const;
  virtual HRESULT GetJson(CATOmxJsonObject& oStatistics);
  virtual HRESULT AddStatistics(CATAsyncStatistics& iStatistics);

  void NotifyTaskScheduled();
  void NotifyTaskStarted();
  void NotifyTaskFinished();

  CATUuid GetTaskId();
  void SetTaskId(const CATUuid& iTaskId);

  CATUuid GetBuilderId();
  void SetBuilderId(const CATUuid& iBuilderId);

  CATTime GetScheduledTime();
  CATLONG64 GetScheduledTimeMs();

  CATTime GetStartTime();
  CATLONG64 GetStartTimeMs();

  CATTime GetEndTime();
  CATLONG64 GetEndTimeMs();

  CATLONG64 GetProcessingElapseMs();
  void AddProcessingElapseMs(CATLONG64 iElapse); // May be called several times

protected:
  CATAsyncTaskStatistics (CATAsyncTaskStatistics &);
  CATAsyncTaskStatistics& operator=(CATAsyncTaskStatistics&);

  CATUnicodeString _TaskName;
  CATOmxKeyString _TaskType;

  CATUuid _TaskId;
  CATUuid _BuilderId;

  CATTime _ScheduledTime;
  CATLONG64 _ScheduledTimeMs;
  CATTime _StartTime;
  CATLONG64 _StartTimeMs;
  CATTime _EndTime;
  CATLONG64 _EndTimeMs;

  CATLONG64 _ProcessingElapseMs;
};

#endif
