// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATStatementHandler_PLMIDList.h
// Define the CATITemplateStatementHandler interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  May 2007  Creation: Code generated by the CAA wizard  HSU
//===================================================================
#ifndef CATStatementHandler_PLMIDList_H
#define CATStatementHandler_PLMIDList_H
/**
* @level Private
* @usage U1
*/
#include "CATStatementHandlerAdapter.h"

#include "CATPLMQLCPPParser.h"

#include "CATPLMID.h"
#include "CATLISTV_CATPLMID.h"
#include "CATPLMIDToCEStampMap.h"
#include "CATLISTV_CATPLMCEStamp.h"

/**
* Statement Handler to provide easy PLMID filling into PLMQL statements.
*
* example for an Open query:
*   CATPLMIDs IDList;
*   CATUnicodeString plmql = "SELECT T0.PLMID FROM PLMProductDS/PLMProductDS T0 WHERE T0.PLMID IN [";
*   for (int i=1; i<=Selection.Size(); i++ )
*   {
*      CATPLMID tmpID = Selection.GetPLMID(i);
*      IDList.Append (tmpID);
*      if (i>1)
*        plmql.Append (",");
*      plmql.Append ("?plmid:");
*      CATUnicodeString tmp;
*      tmp.BuildFromNum (i);
*      plmql.Append (tmp);
*      plmql.Append ("?");
*   }
*   plmql.Append ("];");
* 
*   CATITemplatePLMQLbnfStatement *oStatement = NULL;
*   CATPLMQLbnfService::CreateTemplatePLMQLStatement(&plmql, &oStatement); 
*   CATStatementhandler_PLMIDList SHdlr (IDList); 
*   CATIPLMCompRecordReadSet *oRecordSet = NULL;
*   oStatement->Execute (&SHdlr, &oRecordSet);
*/
class ExportedByCATPLMQLCPPParser CATStatementHandler_PLMIDList: public CATStatementHandlerAdapter
{
  CATDeclareClass;
public:

  CATStatementHandler_PLMIDList (const CATPLMIDToCEStampMap& iIdToCes);

  /**
  * Constructs a statement handler based on a PLMID list only.
  */
  CATStatementHandler_PLMIDList (const CATPLMIDs iIDList);

  virtual ~CATStatementHandler_PLMIDList ();

  /**
  * Returns automatically a PLMID of the list.
  */
  virtual HRESULT GetPLMIdFor(int & iPlaceHolderIndex, CATPLMTypeId & iPLMTypeId, CATPLMID & oValue);

  /**
  * Returns automatically a Cestamp of the list.
  */
  virtual HRESULT GetCEStampFor(int & iPlaceHolderIndex, CATPLMCEStamp & oValue);

private:
  CATPLMIDs _IDList;
  CATLISTV( CATPLMCEStamp ) _CesList;
};

//------------------------------------------------------------------

#endif
