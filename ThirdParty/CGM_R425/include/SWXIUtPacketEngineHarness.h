//===================================================================
// COPYRIGHT Dassault 2011/04/19
//===================================================================
// SWXIUtPacketEngineHarness.cpp
// Header definition of class SWXIUtPacketEngineHarness
//===================================================================
//
// Usage notes:
// A handler interface for cases where someone needs to asynchronously
// notify a runing command/operation of a change to the packet data.
// For example, from notification or callback code. 
//
//===================================================================
//  2011/04/19 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef SWXIUtPacketEngineHarness_H
#define SWXIUtPacketEngineHarness_H

#include "CATBaseUnknown.h"
#include "SWXUtBasePacket.h"
#include "SWXUtMacForOverride.h"
#include "SWXUtParameterReason.h" //SWXUtParameterReason
#include "SWXBaseUiEnums.h" //for SWXUiNotifyMode

class CATCommand;
class CATCommandHeader;
class CATPathElement;
class CATString;
class CATUnicodeString;
class CATVidWidget;
class SWXIUiComponent_var;
class SWXUiInteractionContext;
class SWXUiIxComponent;
class SWXUiIxInteraction;
class SWXUtPacket;
class SWXUtPacketEngine;

typedef int SWXUtPacketTimestamp_t;

extern ExportedBySWXUtBasePacket  IID IID_SWXIUtPacketEngineHarness ;

//
// Please don't extend this without review from the SWX systems team - HFS
// (there's probably a better solution!)
//
class ExportedBySWXUtBasePacket SWXIUtPacketEngineHarness : public CATBaseUnknown
{
	CATDeclareInterface;

public:

	// Not good stuff...
	virtual void NotifyValueChanged(SWXIUiComponent_var iSourceComponent, enum SWXUiNotifyMode iChange) = 0;
	virtual void SendUpdateToBoundComponents(SWXIUiComponent_var iSourceComponent, SWXUtPacket* iPacket, SWXUtPacketTimestamp_t iTimestamp, SWXUtParameterReason iReason) = 0;

	virtual void OnPushPacket(SWXUtPacket * iPacket) = 0;	
	virtual void OnRemoveComponent(SWXIUiComponent_var iComponent) = 0;

	virtual SWXUiInteractionContext* GetIxContext() = 0;

	virtual CATString GetName() = 0;
	virtual SWXUtPacketEngine * GetEngine() = 0;
	virtual SWXUiIxInteraction * GetInteraction() = 0;

	virtual CATPathElement* GetActiveContext() = 0;
	virtual void DoOK() = 0;

	// HFS these shouldn't be here. Ought to be refactored but no time right now. 
	virtual CATCommandHeader * GetCommandHeader() = 0;
	virtual void SetIncrementalUndo(const CATUnicodeString& iSourceIx) = 0;
	virtual void RegisterForUserAssistance(const CATUnicodeString & iXMLFileName, const CATUnicodeString & iName, CATVidWidget * iWidget,SWXUiIxComponent * ipComp) = 0;
	virtual void UnRegisterForUserAssistance(SWXUiIxComponent * ipComp) = 0;
	virtual void AddCommandDependency(SWXUiIxInteraction* iParentCommand, CATCommand* iChildCommand) = 0;
	virtual void AutoRequestSelectionFocus(bool iDoAdvanceNow = true) = 0;


};

//-----------------------------------------------------------------------
CATDeclareHandler( SWXIUtPacketEngineHarness, CATBaseUnknown );

#endif
