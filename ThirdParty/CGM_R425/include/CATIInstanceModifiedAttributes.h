// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATIInstanceModifiedAttributes.h
// Define the CATIInstanceModifiedAttributes interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Apr 2007  Creation: Code generated by the CAA wizard  TVQ
//===================================================================
#ifndef CATIInstanceModifiedAttributes_H
#define CATIInstanceModifiedAttributes_H

#include "CATLifSpecs.h"
#include "CATListOfCATUnicodeString.h"
#include "CATBaseUnknown.h"
#include "CATBoolean.h"
#include "CATListValCATIType.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATLifSpecs IID IID_CATIInstanceModifiedAttributes;
#else
extern "C" const IID IID_CATIInstanceModifiedAttributes ;
#endif

//------------------------------------------------------------------

/**
* Interface to retrieve modified attributes during a customization rule execution
* It is only implemented by some volatile objets implemeting CATIInstance. Even if this object implements the interface
* it is possible that it does not support modified attributes management (this has a CPU cost)
*/
class ExportedByCATLifSpecs CATIInstanceModifiedAttributes: public CATBaseUnknown
{
  CATDeclareInterface;

  public: 

    /**
	 * Retrieves the list of attributes modified during a customization rule execution.
	 * This list does not contain attributes valuated but not modified because their value was the same
	 * @param oList
	 * the list of modified attributes. This list is emptied at the beginning of the method. At the end of the call
	 * the internal list is emptied (further calls will retrieve an empty list)
	 * @param iFlush
	 * Flushes all the memory if true. Keep the list if FALSE. We recommend strongly to put FALSE and Flush with the dedicated method when you want
	 * @return
	 * S_OK if the instance supports modified attributes management, E_FAIL otherwise
    */
	virtual HRESULT GetModifiedAttributes(CATListOfCATUnicodeString &oList,const CATBoolean iFlush = TRUE) = 0;

    /**
	 * Remove modified tag on an attribute.
	 * @param iAttributeName
	 * name of the attribute
	 * @return
	 * S_OK if the attribute has been found and tagged as un modified.
	 * S_FALSE if the attribute was not found
	 * E_FAIL if the attribute does not manage modified attributes
     */
  	 virtual HRESULT RemoveModifiedTagOnAttribute(const CATUnicodeString &iAttributeName) = 0;
 
	/**
	 * Retrieves the list of extensions added during a customization rule execution.
 	 * @param oList
	 * the list of added extensions. This list is emptied at the beginning of the method. At the end of the call
	 * the internal list is emptied (further calls will retrieve an empty list)
	 * @param iFlush
	 * Flushes all the memory if true. Keep the list if FALSE. We recommend strongly to put FALSE and Flush with the dedicated method when you want
	 * @return
	 * S_OK if the instance supports modified attributes management, E_FAIL otherwise
     */
	 virtual HRESULT GetAddedExtensionTypes (CATLISTV(CATIType_var) &oList,const CATBoolean iFlush = TRUE) = 0;
 
	/**
	 * Retrieves the list of attributes added during a customization rule execution.
	 * @param oList
	 * the list of added attributes. This list is emptied at the beginning of the method. At the end of the call
	 * the internal list is emptied (further calls will retrieve an empty list)
	 * @param iFlush
	 * Flushes all the memory if true. Keep the list if FALSE. We recommend strongly to put FALSE and Flush with the dedicated method when you want
	 * @return
	 * S_OK if the instance supports modified attributes management, E_FAIL otherwise
     */
	 virtual HRESULT GetAddedAttributes(CATListOfCATUnicodeString &oList,const CATBoolean iFlush = TRUE) = 0;

	/**
	 * Retrieves the list of attributes suppressed during a customization rule execution.
	 * @param oList
	 * the list of suppressed attributes. This list is emptied at the beginning of the method. At the end of the call
	 * the internal list is emptied (further calls will retrieve an empty list)
	 * @param iFlush
	 * Flushes all the memory if true. Keep the list if FALSE. We recommend strongly to put FALSE and Flush with the dedicated method when you want
	 * @return
	 * S_OK if the instance supports modified attributes management, E_FAIL otherwise
     */
	virtual HRESULT GetSuppressedAttributes(CATListOfCATUnicodeString &oList,const CATBoolean iFlush = TRUE) = 0;

 
	/**
	 * Retrieves the list of extensions suppressed during a customization rule execution.
	 * @param oList
	 * the list of suppressed extensions. This list is emptied at the beginning of the method. At the end of the call
	 * the internal list is emptied (further calls will retrieve an empty list)
	 * @param iFlush
	 * Flushes all the memory if true. Keep the list if FALSE. We recommend strongly to put FALSE and Flush with the dedicated method when you want
 	 * @return
	 * S_OK if the instance supports modified attributes management, E_FAIL otherwise
     */
	 virtual HRESULT GetSuppressedExtensionTypes (CATLISTV(CATIType_var) &oList,const CATBoolean iFlush = TRUE) = 0;
 
	 /** 
	  * Flushes the memory of the modifications performed on the proxy.<br>
	  */
	 virtual void Flush() = 0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------

#endif
