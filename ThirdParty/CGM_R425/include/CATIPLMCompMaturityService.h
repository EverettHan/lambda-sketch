// COPYRIGHT Dassault Systemes 2003
//===================================================================
//
// CATIPLMCompMaturityService.h
// Define the CATIPLMCompMaturityService interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Dec 2003  Creation: Code generated by the CAA wizard  jvm
//===================================================================
/**
* @level Protected
* @usage U3
*/
#ifndef CATIPLMCompMaturityService_H
#define CATIPLMCompMaturityService_H

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"
#include "CATBoolean.h"
#include "CATCollec.h"

class CATLISTV(CATPLMID);
//class CATLISTV(CATPLMMaturityInfo);
class CATLISTP(CATPLMMaturityInfo);
class CATIPLMCompApplyEventTransaction;

class CATPLMID;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMCompMaturityService;
#else
extern "C" const IID IID_CATIPLMCompMaturityService ;
#endif

/**
 * @level Protected
 * @usage U3
 */

//------------------------------------------------------------------

/**
 * Interface to retrieve informations on maturity status of plm objects or applying events on them.
 * Interface belonging to the Component services.<br>
 * To retrieve a valid pointer on this interface, use the static method @href CATPLMComponentServices#GetPLMMaturityService .<br>
 * Use @href CATPLMMaturityInfo to browse outputs.
 *
 */
class ExportedByCATPLMServicesItf CATIPLMCompMaturityService: public CATBaseUnknown
{
  CATDeclareInterface;
  
public:

/**
 * Creates an ApplyEvent transaction to manage the sending of maturity events.
 * 
  *	@param  iTransactionName
  *			The transaction name. It can be NULL. This name can be used by error software to index the error stack (see CATIPLMErrorStack.h)
 * @param oApplyEventTransaction [out, CATBaseUnknown#Release]
 *   The created transaction.
  *	@param  iTransactionComment
  *			A comment for the transaction. Used mainly in log.
  *	@param  iAction
  *			Used for change management, an action can be required for some elements of the transaction.
 */
  virtual HRESULT CreateApplyEventTransaction ( CATUnicodeString *iTransactionName, 
                                                CATIPLMCompApplyEventTransaction ** oApplyEventTransaction,
                                                CATUnicodeString *iTransactionComment = NULL,
                                                CATPLMID *iAction = NULL) = 0;

/**
 * Retrieve maturity informations of a plm object list.
 *
 * @param iObjList [in]
 *   The list of identifiers of plm objects on which maturity information is requested.
 * @param oMaturityInfo [out]
 *   The retrieved informations, order may differ from iObjList, use @href CATPLMMaturityInfo#GetPLMID .
 * @param iNoEventList [in]
 *   The flag to control if the service will retrieve the list of possible event from the current state or not.<br>
 *   TRUE (Default) - The event list is not retrieved,  @href CATPLMMaturityInfo#GetEventList will return an empty list.<br>
 *   FALSE - The event list is added and can be readed with @href CATPLMMaturityInfo#GetEventList .
 * @return
 *   <dl>
 *     <dt>S_OK</dt><dd>No error occured during request.</dd>
 *     <dt>E_FAIL</dt><dd>Failure of the query.</dd>
 *   </dl>
 */
  virtual HRESULT GetMaturityInfo ( const CATLISTV(CATPLMID)      & iObjList, 
                                    CATLISTP(CATPLMMaturityInfo)  & oMaturityInfo,
                                    CATBoolean                    iNoEventList = TRUE) = 0;

};

//------------------------------------------------------------------

#endif
