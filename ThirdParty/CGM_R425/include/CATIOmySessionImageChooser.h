/* -*-c++-*- */

/**
 * @level Protected
 * @usage U4 CATOmySessionImageChooserAdaptor
 */

// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATIOmySessionImageChooser.h
// Define the CATIOmySessionImageChooser interface
//
//===================================================================
//
// Interface dedicated to Session Image user choice
//
// Realises the interactive or batch user choice for a Session Image
// to be opened and/or used by the current V5 PLM Session
//
//===================================================================
//  Mar 2007  Creation: Code generated by the CAA wizard  vcs
//===================================================================
#ifndef CATIOmySessionImageChooser_h
#define CATIOmySessionImageChooser_h

/**
* Interface dedicated to Session Image user choice.  
* <br><b>Role:</b> Realises the interactive or batch user choice for a Session Image
* <br> to be opened and/or used by the current V5 PLM Session.
*/

#include "CATBaseUnknown.h"
#include "CATOMYBaseSession.h"

class CATListPtrCATOmySessionImageDescriptor;
class CATIOmySessionImageSelection;

#ifndef LOCAL_DEFINITION_FOR_IID
  extern ExportedByCATOMYBaseSession IID IID_CATIOmySessionImageChooser;
#else
  extern "C" const IID IID_CATIOmySessionImageChooser;
#endif



class ExportedByCATOMYBaseSession CATIOmySessionImageChooser : public CATBaseUnknown
{
  CATDeclareInterface;

public :

	/**
	* Chooses an existing Session Image in the current V5 PLM session context. 
	* <br><b>Role:</b> Chooses a Session Image to be opened and/or used 
	* <br> in the current V5 PLM interactive or batch session context.
	* <br> This image is to be selected among all those given as input by the component handling
	* <br> the session images life cycle, called Session Image Manager or SIM, that invokes the image choice when required.
	* <br> After a choice has been done, the selected image is to be returned to the SessionImage manager,
	* <br> using @href CATIOmySessionImageSelection#SelectImage, to perform the image opening or use.
	* <br> 
	* @param iImagesList
	*      the list of CATOmySessionImageDescriptor handles on existing images
	* <br> - This list MUST contain at least a handle on the empty image that is systematically generated
	* <br>	 at the beginning of this current session by the SIM
	* <br> - This list contains also the eventual images of the finished sessions matching the user connection profile      
    * <br> Do never keep or delete a pointer in this list
	* @param iImageOpener
    *      the handle on the SIM sub-component able to open and use a given image, when choosen.
	* <br> the @href CATIOmySessionImageSelection#SelectImage method MUST be called on iImageOpener 
	* <br> at the end of the image choice process, to allow the choosen image processing by the SIM: 
	* <br> This can be done 
	* <br>    - just before returning ChooseImage method when the selection can be entirely performed here
	* <br>    - At the end of the command processing the selection and launched by ChooseImage, otherwise
    * <br> Do not release the pointer
	* @return
	*		 S_OK : successfully ended
	* <br> E_FAIL : invalid image list format / invalid selection / a software error occured
	*/

  virtual HRESULT ChooseImage(const CATListPtrCATOmySessionImageDescriptor & iImagesList, CATIOmySessionImageSelection * iImageOpener)=0;
};

#endif
