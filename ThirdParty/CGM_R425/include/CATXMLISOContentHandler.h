// COPYRIGHT Dassault Systemes 2011
//===================================================================
//
// CATXMLISOContentHandler.h
// Header definition of CATXMLISOContentHandler
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Mar 2011  Creation: Code generated by the CAA wizard  tzw
//===================================================================
#ifndef CATXMLISOContentHandler_H
#define CATXMLISOContentHandler_H

#include "CATVisInteropXMLMeshV6.h"
#include "CATSAXDefaultHandler.h"
#include "CATISAXContentHandler.h"
#include "CATUnicodeString.h"

#include "CAT3DRep.h"
#include "CATMathPointf.h"
#include "CATMathVectorf.h"

class CATSGV6XMLContentHandler;
class CATVizXMLISOStreamOptions;
class CATVizXMLISOStreamer;
class CATRep;
class CATSGV6Attribute;

typedef enum _XMLISOTag
{
   XMLISOBag,
   XMLISOMesh,
   XMLISOText,
   XMLISOGAS,
   XMLISOUnknown
} XMLISOTag;


class ExportedByCATVisInteropXMLMeshV6 CATXMLISOContentHandler: public CATSAXDefaultHandler
{
   CATDeclareClass;

public:

   // Standard constructors and destructors
   // -------------------------------------
   CATXMLISOContentHandler();
   CATXMLISOContentHandler(CATVizXMLISOStreamOptions * iStreamOptions);
   virtual ~CATXMLISOContentHandler ();

   virtual HRESULT StartElement( const CATUnicodeString & iURI,
                                 const CATUnicodeString & iLocalName, 
                                 const CATUnicodeString & iQualifiedName, 
                                 const CATISAXAttributes_var & iAttributes);

   virtual HRESULT EndElement(   const CATUnicodeString & iURI, 
			                        const CATUnicodeString & iLocalName, 
			                        const CATUnicodeString & iQualifiedName);

   virtual HRESULT Characters(   const CATUnicodeString & iCharacters);

   CATRep * GetResult();

protected:

   void     PushRep(CATRep * rep);
   CATRep * PopRep();
   CATRep * GetCurrentRep();
   
   void PushContext(XMLISOTag iTag);
   XMLISOTag PopContext();
   inline XMLISOTag GetCurrentContext();

   void PushAttributes();
   void PopAttributes();

   // iType :
   //   - 0 ==> Fill
   //   - 1 ==> Line
   //   - 2 ==> Point
   CATSGV6Attribute * GetCurrentAttribute(unsigned int iType);
   void SetCurrentAttribute(CATSGV6Attribute * iAtt, unsigned int iType);
   
   void ComputeBE(CAT3DRep & iRep);

   HRESULT StartBag(const CATISAXAttributes_var & iAttributes);
   HRESULT EndBag();

   HRESULT StartNodeSGV6(const CATISAXAttributes_var & iAttributes);
   HRESULT EndNodeSGV6();

   HRESULT StartMatrix(const CATISAXAttributes_var & iAttributes);
   HRESULT EndMatrix();

   // graphic attributes
   HRESULT StartFillStyle(const CATISAXAttributes_var & iAttributes);
   HRESULT StartLineStyle(const CATISAXAttributes_var & iAttributes);
   HRESULT StartPointStyle(const CATISAXAttributes_var & iAttributes);
   //unsigned int GetLineType(CATUnicodeString & iString);


   // effects
   HRESULT StartAppearance(const CATISAXAttributes_var & iAttributes);

   // translation, scaling and rotation
   HRESULT EndTranslation();
   HRESULT EndScaling();
   HRESULT EndAngle();
   HRESULT EndRotationAxis();
   HRESULT EndOrigin();
   HRESULT EndDirection();
   
   float          _rotationAngle;
   CATMathVectorf _rotationAxis;
   CATMathPointf  _rotationOrigin;

   CATSGV6Attribute *** _stackAttributes;
   unsigned int _stackAttSize;
   unsigned int _stackAttPos;

   CATVizXMLISOStreamOptions  * _options;
   CATVizXMLISOStreamer       * _streamer;

   CATRep ** _stack;
   unsigned int _stackSize;
   unsigned int _stackPos;

   XMLISOTag * _context;
   unsigned int _contextSize;
   unsigned int _contextPos;
   
   CATUnicodeString _buffer;

   CATISAXContentHandler * _delegate;
   CATSGV6XMLContentHandler * _meshContentHandler;

private:

   // Copy constructor and equal operator
   // -----------------------------------
   CATXMLISOContentHandler (CATXMLISOContentHandler &);
   CATXMLISOContentHandler& operator=(CATXMLISOContentHandler&);

};


inline XMLISOTag CATXMLISOContentHandler::GetCurrentContext()
{
  if (!_contextPos) return XMLISOUnknown;

  return _context[_contextPos-1];
}

#endif
