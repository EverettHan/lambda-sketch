// COPYRIGHT Dassault Systemes 2003
//===================================================================
//
// CATPLMDomain.h
// Header definition of CATPLMDomain
//
//===================================================================
//
// Usage notes:
// provides access to the object types managed by the provider
//
//===================================================================
//  May 2003  Creation: Code generated by the CAA wizard  jvm
//===================================================================
/**
* @level Private
* @usage U1
*/
#ifndef CATPLMDomain_H
#define CATPLMDomain_H

#include "CATPLMServicesItf.h"
#include "CATPLMBaseObject.h"
#include "CATPLMOmxCollections.h"

class CATUnicodeString;
class CATString;
class CATListPtrCATPLMType;
class CATPLMType;
class CATIPLMProviderDesc;

class VPMIDicPackage;

/**
* A domain is a way to federate and specified the type. 
* The notion may be not significant for a given provider an empty Id and Alias will be provide as output to the GatId and GetAlias methods.
* The provider should keep in session a pointer to a CATPLMDomain object in order to avoid heavy server exchanges.
*/
class ExportedByCATPLMServicesItf CATPLMDomain: public CATPLMBaseObject
{
  CATDeclareClass;

public:

  // Standard constructors and destructors
  // -------------------------------------
  CATPLMDomain (CATString *iDomainId,CATUnicodeString *iAlias, CATIPLMProviderDesc * iProvider);
  CATPLMDomain (VPMIDicPackage * iPackage, CATIPLMProviderDesc * iProvider);
  virtual ~CATPLMDomain ();

  ULONG __stdcall AddRef();
  ULONG __stdcall Release();

  /**
  * Add a Type inside the domain
  * @param iType [in, CATBaseUnknown#Release]
  *    The CATPLMType Object.
  */
  HRESULT AddType(CATPLMType* ipType);

  /**
  * Returns the List of Types inside the domain
  *
  * if isCheckVisibilityActivated == FALSE,
  * we are able to find VPMInstance and VPMReference on PLMCORE metadata
  * we are able to find all types in LPABASTRACT metadata
  */
  HRESULT ListTypes ( CATListPtrCATPLMType **oType , CATBoolean isCheckVisibilityActivated = FALSE ) ;

  /**
  *	Returns the Type for the given Id
  * @param iId
  *    The type Id.
  * @param oType [out, CATBaseUnknown#Release]
  *    The CATPLMType Object.
  */
  HRESULT GetType ( CATString * iId, CATPLMType **oType,CATBoolean isFilteringOnV2TypeApplied=TRUE) ;

  /**
  *	Returns the Type in the given index inside the domain
  * @param iIndex
  *    The index inside the domain.
  * @param oType [out, CATBaseUnknown#Release]
  *    The CATPLMType Object.
  */
  HRESULT GetType ( int iIndex, CATPLMType **oType) ;

  /**
  * Returns the List of Types inside the domain
  *
  * if isCheckVisibilityActivated == FALSE,
  * we are able to find VPMInstance and VPMReference on PLMCORE metadata
  * we are able to find all types in LPABASTRACT metadata
  */
  HRESULT ListTypes ( CATPLMTypeList& olType , CATBoolean isCheckVisibilityActivated = FALSE );

  HRESULT GetType(const CATString& iId, CATPLMType*& opType, CATBoolean isFilteringOnV2TypeApplied = TRUE);

private:
  // Copy constructor and equal operator
  // -----------------------------------
  CATPLMDomain (CATPLMDomain &);
  CATPLMDomain& operator=(CATPLMDomain&);

  CATListPtrCATPLMType *_pListOfType;

  VPMIDicPackage * _pPackage;

  static CATLONG32 _nb;
};

#endif
