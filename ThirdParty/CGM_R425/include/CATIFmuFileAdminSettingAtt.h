// COPYRIGHT Dassault Systemes 2006
//===================================================================
//
// CATIFmuFileAdminSettingAtt.h
// Define the CATIFmuFileAdminSettingAtt interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
/**
 * @level Protected
 * @usage U5
 */
//
//===================================================================
//
//  Jan 2006  Creation: Code generated by the CAA wizard  JBT
//===================================================================
#ifndef CATIFmuFileAdminSettingAtt_H
#define CATIFmuFileAdminSettingAtt_H

#include "CATFmuFileAccessItfCPP.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATFmuFileAccessItfCPP IID IID_CATIFmuFileAdminSettingAtt;
#else
extern "C" const IID IID_CATIFmuFileAdminSettingAtt ;
#endif

class CATSettingInfo;
class CATUnicodeString;

//------------------------------------------------------------------

/**
 * Describe the functionality of your interface here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 */
class ExportedByCATFmuFileAccessItfCPP CATIFmuFileAdminSettingAtt: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    //***********************************************************************
    // Ensure consistency with the IDL interface that will delegate its work
    // Check allowed signatures in System.CATSysSettingController
    //***********************************************************************
    /**
     * Retrieves the UpperCaseMode attribute.
     */
     virtual HRESULT GetUpperCaseMode( CATBoolean&  ioUpperCaseMode ) = 0;

    /**
     * Sets the UpperCaseMode attribute.
     */
     virtual HRESULT SetUpperCaseMode( const CATBoolean&    iUpperCaseMode ) = 0;

    /**
     * Retrieves the state of the UpperCaseMode parameter.
     * @param oInfo
     *	Address of an object CATSettingInfo.
     * @return
     *	<b>Legal values</b>:
     *	<br><tt>S_OK :</tt>   on Success
     * 	<br><tt>E_FAIL:</tt>  on failure
     */
     virtual HRESULT GetUpperCaseModeInfo( CATSettingInfo*    oInfo ) = 0;

    /** 
     * Locks or unlocks the UpperCaseMode parameter.
     * <br><b>Role</b>: Locks or unlocks the UpperCaseMode parameter if the
     * operation is allowed in the current administrated environment. In user mode 
     * this method will always return E_FAIL.
     * @param iLocked
     *	the locking operation to be performed
     *	<b>Legal values</b>:
     *	<br><tt>1 :</tt>   to lock the parameter.
     * 	<br><tt>0:</tt>   to unlock the parameter.
     * @return
     *	<b>Legal values</b>:
     *	<br><tt>S_OK :</tt>   on Success
     * 	<br><tt>E_FAIL:</tt>  on failure
     */
     virtual HRESULT SetUpperCaseModeLock( unsigned char      iLocked ) = 0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------

#endif
