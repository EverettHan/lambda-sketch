/*====================================================
 *  (c) 1999 Dassault Systemes. All rights reserved  =
 *     Generated by CNextBackEnd version 0.1 on      =
 *===================================================*/

#ifndef CATIAGeneralStatisticsSettingAtt_h
#define CATIAGeneralStatisticsSettingAtt_h

#include "CATCORBABoolean.h"
#include "CAT_VARIANT_BOOL.h"

#ifndef ExportedByJS03TRA
#if defined(__JS03TRA)
#define ExportedByJS03TRA DSYExport
#else
#define ExportedByJS03TRA DSYImport
#endif
#include "DSYExport.h"
#endif

#include "CATBSTR.h"
#include "CATIASettingController.h"

extern ExportedByJS03TRA IID IID_CATIAGeneralStatisticsSettingAtt;

class ExportedByJS03TRA CATIAGeneralStatisticsSettingAtt : public CATIASettingController
{
    CATDeclareInterface;

public:

    virtual HRESULT __stdcall get_Activation(unsigned char & oActivatationState)=0;

    virtual HRESULT __stdcall put_Activation(unsigned char iActivationState)=0;

    virtual HRESULT __stdcall get_CumulationMode(unsigned char & oCumulative)=0;

    virtual HRESULT __stdcall put_CumulationMode(unsigned char iCumulative)=0;

    virtual HRESULT __stdcall GetFormatMode(CATLONG flag, unsigned char & oFormatMode)=0;

    virtual HRESULT __stdcall SetFormatMode(unsigned char iFormatMode, CATLONG flag)=0;

    virtual HRESULT __stdcall get_Output(CATBSTR & oOutputType)=0;

    virtual HRESULT __stdcall put_Output(const CATBSTR & iOutputType)=0;

    virtual HRESULT __stdcall get_OutputFile(CATBSTR & oOutputFile)=0;

    virtual HRESULT __stdcall put_OutputFile(const CATBSTR & iOutputFile)=0;

//    virtual HRESULT __stdcall get_MaxSizePerFile(CATLONG & Size)=0;

//    virtual HRESULT __stdcall put_MaxSizePerFile(CATLONG iSize)=0;

//    virtual HRESULT __stdcall get_MaxCopyFile(CATLONG & oNb)=0;

//    virtual HRESULT __stdcall put_MaxCopyFile(CATLONG iNb)=0;

//    virtual HRESULT __stdcall get_BufferSize(CATLONG & oSize)=0;

//    virtual HRESULT __stdcall put_BufferSize(CATLONG iSize)=0;

//    virtual HRESULT __stdcall get_CopyDirectory(CATBSTR & oCopyDir)=0;

//    virtual HRESULT __stdcall put_CopyDirectory(const CATBSTR & iCopyDir)=0;

    virtual HRESULT __stdcall get_THEM(CAT_VARIANT_BOOL & oStatus)=0;

    virtual HRESULT __stdcall put_THEM(CAT_VARIANT_BOOL iStatus)=0;

    virtual HRESULT __stdcall get_TIME(CAT_VARIANT_BOOL & oStatus)=0;

    virtual HRESULT __stdcall put_TIME(CAT_VARIANT_BOOL iStatus)=0;

    virtual HRESULT __stdcall get_CPUS(CAT_VARIANT_BOOL & oStatus)=0;

    virtual HRESULT __stdcall put_CPUS(CAT_VARIANT_BOOL iStatus)=0;

    virtual HRESULT __stdcall get_RTIM(CAT_VARIANT_BOOL & oStatus)=0;

    virtual HRESULT __stdcall put_RTIM(CAT_VARIANT_BOOL iStatus)=0;

    virtual HRESULT __stdcall get_ELPS(CAT_VARIANT_BOOL & oStatus)=0;

    virtual HRESULT __stdcall put_ELPS(CAT_VARIANT_BOOL iStatus)=0;

    virtual HRESULT __stdcall get_UPID(CAT_VARIANT_BOOL & oStatus)=0;

    virtual HRESULT __stdcall put_UPID(CAT_VARIANT_BOOL iStatus)=0;

    virtual HRESULT __stdcall get_USER(CAT_VARIANT_BOOL & oStatus)=0;

    virtual HRESULT __stdcall put_USER(CAT_VARIANT_BOOL iStatus)=0;

    virtual HRESULT __stdcall get_HOST(CAT_VARIANT_BOOL & oStatus)=0;

    virtual HRESULT __stdcall put_HOST(CAT_VARIANT_BOOL iStatus)=0;

    virtual HRESULT __stdcall get_TimeUnit(CATBSTR & iTimeUnit)=0;

    virtual HRESULT __stdcall put_TimeUnit(const CATBSTR & iTimeUnit)=0;

    virtual HRESULT __stdcall get_DateFormat(CATBSTR & iTimeUnit)=0;

    virtual HRESULT __stdcall put_DateFormat(const CATBSTR & iTimeUnit)=0;

    virtual HRESULT __stdcall get_OutputFormat(CATBSTR & iOutputFormat)=0;

    virtual HRESULT __stdcall put_OutputFormat(const CATBSTR & iOutputFormat)=0;

    virtual HRESULT __stdcall SetThematicsParameterLock(CAT_VARIANT_BOOL iLocked)=0;

    virtual HRESULT __stdcall GetThematicsParameterInfo(CATBSTR & AdminLevel, CATBSTR & oLocked, CAT_VARIANT_BOOL & oModified)=0;

    virtual HRESULT __stdcall get_OutputDirectory(CATBSTR & iDirPath)=0;

    virtual HRESULT __stdcall put_OutputDirectory(const CATBSTR & iDirPath)=0;


};

CATDeclareHandler(CATIAGeneralStatisticsSettingAtt, CATIASettingController);

#include "CATBaseDispatch.h"
#include "CATBaseUnknown.h"
#include "CATIABase.h"
#include "CATSafeArray.h"
#include "CATVariant.h"
#include "IDispatch.h"
#include "IUnknown.h"


#endif
