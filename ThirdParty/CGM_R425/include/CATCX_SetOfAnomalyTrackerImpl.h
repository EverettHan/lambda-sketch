
//-----------------------------------------------------------------------------
// COPYRIGHT DASSAULT SYSTEMES 2010
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
//
//	Class		  :		CATCX_SetOfAnomalyTrackerImpl
//	Creation	:		18/08/2010
//
//
//	Synopsis	:	Header class of CATCX_SetOfAnomalyTrackerImpl 
//							Implementation of CATCX_SetOfAnomalyTracker inteerface
//							allows tracking and filtering Output Anomalies 
//	            generated by a Topological Operator from Anomalies belonging 
//							to the Inputs of the Operator
//
//
//	Authors		:  KY1
//-----------------------------------------------------------------------------
//09/11/2010 Class creation
//-----------------------------------------------------------------------------

#ifndef CATCX_SetOfAnomalyCheckImpl_H
#define CATCX_SetOfAnomalyCheckImpl_H


#include "ExportedByCATTopologicalObjects.h"

#include <CATListOfCATCGMObjects.h>
#include <CATListOfCATICGMObjects.h>
#include "CATCGMJournalList.h"
#include "CATListOfCATCGMJournalList.h"
#include "CATCX_SetOfAnomalyTracker.h"
#include   "CATCollec.h"
#include  "ListPOfCATBody.h"
#include  "CATBoolean.h"
#include "CATCGMNewArray.h"
#include "CATCGMCellTrackerImp.h"


class CATCGMObject;
class CATICGMObject;
class CATBody;
class CATLISTP(CATBody);
class CATCGMHashTableOfAnomaly;
class CATCGMOperator;
//class CATCGMCellTrackerImp;
class CATCGMHashTableWithAssoc;
class CATCell;
class CATLISTP(CATCell);
class CATLISTP(CATICGMObject);
class CATCGMOutput;
class CATEdgeCurve;
class CATMacroPoint;
class CATListPtrCATGeometry;
class CATCX_SetOfAnomalies_DynamicFiltering;
//class CATCGMJournalList;
//class CATLISTP(CATCGMJournalList);
//class CATListOfInt;

/**
* @nodoc
*/
/**
*
*/
class ExportedByCATTopologicalObjects CATCX_SetOfAnomalyTrackerImpl : public CATCX_SetOfAnomalyTracker
{
public:

   CATCGMNewClassArrayDeclare;

   /**
   * @nodoc
   */
   /**
   * Default Ctor
   */
   CATCX_SetOfAnomalyTrackerImpl();

   /**
   * @nodoc
   */
   void															SetInputBodies(CATLISTP(CATBody)& iListOfInputBodies);

   /**
   * @nodoc
   */
   void															SetResultBody(CATBody * piResultBody);


   /**
   * @nodoc
   */
   void															SetCGMOperator(CATCGMOperator *piCGMOperator,CATBoolean iRunOpCtxt = TRUE);

   /**
   * @nodoc
   */
   CATCGMOperator*									      GetCGMOperator();

   /**
   * @nodoc
   */
   CATCX_SetOfAnomalies_DynamicFiltering *         Get_SetOfAnomalies_DynamicFiltering();

   /**
   * @nodoc
   */
   int															Find(CATCX_Anomaly *piAnomaly,CATBoolean &ioIsExistInInputHT);

   /**
   * @nodoc
   */ 
   HRESULT											   		Run();

   /**
   * @nodoc
   */
   virtual CATBoolean							      	IsInContextOfRunOperator();  

   /**
   * @nodoc
   */
   void															ReInit(CATCGMOperator * pCGMOperatorContexte = NULL);

   /**
   * @nodoc
   */
   CATBoolean												   IsCheckResultBody();

   /**
   * @nodoc
   */
   short														   IsCheckInput();

   /**
   * @nodoc
   */
   HRESULT													   DisableCompleted(CATBoolean iDesable);

   /**
   * @nodoc
   */
   HRESULT													   CheckInput();

   /**
   * @nodoc
   */
   int															InsertInputAnomaly(CATCX_Anomaly *piAnomaly);

   /**
   * @nodoc
   */
   CATCGMHashTableOfAnomaly*				            Get_HT_InputAnomalies_Operator();

   /**
   * @nodoc
   */
   void															EnableCleanerCheck(CATBoolean iActivate);

   /**
   * @nodoc
   */
   CATBoolean												   IsCleanerCheckAsked();


   /**
   * @nodoc
   */
   void															Dump(CATCGMOutput& os);

   /**
   * @nodoc
   */
   void															SaveOutputBody();

   /**
   * @nodoc
   */
   CATBoolean												   IsClosedConfig();

   /**
   * Dtor
   */
   ~CATCX_SetOfAnomalyTrackerImpl();

private:

   //Data
   CATLISTP(CATBody)							      _ListOfInputBodies;
   CATCGMOperator*								   _pCGMOperator;
   CATBoolean											_InContextOfRunOperator;
   CATBoolean											_IsCheckResultBody;
   CATLISTP(CATICGMObject)				         _ListOfResultBodies;
   CATBody*                                  _CurrentResultBody;     // Result Body Under Completion
   CATLISTP(CATCGMJournalList)		         _ListOfJournalList;
   CATCGMJournalMode                         _JournalListMode;
   CATBoolean											_IsUpwardLinksOfResultBodyDone;
   CATBoolean											_IsUpwardLinksOfInputBodiesDone;
   CATCGMHashTableWithAssoc*			         _HashTableOfOutputCGMObjectWithLink;
   CATCGMHashTableWithAssoc*			         _HashTableOfInputCGMObjectWithLink;
   CATCGMCellTrackerImp*		               _CellTracker;
   CATBoolean											_IsCleanerCheckAsked;

   CATCGMHashTableOfAnomaly*			         _HT_InputAnomalies_Operator;
   CATCGMHashTableOfAnomaly*			         _HT_OutputAnomalies_Operator;
   short													_IsCheckInput;
   CATBoolean											_SkuizeThisOperator;
   CATBoolean											_OldStateOfCellTraker;
   CATBoolean											_SetResultBodyDone;   
   CATBoolean											_InitIsClosedConfig;
   CATBoolean											_IsClosedConfig;
   CATBoolean                               _IsAnomaliesOfInputs;
   CATCX_SetOfAnomalies_DynamicFiltering   *_pSetOfAnomalies_DynamicFiltering;
   CATBoolean                               _NoInputBodies_WithInputObjects;


   //----------------
   //Forbidden Ctors
   //----------------

   /**
   * @nodoc
   */
   CATCX_SetOfAnomalyTrackerImpl(const CATCX_SetOfAnomalyTrackerImpl& piAnomalyCheckImpl);
   CATCX_SetOfAnomalyTrackerImpl& operator=(const CATCX_SetOfAnomalyTrackerImpl& piAnomalyCheckImpl);

   /**
   * @nodoc (Internal methods)
   */
   void CleanHashTableOfInputAndInternalAnomalies();

   /**
   * @nodoc (Internal methods)
   */
   CATBoolean										   TrackAnomalyInInputBodiesWithCellTracker(CATCX_Anomaly  *piAnomalyCheck);
   /**
   * @nodoc (Internal methods)
   */
   CATBoolean										   TrackAnomalyInInputBodiesBySmartMechanism(CATCX_Anomaly *piAnomalyCheck);
   /**
   * @nodoc (Internal methods)
   */
   void													GetAllCurves(CATEdgeCurve *piEdgeCurve,CATListPtrCATGeometry& ioListOfGeometry);
   /**
   * @nodoc (Internal methods)
   */
   void													GetAllPoints(CATMacroPoint *piMacroPoint,CATListPtrCATGeometry& ioListOfGeometry);
   /**
   * @nodoc (Internal methods)
   */
   CATBoolean											GetGeometriesOfListCGMObj(CATLISTP(CATCGMObject)& iListOfObjectsToCheck,CATListPtrCATGeometry& ioListOfGeometryToCheck);
   /**
   * @nodoc (Internal methods)
   */
   void													InitUpwardLinksOfBody(CATBody *piBody, CATCGMHashTableWithAssoc *piHashTableOfCGMObjWithLinks);
   /**
   * @nodoc (Internal methods)
   */
   void													ExtractUpwardCell(CATCGMObject *piCGMObject,CATCGMHashTableWithAssoc *piHashTableOfCGMObjWithLinks, CATLISTP(CATCell)& ioListOfCell);
   /**
   * @nodoc (Internal methods)
   */
   void        								      ExtractDownwardObject(CATCGMObject *pCGMObject,short iObjectType,CATLISTP(CATCGMObject) &ioListOfDownWardObjects);
   /**
   * @nodoc (Internal methods)
   */
   CATCGMCellTrackerImp *				         CreateCellTracker();
   /**
   * @nodoc (Internal methods)
   */
   short												   GetPertinentDimOfCGMObject(CATCGMObject *piCGMObject);
   /**
   * @nodoc (Internal methods)
   */
   CATBoolean										   UpdateIndexList(CATListOfInt &ioListOfIndex,CATListOfInt &iListOfMaxIndex,int iRank);
};

/**
* @nodoc
*/
ExportedByCATTopologicalObjects CATCX_SetOfAnomalyTracker *CreateCATCX_SetOfAnomalyTracker();

#endif

