// COPYRIGHT Dassault Systemes 2005
//===================================================================
//
// CATCGRServices.h
// Header definition of CATCGRServices
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Jun 2005  Creation: Code generated by the CAA wizard  SVQ
//===================================================================
#ifndef CATCGRServices_H
#define CATCGRServices_H

#include "SGInfra.h"

// for CATSettingCgr
#include "CATReadWriteCgr.h"
#include "CATUnicodeString.h"
// for HRESULT
#include "IUnknown.h"
#include <stdlib.h>

class CATRep;
class CATILockBytes2;

/**
  * @nodoc
  * Writes a CGR down to a specified target release version
  * into the given filename
  */
extern ExportedBySGInfra HRESULT CATWriteTargetCGR(CATRep *iRep,
                                                  const char *iFileName,
                                                  CATSettingCgr iSetting,
                                                  CATVizTargetCGR target,
                                                  CATVizCGRAccessMode ioMode = CATVizCGRAccessModeMemory,
                                                  CATColorMap * iColMap = NULL,
                                                  CATCgrHeader * iHeader = NULL);

/**
* @nodoc
* Writes a CGR down to a specified target release version
* into the given filename in CATUnicodeString format
* API written to address ER33925 
*/
extern ExportedBySGInfra HRESULT CATWriteTargetCGR(CATRep *iRep,
  const CATUnicodeString iFileName,
  CATSettingCgr iSetting,
  CATVizTargetCGR target,
  CATVizCGRAccessMode ioMode = CATVizCGRAccessModeMemory, 
  CATBoolean disableNameCheck = FALSE,
  CATColorMap * iColMap = NULL,
  CATCgrHeader * iHeader = NULL);


/**
  * @nodoc
  * Writes a CGR down to a specified target release version
  * into the given buffer. Buffer must be freed by caller. Memory is allocated
  * using malloc
  */
extern ExportedBySGInfra HRESULT CATWriteTargetCGR(CATRep * iRep,
                                                  void * & oBuffer,
					                                   size_t & oLBuffer,
                                                  CATSettingCgr iSetting,
                                                  CATVizTargetCGR target,
                                                  CATVizCGRAccessMode ioMode = CATVizCGRAccessModeMemory,
                                                  CATColorMap * iColMap = NULL,
                                                  CATCgrHeader * iHeader = NULL);

/**
  * @nodoc
  * Writes a CGR down to a specified target release version
  * into the given CATILockBytes2.
  */
extern ExportedBySGInfra HRESULT CATWriteTargetCGR(CATRep *iRep,
                                                  CATILockBytes2 * iLB2,
                                                  CATSettingCgr iSetting,
                                                  CATVizTargetCGR target,
                                                  CATVizCGRAccessMode ioMode = CATVizCGRAccessModeMemory,
                                                  CATColorMap * iColMap = NULL,
                                                  CATCgrHeader * iHeader = NULL);

extern ExportedBySGInfra int CATWriteCgr(CATRep *iRep,
                                        CATStorage *iStorage,
                                        CATSettingCgr iSetting,
                                        CATColorMap *iColMap,
                                        CATVizTargetCGR target,
                                        CATCgrHeader * iHeader = NULL);

extern ExportedBySGInfra int CATWriteCgr(CATRep *iRep,
                                        CATILockBytes2 *ioLB2,
                                        CATSettingCgr iSetting,
                                        CATColorMap *iColMap = NULL,
                                        CATCgrHeader * iHeader = NULL);

extern ExportedBySGInfra CAT3DRep * CATReadCgrWithHeader(CATILockBytes2 *iLB2, CATCgrHeader * & oHeader);

#endif
