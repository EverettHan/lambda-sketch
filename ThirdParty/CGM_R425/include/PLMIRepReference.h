// COPYRIGHT Dassault Systemes 2008
//===================================================================
//
// PLMIRepReference.h
// Define the PLMIRepReference interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Feb 2008  Creation: Code generated by the CAA wizard  LVT
//===================================================================
#ifndef PLMIRepReference_H
#define PLMIRepReference_H

/**
 * @level Protected
 * @usage U3
 */

#include "CATPLMModelerRepInterfaces.h"

// --- System framework
#include "CATBaseUnknown.h"

// --- Forward declaration
class CATListValCATBaseUnknown_var;
class CATUnicodeString;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMModelerRepInterfaces IID IID_PLMIRepReference;
#else
extern "C" const IID IID_PLMIRepReference ;
#endif

//------------------------------------------------------------------

/**
 * Interface dedicated to Representation Reference management.
 *
 * <br><b>Role</b>: This interface provides means to manage a Representation Reference.
 *
 * @href PLMIRepresentationReferenceFactory, PLMIAggregatedRepresentations
 */
class ExportedByCATPLMModelerRepInterfaces PLMIRepReference: public CATBaseUnknown
{
  CATDeclareInterface;

public:

		/**
		 * Retrieves the list of Representation Instances which are instance of the Representation Reference.
     *
		 *  @param oLRepInstances
		 *      The list of Representation Instances. <br>
     *      Output parameter. <br>
     *      This parameter is valuated if method succeeds.
		 *  @return
     *      <code>S_OK</code> if the method succeeds. <br>
     *      <code>S_FALSE</code> if the method succeeds but there is no representation instances of this representation reference. <br>
     *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
     *      <code>E_FAIL</code> otherwise. <br>
		 */
		virtual HRESULT ListInstances(CATListValCATBaseUnknown_var &oLRepInstances) = 0;

    /**
		 * Check if a representation reference is only instantiable once.
     *
		 *  @return
		 *     <code>S_OK</code> if the representation reference is instantiable only once. <br>
		 *     <code>S_FALSE</code> if the representation reference is not instantiable only once. <br>
		 *     <code>E_NOTIMPL</code> if the behavior is not implemented. <br>
		 *     <code>E_FAIL</code> otherwise. <br>
     */
		virtual HRESULT IsOnceInstantiable() = 0;

		/**
	 * Retrieves the type of the main data attached to the Representation Reference.
	 *
	 * @param oType 
	 *		The type of the main data.
	 *
	 * @return
	 *      <ul>
	 *       <li>S_OK if the main data type has been successfully retrieved.</li>
	 *       <li>E_FAIL if an unexpected error occured.</li>
 	 *      </ul>  
	 */
	virtual HRESULT GetMainDataType( CATUnicodeString & oType ) = 0; 

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(PLMIRepReference, CATBaseUnknown);

//------------------------------------------------------------------

#endif
