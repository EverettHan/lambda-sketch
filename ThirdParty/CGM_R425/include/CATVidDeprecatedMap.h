//===================================================================
// COPYRIGHT Dassault Systemes 2015/03/13
//===================================================================
// CATVidDeprecatedMap.cpp
// Header definition of class CATVidDeprecatedMap
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2015/03/13 Creation: Code generated by JRA1/AM2
//===================================================================

#ifndef CATVidDeprecatedMap_H
#define CATVidDeprecatedMap_H

#include "VisuDialog.h"
#include <CATBoolean.h>
#include "CATMathPoint2Df.h"
#include <CATSYPArray.h>
#include <CATVidRectangle.h>
#include <CATString.h>

//-----------------------------------------------------------------------
/**
* @c CATVidDeprecatedMap represent a map of the screen where there are pieces of area marked as deprecated 
* zones with the purpose to know which widgets should be re-drawing. 
*/
class ExportedByVisuDialog CATVidDeprecatedMap
{
public:
  // Standard constructors and destructors
  // -------------------------------------
  CATVidDeprecatedMap ();
  virtual ~CATVidDeprecatedMap ();

  /**
  * This method return true if the rectangle induce by i_position and i_dimension is ubicated inside of any
  * deprecated zone in the deprecated map
  * @param i_dimension the dimension of the deprecated zone we want to check
  * @param i_position the absoulute position of the deprecated zone we want to check
  * @param i_strictComparison if this is true, the method compare that there is a deprecated zone with the same dimension 
  * and psotion, otherwise it compares if there is a deprecated zone that contains the deprecated zone induce by
  * i_position and i_dimension
  * @return True if there is any deprecated zone inside the deprecated map that contains the deprecated zone induce by
  * i_position and i_dimension, otherwise FALSE
  */
  virtual CATBoolean IsZoneMarked(const CATMathPoint2Df &  i_position, const CATMathPoint2Df &  i_dimension, CATBoolean i_strictComparison = FALSE) = 0;

  /**
  * This method return true if the rectangle induce by i_position and i_dimension is intersected by any deprecated zone 
  * in the deprecated map
  * @param i_position the absolute position of the deprecated zone to be checked
  * @param i_dimension the dimension of the deprecated zone to be checked
  * @return true if there is any deprecated zone that intersects the deprecated zone induced by i_position and 
  * i_dimension otherwise return false
  */
  virtual CATBoolean IsIntersected(const CATMathPoint2Df &  i_position, const CATMathPoint2Df &  i_dimension) = 0;
  /**
  * This method create a new deprecated zone inside the deprecated map
  * that represent the location of the widget in the deprecated map
  * @param i_position the absolute position of the deprecated zone to be marked/added
  * @param i_dimension the dimension of the deprecated zone to be added or marked
  * @return true is it has marked the zone, false otherwise
  */
  virtual CATBoolean MarkZone(const CATMathPoint2Df &  i_position, const CATMathPoint2Df &  i_dimension) = 0;


  /**
  * Get number of deprecated zones present in the deprecated map
  * @return the number of deprecated zones in the deprecated map
  */
  virtual int GetNumberOfZones() = 0;

  /**
  * Clear the deprecated map removing all the deprecated zones
  */
  virtual void FlushDeprecatedMap() = 0;

  /**
  * Return a list of rectangles corresponding to the deprecated zones present in the deprecated map
  */
  virtual CATSYPDynArray<CATVidRectangle*> GetList() = 0;

  ///**
  //* Verify the correctness of the deprecated map. One deprecated map is correct if it has not marked the same
  //* area twice or if there is no deprecated zones that are contained by another deprecated zone in the 
  //* deprecated map
  //*/
  //virtual CATBoolean IsValid() = 0;

  ///**
  //* This method make a snapshoot of the current state of the deprecated map, converting that state in a image.
  //* This image is stored in the location setted by the vairable ADL_ODT_OUT
  //* @param i_widthViewer thi is the width of the viewer. It is used to set the width of the image.
  //* @param i_heightViewer this is the height of the viewer. It is used to set the width of the image.
  //*/
  //virtual void CopyToImage(int i_widthViewer, int i_heightViewer,CATString filename)=0;

private:
  // Copy constructor and equal operator
  // -----------------------------------
  CATVidDeprecatedMap (CATVidDeprecatedMap &);
  CATVidDeprecatedMap& operator=(CATVidDeprecatedMap&);

};

//-----------------------------------------------------------------------

#endif
