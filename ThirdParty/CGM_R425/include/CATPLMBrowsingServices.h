// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATPLMBrowsingServices.h
// Define the CATPLMBrowsingServices interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Nov 2005  Creation: Code generated by the CAA wizard  PBV
//===================================================================
/**
* @level Protected
* @usage U1
*/
#ifndef CATPLMBrowsingServices_H
#define CATPLMBrowsingServices_H

#include "CATPLMIdentificationAccess.h"
#include "CATBaseUnknown.h"

class CATIPLMComponent;
class CATUnicodeString;

class ExportedByCATPLMIdentificationAccess CATPLMBrowsingServices
{
public:

  /**
  * Get the PLM Owner
  *  Ownership Navigation
  *
  * @param iComponent
  *        The component to navigate from.
  * @param iIID
  *        The IID associated to the request
  * @param oPPV [out, CATBaseUnknown#Release]
  *        Associated value of owner.
  *
  * @return
  *      E_INVALIDARG  : if input argument is not a component<br>
  *      S_OK          : if request succeeded with owner<br>
  *      E_NOINTERFACE : if owner is found but QueryInterface failed<br>
  *      S_FALSE       : if request succeeded without owner<br>
  *      E_FAIL        : if request failed <br>
  */
  static HRESULT HasPLMOwner(CATBaseUnknown * iComponent, const IID &iIID, void **oPPV);

  /**
  * Is a component in a frozen state
  *
  * @param iComponent
  *        The component
  * @return
  *      S_OK          : if request succeeded and component is frozen<br>
  *      S_FALSE       : if request succeeded and component is not frozen<br>
  *      E_FAIL        : if request failed <br>
  */
  static HRESULT IsFrozen(const CATIPLMComponent & iComponent);
private:
  CATPLMBrowsingServices();
  CATPLMBrowsingServices(const CATPLMBrowsingServices&);
  CATPLMBrowsingServices& operator=(const CATPLMBrowsingServices&);
};

//------------------------------------------------------------------

#endif
