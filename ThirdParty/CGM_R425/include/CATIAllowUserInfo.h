// COPYRIGHT Dassault Systemes 2000
//===================================================================
//
// CATIAllowUserInfo.h
// Define the CATIAllowUserInfo interface
//
//===================================================================
//
//  Nov 2000  Creation: Code generated by the CAA wizard  TDV
//===================================================================

#ifndef CATIAllowUserInfo_H
#define CATIAllowUserInfo_H


/** 
 * @CAA2Level L1
 * @CAA2Usage U3 
 */

/*  CAA2Reviewed by FRH */

#include "CATLifSpecs.h"
#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"
#include "CATListOfCATUnicodeString.h"

extern ExportedByCATLifSpecs IID IID_CATIAllowUserInfo ;

//------------------------------------------------------------------

/**
 * Interface to associate comment and URLs to feature.
 * <b>Role</b>:
 * Objects responding to the CATIAllowUserInfo interface can be enriched with a comment or with URLs.
 * An Example of an URL is http://www.catia.com. It is a string containing an absolute path.
 * It is not managed as a link but as a string.
 * This interface offers the services to manage these informations: add, remove, scan.
 */
class ExportedByCATLifSpecs CATIAllowUserInfo: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

	 /**
	 *	Returns the comment associated to the instance.
	 *  @return the string of the comment. 
	 */
	  virtual CATUnicodeString GetComment() =0;

	 /**
	 * Sets the comment associated to the instance.
	 * @param iComment the string you want to associate as a comment.
	 */
	  virtual void SetComment(const CATUnicodeString &iComment) = 0;

	 /**
	 *	Returns the list of URLs associated to the instance.
	 *  You have to delete the list.
	 *  @return the list of URLs. 
	 */
	  virtual CATListOfCATUnicodeString* GetURLs() = 0;

     /**
	 *	Returns the list of URL's name/title associated to the instance.
	 *  The name of the URL is specified during the association with the @href #SetURL method.
	 *  You have to delete the list.
	 *  @return the list of URL's name. 
	 */
	  virtual CATListOfCATUnicodeString* GetNameOfURLs() = 0;

     /**
	 *	Returns the name of a given url associated to the instance.
	 *  The name of the URL is specified during the association with the @href #SetURL method.
	 *  @param iurl URL of which you want the name. 
	 *  @return the URL's name. 
	 */
	  virtual CATUnicodeString GetNameOfURL(CATUnicodeString &iurl) = 0;

	 /**
	 *	Returns the URL with a given name/title associated to the instance.
	 *  The name of the URL is specified during the association with the @href #SetURL method.
	 *  @param iname the name of the URL you want to get. 
	 *  @return the string URL. 
	 */
	  virtual CATUnicodeString GetURL(CATUnicodeString &iname) = 0;

	 /**
	 *	Adds an URL to the list of URLs associated to the instance.
	 *  @param iurl the URL you want to add into the list of URLs. 
	 *  @param iname the name/title of the new URL. 
	 *  @param iindex the position of the URL in the list of URLs. Its default value 0 puts the URL at end of the list. 
	 */
	  virtual void SetURL(const CATUnicodeString &iurl,const  CATUnicodeString &iname, int iindex = 0) = 0;

	 /**
	 *	Removes an URL associated to the instance.
	 *  @param iurl the URL you want to remove. 
	 */
	  virtual void RemoveURL(const CATUnicodeString &iurl) = 0;

	 /**
	 *	Removes an URL associated to the instance by name.
	 *  The name of the URL is specified during the association with the @href #SetURL method.
	 *  @param iname the name of the URL you want to remove. 
	 */
	  virtual void RemoveURLByName(const CATUnicodeString &iname) = 0;

	 /**
	 *	Removes an URL from the list of URLs associated to the instance by its position.
	 *  @param iposition the index of the URL in the list. 
	 */
	  virtual void RemoveURL(int &iposition) = 0;


  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(CATIAllowUserInfo,CATBaseUnknown);

//------------------------------------------------------------------

#endif
