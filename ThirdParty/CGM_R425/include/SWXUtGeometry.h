//===================================================================
// COPYRIGHT DS SolidWorks 2010/04/19
//===================================================================
// SWXUtGeometry.cpp
// Header definition of class SWXUtGeometry
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2010/04/19 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXUtGeometry_H
#define SWXUtGeometry_H

#include "SWXMathematics.h"
#include "SWXUtSmartBase.h"
#include "SWXUtGeometry_Ptr.h"

class SWXUtPoint;
class SWXUtLine;
class SWXUtPlane;
class SWXUtCSys;
class SWXUtCircle;
class SWXUtCone;
class SWXUtCylinder;
class SWXUtEllipse;
class SWXUtArc;
class SWXUtBSpline;
class SWXUtCylinder;
class SWXUtSphere;
class SWXUtTorus;

//-----------------------------------------------------------------------
class CATMathTransformation;
class SWXUtGeomVisitor;
class CATMathPoint;
class CATMathVector;

class ExportedBySWXMathematics SWXUtGeometry : public SWXUtSmartBase
{
public:
	SWXUtGeometry ();
	virtual ~SWXUtGeometry ();

	virtual void ApplyTransformation(CATMathTransformation const &iTransformation) = 0;
	virtual bool GetTangentAtPoint(CATMathPoint const &iPnt,CATMathVector &oV) const { return false;};
	virtual SWXUtGeometry_Ptr Clone() const = 0;
	virtual bool Accept(SWXUtGeomVisitor *iVis) = 0;
	virtual bool Accept(SWXUtGeomVisitor *iVis) const = 0;

	SWXUtPoint *AsPoint();
	SWXUtLine *AsLine();
	SWXUtCSys *AsCSys();
	SWXUtCircle *AsCircle();
	SWXUtEllipse *AsEllipse();
	SWXUtArc *AsArc();
	SWXUtBSpline *AsBSpline();

	// Surfaces
	SWXUtPlane *AsPlane();
	SWXUtCone *AsCone();
	SWXUtCylinder *AsCylinder();
	SWXUtSphere *AsSphere();
	SWXUtTorus *AsTorus();
};

#endif
