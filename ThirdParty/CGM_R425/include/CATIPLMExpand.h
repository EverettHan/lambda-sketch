// COPYRIGHT Dassault Systemes 2007
//===================================================================
//
// CATIPLMExpand.h
// Define the CATIPLMExpand interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  May 2007  Creation: Code generated by the CAA wizard  jvm
//===================================================================
#ifndef CATIPLMExpand_H
#define CATIPLMExpand_H

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"
#include "CATUuid.h"
#include "CATAsyncTaskID_NG.h"
#undef CATIAsyncTaskCompletionCallBack

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMExpand;
#else
extern "C" const IID IID_CATIPLMExpand ;
#endif

/**
 * @level Protected
 * @usage U3
 */

class CATIPLMQueryFilter;
class CATIPLMExpandResultHandler;
class CATIAsyncTaskCompletionCallBackBase;
class CATIAsyncTaskCompletionCallBack;

/**
 * Interface for Expand. This interface have to be implemented by Provider.
 * @see CATIPLMQueryFilter
 * @see CATIPLMExpandResultHandler
 *
 * This Expand PLMAdapter protocol is an pseudo event-driven push model for processing data with callback mechanism. 
 * It differs from Statement Service because instead of using a callback mechanism, The Statement pattern returns events as requested by the application. 
 * Each call Next() done by application returns Element of message to read. 
 */
class ExportedByCATPLMServicesItf CATIPLMExpand: public CATBaseUnknown
{
  CATDeclareInterface;

public:

  /**
  * Execute an Expand.
  * The Expand protocol is a pseudo event-driven push model for processing data with callback mechanism.
  * You have to implement CATIPLMExpandResultHandler interface. @href CATIPLMExpandResultHandler.
  * @param iFilter
  *    a CATIPLMQueryFilter interface specifying the request.
  * @param iFilter
  *    a CATIPLMExpandResultHandler interface processing the result.
  * @return
  *   Error code of function :
  *   <dl>
  *     <dt>S_OK</dt>
  *     <dd>Expand is successfully.</dd>
  *     <dt>E_FAIL </dt>
  *     <dd>A problem occurs during the query. get further information by using CATIPLMErrorStack</dd>
  *   </dl>
  */
  virtual HRESULT Expand(CATIPLMQueryFilter * iFilter, CATIPLMExpandResultHandler * iExpandHandler) = 0;

  virtual HRESULT Expand(CATAsyncTaskID& oID,  CATIPLMQueryFilter * iFilter,
                          CATIPLMExpandResultHandler * iExpandHandler,
                          CATIAsyncTaskCompletionCallBackBase &iAsyncTaskCompletionCallBack) = 0;
};

#endif
