// COPYRIGHT Dassault Systemes 2004
//===================================================================
//
// CATICkeSolve.h
//
// This interface is implemented on some V5 objects to achieve their 
// solving. It is a complementary interface of the CATISpecObject for
// V5 features. It is implemented on object that do not integrate natively
// in Feature specsmodeler: for example, an optimization or a rulebase
//
//===================================================================
//
// Usage notes:
// This interface is used by the "Update" method in the Knowledge language
// It is not supposed to be used for any other usage
//
// If you implement this method, YOU MUST inherit from CATKweSolveAdapter
//
//===================================================================
//
//  Dec 2004  Creation: Code generated by the CAA wizard  FRH
//===================================================================
#ifndef CATICkeSolve_H
#define CATICkeSolve_H

#include "CATLifSpecs.h"
#include "CATBaseUnknown.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATLifSpecs IID IID_CATICkeSolve;
#else
extern "C" const IID IID_CATICkeSolve ;
#endif

//------------------------------------------------------------------

/**
 * This interface is implemented by some V5 features to achieve their solving
 * <p>
 * It should be implemented only on an extension that inherits from CATKweSolveAdapter
 */
class ExportedByCATLifSpecs CATICkeSolve: public CATBaseUnknown
{
  CATDeclareInterface;

  public:

    /**
     * Solves the object. <br>
	 * If an error occured, you must raise an evaluation error.
	 *
   	 * @return
	 *    E_FAIL if an error occured <br>
	 *    E_ACCESSDENIED if the solve has failed due to licensing considerations<br>
	 *    S_OK if the solve is completed
     */
	virtual HRESULT SolveIt () =0;

	/**
	 * Interrogates the object update status
	 *
	 * @return
	 *     TRUE if the object is up to date
	 *     FALSE otherwise
	 */
	virtual CATBoolean IsSolved() = 0;
};


CATDeclareHandler(CATICkeSolve, CATBaseUnknown) ;

#endif
