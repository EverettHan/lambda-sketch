//===================================================================
// COPYRIGHT Dassault Systemes 2021/02/05
//===================================================================
// VisuProductLoader.cpp
// Header definition of class VisuProductLoader
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2021/02/05 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef IVisuProductLoaderCGMIdSearch_H
#define IVisuProductLoaderCGMIdSearch_H

#include "VisuProductLoaderManager.h"

#include "CATBaseUnknown.h"
#include <vector>


class CATRep;


extern ExportedByVisuProductLoaderManager IID IID_IVisuProductLoaderCGMIdSearch;

/**
* @class IVisuProductLoaderCGMIdSearch identifies in a CGR Scene Graph a rep and eventually its faces.
*
*  - if neither dieze id nor CGM id are provided, the wanted rep is the current one.
*  - if only a dieze id is provided, the wanted rep is the one with the corresponding dieze id.
*  - if only a CGM id is provided, the wanted rep is the one with the corresponding CGM id.
*  - if a dieze id and a CGM id are provided, the wanted rep is the one with the corresponding CGM id
*    nested in the hierarchy of a bagrep identified by the the corresponding dieze id.
*/
class ExportedByVisuProductLoaderManager IVisuProductLoaderCGMIdSearch : public CATBaseUnknown
{
  CATDeclareInterface;
public:

  /** mandatory. set the starting point of the search.
  * It might be the root of a CGR file.
  * @param iCurrentRep the starting point of the search.
  * @return S_OK if operation succeeded
  **/
  virtual HRESULT SetCurrentRep(const CATRep& iCurrentRep) = 0;

  /** get the current rep. the value can change if a search is called.
  * @return the current rep
  **/
  virtual CATRep* GetCurrentRep() const = 0;

  /** get the current rep depth. the value can change if a search is called.
  * @return the current depth
  **/
  virtual size_t GetCurrentRepDepth() const = 0;

  /** starting from the current rep, search the rep corresponding to the CGM id and dieze id (if any)
  * if a rep is found, it becomes the new current rep.
  * @return S_OK if a rep matches the criteria
  **/
  virtual HRESULT Search() = 0;

  /** optional. identify the wanted rep by its dieze id
  * @param iDiezeElem the dieze id of the catrep. a negate value means no value.
  * @return S_OK if operation succeeded
  **/
  virtual HRESULT SetDiezeElem(int iDiezeElem) = 0;

  /** optional. identify the wanted rep by its CGM ID
  * @param iCGMId the CGMID of the catrep. a negate value means no value.
  * @return S_OK if operation succeeded
  **/
  virtual HRESULT SetRepCGMId(int iCGMId) = 0;

  /** Optional. set the CGM ID of faces
  * @param iFaceCGMIds the CGMIDs of the faces.
  * @return S_OK if operation succeeded
  **/
  virtual HRESULT SetFaceCGMIds(const std::vector<int>& iFaceCGMIds) = 0;

  /** after a search, retrieve the index of faces in the rep
  * @return the indexes of faces in the rep.
  **/
  virtual const std::vector<int>& GetFaceIndexes() const = 0;
};

//-----------------------------------------------------------------------
CATDeclareHandler(IVisuProductLoaderCGMIdSearch, CATBaseUnknown);


#endif
