// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// PLMIVODescriptorServices.h
// Define the PLMIVODescriptorServices interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Apr 2009  Creation: Code generated by the CAA wizard  LVT
//===================================================================
#ifndef PLMIVODescriptorServices_H
#define PLMIVODescriptorServices_H

/**
 * @level Protected
 * @usage U3
 */

#include "CATPLMModelerBaseInterfaces.h"
#include "CATBaseUnknown.h"
#include "CATIAV5Level.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMModelerBaseInterfaces IID IID_PLMIVODescriptorServices;
#else
extern "C" const IID IID_PLMIVODescriptorServices;
#endif

// --- Forward declaration
class CATPathElement;
class PLMIOmbVirtualObjectDescriptor_var;

//------------------------------------------------------------------

#define PLMVODescriptorServicesComponent "PLMVODescriptorServicesImpl"

/**
 * Interface providing services related to VO Descriptors.
 *
 * @example
 *  CATOmxSR<PLMIVODescriptorServices> pVODescriptorServices;
 *  CATInstantiateComponent(PLMVODescriptorServicesComponent,IID_PLMIVODescriptorServices,(void**)&pVODescriptorServices)
 *  if(pVODescriptorServices)
 *  {
 *    ...
 *  }
 *
 * @href PLMIOmbVirtualObjectDescriptor
 */
class ExportedByCATPLMModelerBaseInterfaces PLMIVODescriptorServices : public CATBaseUnknown
{
  CATDeclareInterface;

public:
  /**
   *  Creates a VODescriptor from a CATPathElement. <br>
   *  The VODescriptor build can be optionally drived by a given instance or reference that will determine
   *  the wanted subset of path of instances used to build the VODescriptor.
   *
   *  @param   iPathElement
   *    A PathElement.
   *    <ol>
   *      <li>The first object from leaf to top in the path which adheres to @href CATILinkableObject
   *      will be the target object of the VODescriptor returned.</li>
   *      <li>Then the first object from leaf to top in the remaining path which adheres to @href CATIPLMNavRepInstance
   *      will be the Representation Instance of the VODescriptor returned.</li>
   *      <li>And eventually the first object from leaf to top in the remaining path which adheres to
   *      @href CATIPLMNavInstance will be the Instance used to compute the
   *      path of first Instances of the VODescriptor returned, from <tt>ispCursorObjectToBuildVODescriptor</tt> to this Instance.</li>
   *    </ol>
   *  @param   ispCursorObjectToBuildVODescriptor
   *    An <u>Instance</u> that corresponds to an instance of the path OR a <u>Reference</u> which an instance of the path is an instance of. <br>
   *    It will determine the wanted subset of path of instances used to build the VODescriptor. <br>
   *    If NULL_var, the whole path of instances in the path will be used to define the VODescriptor.
   *  @param   ospVODescriptor
   *    The built Virtual Object Descriptor.
   *  @return
   *      An HRESULT value.
   *     <br><b>Legal values</b>:
   *     <dl>
   *     <dt><tt>S_OK</tt></dt>
   *       <dd>The VODescriptor was successfully created.</dd>
   *     <dt><tt>E_FAIL</tt></dt>
   *       <dd>Otherwise.</dd>
   *     </dl>
   */
  virtual HRESULT BuildVODescriptorFromPathElement(CATPathElement& iPathElement, CATBaseUnknown_var& ispCursorObjectToBuildVODescriptor, PLMIOmbVirtualObjectDescriptor_var& ospVODescriptor) = 0;

#ifdef CATIAR425
  [[deprecated("use CATILPVODServices::BuildPathElementFromVOD")]]
#endif
  /**
   * deprecated R425, use CATILPVODServices::BuildPathElementFromVOD
   * @param oPathElement [CATBaseUnknown#Release]
   */
  virtual HRESULT BuildPathElementFromVOD(PLMIOmbVirtualObjectDescriptor_var&  ispVODescriptor, CATPathElement *& oPathElement) = 0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------

CATDeclareHandler(PLMIVODescriptorServices, CATBaseUnknown);

#endif
