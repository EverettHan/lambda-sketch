// COPYRIGHT Dassault Systemes 2003
//===================================================================
//
// CATIPLMQuery.h
// Define the CATIPLMQuery interface
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  May 2003  Creation: Code generated by the CAA wizard  sru
//===================================================================
/**
* @level Protected
* @usage U3
*/
#ifndef CATIPLMQuery_H
#define CATIPLMQuery_H

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"

class CATPLMQueryCondition;
class CATListPtrCATIPLMObjectAttr;
class CATIPLMQueryFilter;
class CATIPLMRecordReadSet;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMQuery;
#else
extern "C" const IID IID_CATIPLMQuery ;
#endif

//------------------------------------------------------------------

/**
 * Interface for query services : select count and execute query 
 * @see CATIPLMQueryFilter
 * @see CATIPLMRecordReadSet
 */
class ExportedByCATPLMServicesItf CATIPLMQuery: public CATBaseUnknown
{
  CATDeclareInterface;
  
public:
  
	/**
	* Get result size for this query.
	* @param iFilter
	*    The query condition expression.
	* @param oNumOfResults
	*    The number of objects returned by the query (if this query was executed).
	*	@return
	*			Error code of function :
	*   <dl>
	*     <dt>S_OK</dt>
	*     <dd>Query is successfully.</dd>
	*     <dt>S_FALSE</dt>
	*     <dd>Query is successfully, but result is only the maximum number of objects.</dd>
	*     <dt>E_FAIL </dt>
	*     <dd>A problem occurs during the query. get further information by using CATIPLMErrorStack</dd>
	*   </dl>
	*/
  virtual HRESULT QueryCount( CATIPLMQueryFilter * iFilter,
                              int               * oNumOfResults ) = 0;
  
	/**
	* Execute a query.
	* @param iFilter
	*    The query condition expression.
	* @param oRecordSet [out, CATBaseUnknown#Release]
	*    CATIPLMRecordReadSet interface provides access to the result . 
	*	@return
	*			Error code of function :
	*   <dl>
	*     <dt>S_OK</dt>
	*     <dd>Query is successfully.</dd>
	*     <dt>E_FAIL </dt>
	*     <dd>A problem occurs during the query. get further information by using CATIPLMErrorStack</dd>
	*   </dl>
	*/
  virtual HRESULT Query( CATIPLMQueryFilter         * iFilter,
                         CATIPLMRecordReadSet      ** oRecordSet) = 0;


};

//------------------------------------------------------------------

#endif
