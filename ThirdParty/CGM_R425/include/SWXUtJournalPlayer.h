//===================================================================
// COPYRIGHT DS SolidWorks Corporation 2012/08/10
//===================================================================
// SWXUtJournalPlayer.cpp
// Header definition of class SWXUtJournalPlayer
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/08/10 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SWXUtJournalPlayer_H
#define SWXUtJournalPlayer_H

#include "CATListOfCATUnicodeString.h"
#include "SWXIUtJournalPlayer.h"
#include "SWXIUtSerializationHelper.h"
#include "SWXUtJournal.h"
#include "SWXIUtJournalPlaybackValidation.h"
#include "SWXUtJournalFixInfo.h"
#include "SWXUtSet.h"
#include "SWXUtVector.h"

class CATApplication;
class CATIDOMNodeList_var;
class CATIDOMElement_var;
class CATSysWeakRef;
class CATSysElapseTime;
class SWXUtCommandActionJournalEntry;
class SWXUtCommandStartJournalEntry;
class SWXUtCustomValidationJournalEntry;
class SWXUtDataModelChangeJournalEntry;
class SWXUtOperationActionJournalEntry;
class SWXUtCommandOKJournalEntry;
class SWXUtJournalEntry;
class SWXUtMassPropertiesValidationJournalEntry;
class SWXUtOperation;
class SWXUtPacketParamStructureChangeJournalEntry;
class SWXUtPacketParamValueChangeJournalEntry;
class SWXUtPacketSelectionChangeJournalEntry;
class SWXUtStructureValidationJournalEntry;
class SWXUtTimeMarkerJournalEntry;
class SWXUtCSOContentJournalEntry;

//-----------------------------------------------------------------------

class ExportedBySWXUtJournal SWXUtJournalPlayer
{
	public:

		SWXUtJournalPlayer();
		virtual ~SWXUtJournalPlayer();

	public:

		HRESULT Initialize();
		void Cleanup();

		void ClearJournal();
		void SubscribeToIdle( bool iSub );
		static void OnIdleCB( CATCommand* iToClient, int iInt, CATCommand* ipCommand );

		void ActivateCommand( CATCommand* iCommand );
		void SetMissingPacketParameters( SWXUtPacket* ioPacket );
		void InitializeCommand( SWXUtOperationContext* iContext, SWXUtPacket* iPacket, CATListOfCATUnicodeString& oChangedParameters );
		void DeleteCommandInitializationSteps();

		void SetFixValidationEntriesInfo( const SWXUtJournalFixInfo& iInfo );

		bool IsPlaying();
		HRESULT PlayJournal( const CATUnicodeString& iFilename, bool iPlayNow = true );
		HRESULT ImportModelAndPlay( const CATUnicodeString& iModelName, const CATUnicodeString& iJournalName );
		void Play();

		int GetJournalVersion() const;

		double GetScreenSize();

		bool GetExitAppOnAssert() const;
		void SetExitAppOnAssert( bool iState );
		void ProcessAssert( const CATUnicodeString& iCondition, const CATUnicodeString& iFile, int iLine, const CATUnicodeString& iMessage );

		void SetPerformanceOn(const bool iValue);
		void SetDefaultTolerance(const double iValue);

		CATULONG64 GetImportTime() const;

		CATUnicodeString GetModelName() const;

		// Interop Fixes
		bool GetAddBodyCountEntries() const;
		bool GetUpdateNodeAttr(CATUnicodeString &oNodeName, CATListOfCATUnicodeString  &oListAttri) ;
		bool GetAddPSFileFromSW() const;

	public:

		static CATUnicodeString GetMassPropCheckEnvVar_Relative_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_Area_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_Volume_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_Mass_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_COG_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_MomentXX_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_MomentYY_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_MomentZZ_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_MomentXY_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_MomentXZ_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_MomentYZ_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_PrincipalMoment1st_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_PrincipalMoment2nd_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_PrincipalMoment3rd_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_IxPrincipalAxis_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_IyPrincipalAxis_Tol();
		static CATUnicodeString GetMassPropCheckEnvVar_IzPrincipalAxis_Tol();

		static CATUnicodeString GetPerformanceCheckEnvVar_MinDuration();
		static CATUnicodeString GetPerformanceCheckEnvVar_Threshold();

	private:

		void InitializeTolerances();

		void ProcessOK( const SWXUtCommandOKJournalEntry* iEntry );
		void ProcessCancel( const SWXUtCommandActionJournalEntry* iEntry );
		HRESULT ProcessChangePacket( const SWXUtPacketParamValueChangeJournalEntry* iEntry, bool iCheckParam );
		void ProcessSelection( const SWXUtPacketSelectionChangeJournalEntry* iEntry );
		HRESULT ProcessPacketStructureChange( const SWXUtPacketParamStructureChangeJournalEntry* iEntry );
		bool ProcessPreviewChanges( const SWXUtOperationActionJournalEntry* iEntry );
		bool ProcessApplyChanges( const SWXUtOperationActionJournalEntry* iEntry );
		bool ProcessStartCommand( SWXUtCommandStartJournalEntry* iEntry );
		void ProcessMassPropertiesValidation( SWXUtMassPropertiesValidationJournalEntry* ioEntry, bool iAttemptRegen );
		void ProcessStructureValidation( SWXUtStructureValidationJournalEntry* ioEntry );
		void ProcessDataModelChange( const SWXUtDataModelChangeJournalEntry* iEntry );
		void ProcessCustomValidation( SWXUtCustomValidationJournalEntry* ioEntry, SWXUtOperationContext* iContext );
		void InsertTimeMarkerAsSubentry(SWXUtCommandStartJournalEntry* iEntry);
		void InsertFinalTimeMarker();
		void ProcessTimeMarker(SWXUtTimeMarkerJournalEntry* iEntry);
		void ProcessPerformansAnalysis();
		void ProcessCSO(const SWXUtCSOContentJournalEntry* iEntry );

		bool FixOperationContext( const SWXUtJournalEntry* iEntry );
		
		HRESULT ReadFromFile( const CATUnicodeString& iPath );
		HRESULT AddChildNodes( const CATIDOMNodeList_var& iChildNodes );
		HRESULT ParseNode( const CATIDOMElement_var& iNode, SWXUtJournalEntry* &oEntry );

		CATUnicodeString GetDoubleDiffString( double iExpected, double iObtained );
		CATUnicodeString GetVectorDiffString( const CATMathVector& iExpected, const CATMathVector& iObtained );

	private:

		SWXUtJournalPlayer( SWXUtJournalPlayer& );
		SWXUtJournalPlayer& operator=( SWXUtJournalPlayer& );

	private:

		SWXIUtJournalPlayer_var mUiHelper;
		SWXIUtSerializationHelper_var mSerializationHelper;

		unsigned int mPos;
		bool mPlaying;

		SWXUtOperationContext* mCurOpContext;

		SWXUtVector<SWXUtJournalEntry*> mJournal;
		SWXUtVector<SWXUtJournalEntry*> mCommandInitialization;
		SWXUtSet<SWXUtJournalEntry*> mCommandInitializationValidationEntries;
		SWXUtVector<SWXUtJournalEntry*> mTimeMarkers;
		SWXUtSet<CATSysWeakRef*> mCommandsToActivate;

		CATApplication* mApp;
		int mIdleEventCallbackID;

		CATUnicodeString mModelName;
		CATUnicodeString mJournalFileName;

		SWXUtJournalFixInfo mFixValidationEntriesInfo;
		int mFixesCount;

		int mVersion;

		SWXIUtJournalPlaybackValidation_var mValidator;

		double mScreenSize;

		bool mExitAppOnAssert;

		bool mPerformanceOn;
		CATSysElapseTime* mTimer;

		double mDefaultTol;
		double mAreaTol;
		double mVolumeTol;
		double mMassTol;
		double mCOGTol;
		double mMomentXXTol;
		double mMomentYYTol;
		double mMomentZZTol;
		double mMomentXYTol;
		double mMomentXZTol;
		double mMomentYZTol;
		double mPrincipalMoment1stTol;
		double mPrincipalMoment2ndTol;
		double mPrincipalMoment3rdTol;
		double mIxPrincipalAxisTol;
		double mIyPrincipalAxisTol;
		double mIzPrincipalAxisTol;

		int mPerformanceCheckMinCommandDuration;
		double mPerformanceCheckThreshold;

		CATULONG64 mImportTime;
};

//-----------------------------------------------------------------------

#endif
