//===================================================================
// COPYRIGHT Dassault Systemes 2013/02/26
//===================================================================
// PLMExchangeExportExperienceDesign.h
// 
//===================================================================
//
// Usage notes: Definition of the different experience object id
// for the exchange export customization.
//
//===================================================================
//  2013/7/24 Creation: Code generated by the 3DS wizard
//===================================================================
#ifndef PLMExportExperienceDesign_H
#define PLMExportExperienceDesign_H

#include "PLMExchangeExperienceDictionary.h"
#include "CATString.h"


// ***********************************************************************************
// *********  Integration into the export experience 
// ***********************************************************************************
// Parameters to set by the integrated custo. ( through method : PLMIExchangeExperienceIntegration::GetParameters)
// ----------------------------------------------------------------------------------

// [Value] 
// Specify the integrated custo availability in term of target and mode.
// A value in the returned list must correspond to "an availability identification int".
// This value must be build from predefined target, mode using binary operator | .
// Example :   PLMExportExperienceTargetGateWay | PLMExportExperienceModeSynchronous | PLMExportExperienceModeAsynchronous
//             The customization will be available for the gateway target with synchronous and asynchronous mode .

// Target
#define PLMExportExperienceTargetPublicSpace         0x01000000
#define PLMExportExperienceTargetFileOnDisk          0x02000000
#define PLMExportExperienceTargetExchangeSpace       0x04000000
#define PLMExportExperienceTargetCommunity           0x08000000
#define PLMExportExperienceTargetGateway             0x10000000
#define PLMExportExperienceTarget3DDrive             0x20000000

// Mode
#define PLMExportExperienceModeSynchronous            0x00000001 
#define PLMExportExperienceModeAsynchronous           0x00000002 
#define PLMExportExperienceModeBackground             0x00000004 

// Parameters the integrated custo can retrieved from the common export custo. ( through method : PLMIExchangeExperienceExecutionHandler::GetExecutionParameter)
// ----------------------------------------------------------------------------------
#define PLMExportExperienceExecutionLocation          0x00000001      // Value : CATUnicodeString ,  Role : Real location where the integrated custo must create its exported files.
#define PLMExportExperienceExecutionFileName          0x00000002      // Value : CATUnicodeString
#define PLMExportExperienceExecutionSelectedIdent     0x00000004      // Value : CATUnicodeString , Role : Used to identify the identification string which was selected when execution was triggered.

// ***********************************************************************************
// *********  Export experience customization 
// ***********************************************************************************

// Used for defining the export experience. 
//========= Execution ===============================
const CATUnicodeString cPLMExportExperienceExecution                             = "PLMExportExperienceDesign.Export";     //  Set by export customization
const CATUnicodeString cPLMExportExperienceSimulate                              = "PLMExportExperienceDesign.Simulate";   //  Set by format customization
const CATUnicodeString cPLMExportExperienceCancel                                =  cPLMExchangeExperienceCancel;               //  Set by export customization

//========= Definition ID==============================
const CATUnicodeString cPLMExportExperienceDefinitionTitle                       = "PLMExportExperienceDesign.Export.Definition";

//========= Status ID ==================================
const CATUnicodeString cPLMExportExperienceStatusExchanged                       = "PLMExportExperienceDesign.Status.Exchanged";
const CATUnicodeString cPLMExportExperienceStatusExcluded                        = "PLMExportExperienceDesign.Status.Excluded";

//========= Options Group ID ===========================
const CATUnicodeString cPLMExportExperienceOptionGroupMand                       = "PLMExportExperienceDesign.OptionGroup.Mandatory";
const CATUnicodeString cPLMExportExperienceOptionGroupOption                     = "PLMExportExperienceDesign.OptionGroup.Option";
const CATUnicodeString cPLMExportExperienceOptionGroupOptionGeneral              = "PLMExportExperienceDesign.OptionGroup.Option.General";
const CATUnicodeString cPLMExportExperienceOptionGroupOptionManifest             = "PLMExportExperienceDesign.OptionGroup.Option.Manifest";
const CATUnicodeString cPLMExportExperienceOptionGroupOptionDocument             = "PLMExportExperienceDesign.OptionGroup.Option.Document";

//========= Options ID =================================
// Mandatory group
const CATUnicodeString cPLMExportExperienceOptionTarget                          = "PLMExportExperienceDesign.Option.Target";
const CATUnicodeString cPLMExportExperienceOptionFormat                          = "PLMExportExperienceDesign.Option.Format";
const CATUnicodeString cPLMExportExperienceOptionMode                            = "PLMExportExperienceDesign.Option.Mode";
const CATUnicodeString cPLMExportExperienceOptionLocation                        = "PLMExportExperienceDesign.Option.Location";
const CATUnicodeString cPLMExportExperienceOptionName                            = "PLMExportExperienceDesign.Option.Name";
const CATUnicodeString cPLMExportExperienceOptionExportType                      = "PLMExportExperienceDesign.Option.ExportType";

// Manifest group
const CATUnicodeString cPLMExportExperienceManifestOptionFrom                    = "PLMExportExperienceDesign.Option.Manifest.From";
const CATUnicodeString cPLMExportExperienceManifestOptionTo                      = "PLMExportExperienceDesign.Option.Manifest.To";
const CATUnicodeString cPLMExportExperienceManifestOptionTitle                   = "PLMExportExperienceDesign.Option.Manifest.Title";
const CATUnicodeString cPLMExportExperienceManifestOptionComment                 = "PLMExportExperienceDesign.Option.Manifest.Comment";
const CATUnicodeString cPLMExportExperienceManifestOptionCopyright               = "PLMExportExperienceDesign.Option.Manifest.Copyright";

// Document group
const CATUnicodeString cPLMExportExperienceOptionDocumentType                    = "PLMExportExperienceDesign.Option.DocumentType";
const CATUnicodeString cPLMExportExperienceOptionDocumentName                    = "PLMExportExperienceDesign.Option.DocumentName";
const CATUnicodeString cPLMExportExperienceOptionDocumentTitle                   = "PLMExportExperienceDesign.Option.DocumentTitle";
const CATUnicodeString cPLMExportExperienceOptionDocumentDescription             = "PLMExportExperienceDesign.Option.DocumentDescription";

// Report group
const CATUnicodeString cPLMExportExpOptionSaveReportLocation                     = "PLMExchangeExperienceReportServices.Option.Report.Location";

//========= Options Value =================================
const CATString cPLMExportExperienceOptionTargetPublicSpace                      =  "PLMExportExperienceDesign.Option.Target.Choice.PublicSpace";
const CATString cPLMExportExperienceOptionTargetFileOnDisk                       =  "PLMExportExperienceDesign.Option.Target.Choice.FileOnDisk";
const CATString cPLMExportExperienceOptionTargetExchangeSpace                    =  "PLMExportExperienceDesign.Option.Target.Choice.ExchangeSpace";
const CATString cPLMExportExperienceOptionTarget3DDrive                          =  "PLMExportExperienceDesign.Option.Target.Choice.3DDrive";
const CATString cPLMExportExperienceOptionTargetCommunity                        =  "PLMExportExperienceDesign.Option.Target.Choice.Community";
const CATString cPLMExportExperienceOptionTargetGateWay                          =  "PLMExportExperienceDesign.Option.Target.Choice.GateWay";
const CATString cPLMExportExperienceOptionModeSynchronous                        =  "PLMExportExperienceDesign.Option.Mode.Choice.Synchronous";
const CATString cPLMExportExperienceOptionModeAsynchronous                       =  "PLMExportExperienceDesign.Option.Mode.Choice.Asynchronous";
const CATString cPLMExportExperienceOptionModeBackground                         =  "PLMExportExperienceDesign.Option.Mode.Choice.Background";

//========= Operation ID =================================
const CATUnicodeString cPLMExportExperienceOperationExchange                     = "PLMExportExperienceDesign.Operation.Exchange";
const CATUnicodeString cPLMExportExperienceOperationExclude                      = "PLMExportExperienceDesign.Operation.Exclude";

//========= System Repository =================================
const CATUnicodeString cPLMExportExperienceSysRepositoryName                     = "PLMExportExperience";
const CATUnicodeString cPLMExportExperienceSysRepository_OptionCollapse_AttrName = "Options.IsCollapsed";

//========= Exchange space related ============================
const CATUnicodeString cPLMExportESReportFolderName                              ="ReportFolder";

//========= Attribute masks ============================
const CATUnicodeString cPLMExportModelAttributeMaskInternal                      ="Export.AttrMask.Internal";
//================ Internal key for Simulate mask ============================
const CATUnicodeString cPLMExportModelAttrMaskInternal_Project                   = "Export.AttrMask.Internal.Project";
const CATUnicodeString cPLMExportModelAttrMaskInternal_RepUsage                  = "Export.AttrMask.Internal.RepUsage";
const CATUnicodeString cPLMExportModelAttrMaskInternal_IsOnceInstantiable        = "Export.AttrMask.Internal_IsOnceInstantiable";

//-----------------------------------------------------------------------

#endif
