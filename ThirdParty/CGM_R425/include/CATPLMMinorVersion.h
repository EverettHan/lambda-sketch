//===================================================================
// COPYRIGHT Dassault Systemes 2018/05/03
//===================================================================
// CATPLMMinorVersion.cpp
// Header definition of class CATPLMMinorVersion
//===================================================================
//
// Usage notes:
// Contains information about a minor version:
//    The object PLMID
//    The minor version data
//
//===================================================================
//  2018/05/03 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CATPLMMinorVersion_H
#define CATPLMMinorVersion_H

#include "CATPLMServicesItf.h"
#include "CATOmxSharable.h"
#include "CATPLMID.h"
#include "CATOmxSR.h"
#include "CATPLMMinorVersionData.h"
#include "CATOmxCollecManager.h"

class ExportedByCATPLMServicesItf CATPLMMinorVersion : public CATOmxSharable
{
public:
  CATPLMMinorVersion(CATPLMID& iPLMID, CATPLMMinorVersionData* ipMinorVersionData);
  virtual ~CATPLMMinorVersion();

  /*
  * Returns the object's PLMID.
  *
  * @param oPLMID
  *   The retrieved component PLMID.
  *
  * @return
  *   <code>S_OK</code> The element is good and no report is associated.
  *   <code>E_FAIL</code> No specific element is associated to this CATPLMMinorVersion object. 
  */
  HRESULT GetPLMID(CATPLMID& oPLMID) const;

  /*
  * Returns the object's PLMID.
  */
  CATPLMID GetPLMID() const;

  /**
  * Returns the minor version informations of the element.
  *
  * @param oMinorInfo [out, CATBaseUnknown#Release]
  *   The minor information found on the source.
  *
  * @return
  *   <code>S_OK</code> if there is a minor information.
  *   <code>E_FAIL</code> if there is not a minor information.
  */
  HRESULT GetMinorVersionData(CATPLMMinorVersionData*& opMinorVersionData);

  /*
  * Returns the minor version informations of the element.
  * The returned ptr may be NULL and must not be released.
  * Ptr is handled by this object and thus must not be stored somewhere else without a proper addref/release.
  */
  CATPLMMinorVersionData* GetMinorVersionData() const;

  /**
  * Returns a value based on the order of minor information.
  *
  * @return
  *   -1 : The current CATPLMMinorVersion info is before the compared one.
  *   0  : The current CATPLMMinorVersion info is equal to the compared one.
  *   +1 : The current CATPLMMinorVersion info is after the compared one.
  */
  int Compare(const CATPLMMinorVersion& iComparedMinorVersion) const;

  /**
  * ComputeHashKey
  */
  unsigned int ComputeHashKey() const;

private:
  CATPLMMinorVersion (CATPLMMinorVersion &);
  CATPLMMinorVersion& operator=(CATPLMMinorVersion&);

  // Attributes
  CATPLMID _PLMID;
  CATOmxSR<CATPLMMinorVersionData> _spMinorVersionData;
};

template<> CATOmxCollecManager& CATOmxDefaultCollecManager<CATPLMMinorVersion*>::manager();

#endif
