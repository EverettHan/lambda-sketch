// COPYRIGHT Dassault Systemes 2009
//===================================================================
//
// PLMIContextualLinksManager.h
// Define the PLMIContextualLinksManager interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Feb 2009  Creation: Code generated by the CAA wizard  LVT
//===================================================================
#ifndef PLMIContextualLinksManager_H
#define PLMIContextualLinksManager_H

/**
 * @level Protected
 * @usage U3
 */

#include "PLMModelerContextualLinkItf.h"
#include "CATBaseUnknown.h"

// --- Forward declaration
class CATListValCATBaseUnknown_var;

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByPLMModelerContextualLinkItf IID IID_PLMIContextualLinksManager;
#else
extern "C" const IID IID_PLMIContextualLinksManager ;
#endif

//------------------------------------------------------------------

/**
 * Interface representing a PLM entity managing contextual links.
 *
 * @href PLMIContextualLink
 */
class ExportedByPLMModelerContextualLinkItf PLMIContextualLinksManager: public CATBaseUnknown
{
  CATDeclareInterface;

public:

  /**
   *  Returns a list of contextual links managed by this plm entity.
   *
   *  @param  oLContextualLinks
   *      A list of contextual links. <br>
   *      Output parameter. <br>
   *      This parameter MUST be provided by caller as empty. This method returns an error otherwise. <br>
   *      This parameter is valuated if method succeeds.
   *  @return 
   *      <code>S_OK</code> if the method succeeds. <br>
   *      <code>S_FALSE</code> if the method succeeds but there is no contextual links now managed by this manager. <br>
   *      <code>E_INVALIDARG</code> if parameters provided are unexpected. <br>
   *      <code>E_FAIL</code> otherwise. <br>
   */
  virtual HRESULT GetContextualLinks(CATListValCATBaseUnknown_var &oLContextualLinks) = 0;

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(PLMIContextualLinksManager, CATBaseUnknown);

//------------------------------------------------------------------

#endif
