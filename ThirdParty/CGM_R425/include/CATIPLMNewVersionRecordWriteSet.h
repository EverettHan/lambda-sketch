// COPYRIGHT Dassault Systemes 2005
//===================================================================
//
// CATIPLMNewVersionRecordWriteSet.h
// Define the CATIPLMNewVersionRecordWriteSet interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Feb 2005  Creation: Code generated by the CAA wizard  jvm
//===================================================================
/**
* @level Protected
* @usage U3
*/
#ifndef CATIPLMNewVersionRecordWriteSet_H
#define CATIPLMNewVersionRecordWriteSet_H

#include "CATPLMServicesItf.h"
#include "CATBaseUnknown.h"
#include "CATPLMQLCommand.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByCATPLMServicesItf IID IID_CATIPLMNewVersionRecordWriteSet;
#else
extern "C" const IID IID_CATIPLMNewVersionRecordWriteSet;
#endif

//------------------------------------------------------------------

class CATIPLMCompNewVersionRecordWrite;
class CATPLMID;

/**
 * CATIPLMRecordWriteSet  manages the list of record (the table of data).
 * The NewVersion message can be seen as a set of Record. <br>

 * The <code>Next(..)</code> method is used to move to the next record of the RecordSet, making the next record become the current record.
 * you will perform newVersion in the current record.
 * When you will be finished, you will Save()/Commit() on CATIPLMTransaction.
 */
class ExportedByCATPLMServicesItf CATIPLMNewVersionRecordWriteSet : public CATBaseUnknown
{
  CATDeclareInterface;

public:
  virtual HRESULT Init(CATPLMQLCommand iCommand) = 0;

  /**
   * Creates the next RecordWrite corresponding to the given CATPlmID, making this record become the current record.
   *	@param  iId
   *			The CATPlmID of the object to modify.
   * @param pWrite [out, CATBaseUnknown#Release]
   *         next record
   * @return
   *   Error code of function :
   *   <dl>
   *     <dt>S_OK</dt>
   *     <dd>successfully</dd>
   *     <dt>E_FAIL </dt>
   *     <dd>A problem occurs during the operation. get further information by using CATIImmErrorStack</dd>
   *   </dl>
   */
  virtual HRESULT Next(const CATPLMID & iId, CATIPLMCompNewVersionRecordWrite **pWrite) = 0;
};

//------------------------------------------------------------------

#endif
