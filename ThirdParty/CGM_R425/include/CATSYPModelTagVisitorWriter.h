//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2012/03/21
//===================================================================
// CATSYPModelTagVisitorWriter.cpp
// Header definition of class CATSYPModelTagVisitorWriter
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2012/03/21 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef SYPDesignerWriter_H
#define SYPDesignerWriter_H

#include <CATSYPModelTagVisitor.h>
#include "CATStyleProcessor.h"
#include <CATIXMLPPWriter.h>
#include "CATSYPArray.h"

class CATSYPModelTag;
class CATSYPTxtErrorReport;
class CATSYPModelTemplate;
class CATSYPModelProperty;
class CATSYPModelBinding;
class CATSYPModelAttachedProperty;
//-----------------------------------------------------------------------

class ExportedByCATStyleProcessor CATSYPModelTagVisitorWriter : public CATSYPModelTagVisitor
{
  FORCE_STACK_ALLOCATION();

public:
    /**writer mode*/
    enum Mode
    {
        /*dump model template completely**/
        Complete = 0,
        /*dump model template partially**/
        light = 1
    };
// Standard constructors and destructors
// -------------------------------------
    CATSYPModelTagVisitorWriter(const CATSYPModelTemplate *i_spModelTemplate, CATIXMLPPWriter_var &i_xmlWriter, CATSYPModelTagVisitorWriter::Mode i_mode = CATSYPModelTagVisitorWriter::Complete);
    ~CATSYPModelTagVisitorWriter();

    void GetReport(CATUnicodeString &i_report);

    int VisitEnter(const CATSYPModelTag &i_tag);
    void Visit(const CATSYPModelTag &i_tag);
    int VisitChildrenEnter(const CATSYPModelContainer &i_tag);
    int VisitChildrenLeave(const CATSYPModelContainer &i_tag);
    int VisitLeave(const CATSYPModelTag &i_tag);

    void WriteTemplate();

    int WriteTag(const CATSYPModelTag &i_tag);
    int WriteProperties(const CATSYPModelTag &i_tag);
    int WriteAttachedProperties(const CATSYPModelTag &i_tag);

    int WriteTriggerProperties(const CATSYPModelTag &i_tag);
    int WriteSetterProperties(const CATSYPModelTag &i_tag);
    int WriteProperty(const CATSYPModelTag &i_tag, CATSYPModelProperty *i_pProperty, const CATUnicodeString &i_propName);
    int WriteBindingProperty(CATSYPModelBinding *i_pBinding, CATSYPModelProperty *i_pProperty);
    int WriteStoryboardProperties(const CATSYPModelTag &i_tag);
    int WriteAnimationProperties(const CATSYPModelTag &i_tag);
    // int WriteBindingProperties(const CATSYPModelTag& i_tag);
    const CATUnicodeString GetPropertyStringValue(const CATUnicodeString &i_ClassName, CATSYPModelProperty *i_pProperty, const CATUnicodeString &i_pPropName);
    const CATUnicodeString GetAttachedPropertyStringValue(const CATUnicodeString &i_ClassName, CATSYPModelAttachedProperty *i_pProperty, const CATUnicodeString &i_pPropName);

    /**
     * proceed to dump left model template into xml style sheet
     */
    void Run();
    /**
     * Dump a part of model template in xml form
     */
    void RunLight(CATSYPModelTag *i_pTag, CATSYPModelTagVisitorWriter::Mode i_mode = CATSYPModelTagVisitorWriter::Complete);

  private:
    // Copy constructor and equal operator
    // -----------------------------------
    CATSYPModelTagVisitorWriter(CATSYPModelTagVisitorWriter &);
    CATSYPModelTagVisitorWriter &operator=(CATSYPModelTagVisitorWriter &);

    CATSYPTxtErrorReport *_pErrorReport;
    CATIXMLPPWriter_var writer;
    CATSYPDynArray<CATSYPModelTag *> _pTagsHierarchyStack;
    // CATSYPDynArray<CATUnicodeString> _sypNameList;
    const CATSYPModelTemplate *_pLeftTemplate;
    int mode;
};

//-----------------------------------------------------------------------

#endif
