//===================================================================
// COPYRIGHT DASSAULT SYSTEMES 2010/12/10
//===================================================================
// CATAdpProtectedCompletionParametersFactory.cpp
// Header definition of class CATAdpProtectedCompletionParametersFactory
//===================================================================
//
// Usage notes: This class is used to create the completion parameters.
// There are preset parameters which can be set.
// Usage is for example : CATAdpProtectedOpener(CATAdpProtectedCompletionParametersFactory::Integrity(), pErrorMonitor)
//
//===================================================================
//  2010/12/10 Creation: Code generated by the 3DS wizard
//===================================================================
/**
* @level Protected
* @usage U1  
*/

#ifndef CATAdpProtectedCompletionParametersFactory_H
#define CATAdpProtectedCompletionParametersFactory_H

#include "CATPLMIntegrationAccess.h"
class CATIAdpProtectedCompletionParameters_var;

//-----------------------------------------------------------------------

/*
* Class to get completion paramaters for @CATAdpProtectedOpener
* <br><b>Role</b>: Provides a @href CATIAdpProtectedCompletionParameters which can be used with the @href CATAdpProtectedOpener
* <ul>
* <li> To process an open, you need this. see @href CATIAdpProtectedCompletionParameters for more options</li>  
* <li> You can then manually set the parameters using the interface @href CATIAdpProtectedCompletionParameters after
* you got the handler</li>
* </ul>
*/
class ExportedByCATPLMIntegrationAccess CATAdpProtectedCompletionParametersFactory
{
public:

/*
* Get completion parameters for a @href CATAdpProtectedOpener which will only do the integrity (no expand)
* <br><b>Role:</b>Will give an handler of a @href CATIAdpProtectedCompletionParameters prebuilt. You can then manually set the parameters.
* using the interface @href CATIAdpProtectedCompletionParameters.
* <li>Open elements passed at input<li>
* <li>Complete with mandatory elements for integrity :<br/>
* Private reps, in case of instance its aggregated reference and it owning reference. In case of port/connection, 
* its aggregating reference</li>
* @return A handler on CATIAdpProtectedCompletionParameters
*/
static CATIAdpProtectedCompletionParameters_var Integrity();

/*
* Get completion parameters for a @href CATAdpProtectedOpener which will expand only the instances and the references, recursively
* <br><b>Role:</b>Will give an handler of a @href CATIAdpProtectedCompletionParameters prebuilt. You can then manually set the parameters.
* using the interface @href CATIAdpProtectedCompletionParameters.
* <li> Open elements passed at input</li>
* <li>Complete with mandatory elements for integrity :<br/>
* Private reps, in case of instance its aggregated reference and it owning reference. In case of port/connection, 
* its aggregating reference and expand elements passed as input with strong relations :<br/>
* PLMCoreInstance, PLMCoreReference</li>
* <li>Expand is recursive on all structure</li>
* @return A handler on CATIAdpProtectedCompletionParameters
*/
static CATIAdpProtectedCompletionParameters_var Navigation();

/*
* Get completion parameters for a @href CATAdpProtectedOpener which will expand only the instances and the references, one level
* <br><b>Role:</b>Will give an handler of a @href CATIAdpProtectedCompletionParameters prebuilt. You can then manually set the parameters.
* using the interface @href CATIAdpProtectedCompletionParameters.
* <li> Open elements passed at input</li>
* <li>Complete with mandatory elements for integrity :<br/>
* Private reps, in case of instance its aggregated reference and it owning reference. In case of port/connection, 
* its aggregating reference and expand elements passed as input with strong relations :<br/>
* PLMCoreInstance, PLMCoreReference</li>
* <li> In case of instance, the aggregated reference is expanded </li>
* <li>Only one level of Expand is done.</li>
* @return A handler on CATIAdpProtectedCompletionParameters
*/
static CATIAdpProtectedCompletionParameters_var OneLevelNavigation();

/*
* Get completion parameters for a @href CATAdpProtectedOpener which will only expand representations 
* <br><b>Role:</b>Will give an handler of a @href CATIAdpProtectedCompletionParameters prebuilt. You can then manually set the parameters.
* using the interface @href CATIAdpProtectedCompletionParameters.
* <li> Open elements passed at input</li>
* <li>Complete with mandatory elements for integrity :<br/>
* Private reps, in case of instance its aggregated reference and it owning reference. In case of port/connection, 
* its aggregating reference andopen aggregated representations :<br/>
* PLMCoreRepInstance, PLMCoreRepReference</li>
* <li> In case of instance, the aggregated reference is expanded </li>
* <li>Only one level of Expand is done.</li>
* @return A handler on CATIAdpProtectedCompletionParameters
*/
static CATIAdpProtectedCompletionParameters_var OneLevelRepresentations();
/*
* Get completion parameters for a @href CATAdpProtectedOpener which will only expand the relations
* <br><b>Role:</b>Will give an handler of a @href CATIAdpProtectedCompletionParameters prebuilt. You can then manually set the parameters.
* using the interface @href CATIAdpProtectedCompletionParameters.
* <li> Open elements passed at input</li>
* <li>Complete with mandatory elements for integrity :<br/>
* Private reps, in case of instance its aggregated reference and it owning reference. In case of port/connection, 
* its aggregating reference and open aggregated relations :<br/>
* PLMConnection, PLMPort</li>
* <li> In case of instance, the aggregated reference is expanded </li>
* <li>Only one level of Expand is done.</li>
* @return A handler on CATIAdpProtectedCompletionParameters
*/
static CATIAdpProtectedCompletionParameters_var OneLevelRelational();
/*
* Get completion parameters for a @href CATAdpProtectedOpener which will expand every component
* <br><b>Role:</b>Will give an handler of a @href CATIAdpProtectedCompletionParameters prebuilt. You can then manually set the parameters.
* using the interface @href CATIAdpProtectedCompletionParameters.
* <li> Open elements passed at input</li>
* <li>Complete with mandatory elements for integrity :<br/>
* Private reps, in case of instance its aggregated reference and it owning reference. In case of port/connection, 
* its aggregating reference and expand elements passed as input with strong relations and weak relations :<br/>
* PLMCoreInstance, PLMCoreReference, PLMCoreRepInstance, PLMCoreRepReference<br/>
* PLMConnection, PLMPort</li>
* <li>Expand is recursive on all structure</li>
* @return A handler on CATIAdpProtectedCompletionParameters
*/
static CATIAdpProtectedCompletionParameters_var Authoring();
/*
* Get completion parameters for a @href CATAdpProtectedOpener which will expand every component
* <br><b>Role:</b>Will give an handler of a @href CATIAdpProtectedCompletionParameters prebuilt. You can then manually set the parameters.
* using the interface @href CATIAdpProtectedCompletionParameters.
* <li> Open elements passed at input</li>
* <li>Complete with mandatory elements for integrity :<br/>
* Private reps, in case of instance its aggregated reference and it owning reference. In case of port/connection, 
* its aggregating reference and expand elements passed as input with strong relations and weak relations :<br/>
* PLMCoreInstance, PLMCoreReference, PLMCoreRepInstance, PLMCoreRepReference<br/>
* PLMConnection, PLMPort</li>
* <li> In case of instance, the aggregated reference is expanded </li>
* <li>Only one level of Expand is done.</li>
* @return A handler on CATIAdpProtectedCompletionParameters
*/
static CATIAdpProtectedCompletionParameters_var OneLevelAuthoring();

/*
* Get completion parameters for a @href CATAdpProtectedOpener which will :
* <li>Open elements passed as input</li>
* <li>Open connexion and ports of ref / rep passed as input</li>
* <li>Rep instance and Rep reference of elements passed as input</li>
* <li>References associated with instances passed as input</li>
* <li>Connexion and ports associated with every reference in the return set</li>
* <br><b>Role:</b>Will give an handler of a @href CATIAdpProtectedCompletionParameters prebuilt. You can then manually set the parameters.
* using the interface @href CATIAdpProtectedCompletionParameters.
* @return A handler on CATIAdpProtectedCompletionParameters
*/
static CATIAdpProtectedCompletionParameters_var AggregatedElements();
};

//-----------------------------------------------------------------------

#endif
