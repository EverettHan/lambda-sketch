//===================================================================
// COPYRIGHT Dassault Systemes 2016/07/21
//===================================================================
// PLMExchangeBBMessage.cpp
// Header definition of class PLMExchangeBBMessage
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2016/07/21 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef PLMExchangeBBMessage_H
#define PLMExchangeBBMessage_H

#include "PLMExchangeGlobalServices.h"

//System 
#include "CATBBMessage.h"         // CATSysCommunication.m
#include "CATUnicodeString.h"
#include "CATBinary.h" 

// CATPLMIdentificationAccess
#include "CATPLMRepositoryName.h"

//-----------------------------------------------------------------------

class ExportedByPLMExchangeGlobalServices PLMExchangeBBMessage: public CATBBMessage
{
   CATDeclareClass;
public:
   	/*
	* Enumerates available control operations
	*/
	enum MessageType
	{
      Unknown,
		Connect,
      SendSessionData,
		StartExecution,
      ExecutionFinished,
      Progression,
      Ack_OK,
      Ack_KO
	};

   enum ExecutionStatus
   {
      UnknownStatus,
      Succeeded,
      Warning,
      Error,
      Abort
   };

   // Standard constructors and destructors
   // -------------------------------------
   PLMExchangeBBMessage ();
   virtual ~PLMExchangeBBMessage ();

   void SetMessageType (const MessageType &iMsgType);
   MessageType GetMessageType();

   void SetExchangeStatus(const ExecutionStatus &iExchStatus);
   ExecutionStatus GetExchangeStatus();

   void SetProgression(const int &iProgression);
   int GetProgression();

   // CATIStreamMsg Interface
   virtual HRESULT UnstreamData  ( void  *iBuffer, uint32  iLen);
   virtual HRESULT StreamData    ( void **oBuffer, uint32 *oLen);
   virtual HRESULT FreeStreamData( void  *iBuffer, uint32  iLen);
   virtual HRESULT SetMessageSpecifications();

private:
   MessageType _msgType ; 
   ExecutionStatus _exchangeStatus;
   int _progress;

   PLMExchangeBBMessage (PLMExchangeBBMessage &);
   PLMExchangeBBMessage& operator=(PLMExchangeBBMessage&);

};

//-----------------------------------------------------------------------

#endif
