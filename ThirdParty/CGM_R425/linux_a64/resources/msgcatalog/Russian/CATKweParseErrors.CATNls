<meta charset="UTF-8"/>
CATCkeBadNbArg1=" неверное количество аргументов в /P1 /P2: /P3 вместо /P4";
CATCkeBadNbArg2=" неверное число аргументов в /P1 /P2";
CATCkeBadKindOfArg1=" Неверный тип номера аргумента /P1 в /P2 /P3 \n",
" (должно быть /P4 вместо /P5)";
CATCkeBadKindOfArg2=" неверный тип номера аргумента /P1 в /P2 /P3 ";
CATCkeBadKindOfArg3=" невозможно сравнить переменную типа /P1 с переменной типа /P2 ";
CATCkeBadKindOfArg4=" невозможно повлиять на переменную типа /P2 в переменной типа /P1. \nМожно использовать синтаксис <set x=y>, если вы намерены работать с приведением типов между 2 переменными  ";
CATCkeBadKindOfArg5=" невозможно выполнить операцию /P1 между переменной типа /P2 и переменной типа /P3 ";
CATCkeBadKindOfArg6=" невозможно выполнить операцию /P1 с переменной типа /P2 ";
CATCkeNonExistingMethod=" Недопустимое использование /P1: /P2";
CATCkeNonExistingMethod2=" Недопустимое использование /P1: /P2 \n(/P1 /P2 существует, но типа /P3 вместо /P4)";
CATCkeInvalidExpression2=" формулу, которая возвращает /P1, нельзя использовать для оценки параметров типа /P2";
CATCkeInvalidExpression=" Недопустимый тип выражения: должно быть /P1";
CATCkeNonExistingType=" Недопустимое имя типа: /P1 ";
CATCkeUndeterminableUnit=" невозможно определить величину /P1";
CATCkeBadType=" тип /P1 не может использоваться для объявления локальной переменной";
CATCkeDoublyDefinedVariable=" переменная /P1 уже определена";
CATCkeParseMultiLevel=" неправильные аргументы: /P1";
CATCkeParseRestrictMethod=" Метод /P1 не авторизован в /P2";
CATCkeParseRestrictFunction=" функция /P1 не может использоваться в контексте /P2";
CATCkeParseRestrictOperator=" оператор /P1 не может использоваться в контексте /P2";
CATCkeParseRestrictKeyword=" ключевое слово /P1 не может использоваться в контексте /P2";
CATCkeParseRestrictType=" тип /P1 не может использоваться в контексте /P2";
CATCkeSyntaxError="синтаксическая ошибка";

ExprIsNotAnOptConstraint="Выражение не является ограничением оптимизации. Оно должно представлять собой логическое выражение.";
ExprIsNotACheck="Выражение не является проверкой. Оно должно представлять собой логическое выражение.";
IncludesDefError="Синтаксическая ошибка в определении включения. Правильный синтаксис: \"Include <Имя библиотеки>;\".";
MissingSemicolonInclude="Отсутствует \";\" в конце определения включения.";
IncludesRetrieveError="Не удалось извлечь включенную библиотеку /P1. Проверьте настройки данных или таблицу ресурсов в текущем контексте.";
IncludesRetrieveErrorTitle="Недействительное включение:";
AlreadyIncludedLibTitle="Библиотека включена несколько раз.";
AlreadyIncludedLib="Библиотека /P1 уже включена под именем /P2. Удалите одно из двух включений.";
InvalidLibName="Библиотека функций /P1 не включена. Проверьте раздел включения своего правила.";
InvalidReusableFunctionName="Функция с именем /P2 не найдена в библиотеке /P1 или имеет несовместимые аргументы. Проверьте библиотеку для такой функции.";
UnprotectedInteger="В объявлении переменной недопустимое имя типа. Чтобы использовать имя типа, начинающееся с целого числа, заключите его в кавычки (например, arc('2DArc'))";

AttributesOnIncompatibleTypes="Атрибут запрошен второй раз в том же объекте, но для другого несовместимого типа. Используйте другую переменную точно такого же типа или функцию, которая извлекает тип динамически (GetAttribute...)";
ExprIsNotAffectationForWithInit="Выражение не содержит простую аффектацию.";
