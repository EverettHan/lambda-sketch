<meta charset="UTF-8"/>
ErrorInApplyAccess="Метод Apply: невозможно интерпретировать /P1.";
ErrorInExtract="Метод Extract: невозможно интерпретировать /P1.";
ErrorInSort="Метод Sort: невозможно интерпретировать /P1.";
ErrorInAdvancedSort="Метод AdvancedSort: невозможно интерпретировать /P1.";
FindError="Ошибка в методе Find.";
FilterError1="Ошибка в методе Filter: первый аргумент (/P1) не является существующим типом";
FilterError2="Ошибка в методе Filter: второй аргумент (/P1) не является синтаксически правильным выражением";
ApplyError1="Ошибка в методе Apply: первый аргумент (/P1) не является существующим типом";
ApplyError2="Ошибка в методе Apply: второй аргумент (/P1) не является синтаксически правильным выражением";
ExtractError1="Ошибка в методе Extract: первый аргумент (/P1) не является существующим типом";
ExtractError2="Ошибка в методе Extract: второй аргумент (/P1) не является существующим типом";
ExtractError3="Ошибка в методе Extract: третий аргумент не может быть пустым. Он должен содержать правило для оценки переменной y на основе переменной x";
SortError1="Ошибка в методе Sort: второй аргумент (/P1) не является существующим типом";
SortError2="Ошибка в методе Sort: третий аргумент (/P1) не является существующим типом";
SortError3="Ошибка в методе Sort: авторизованные значения для первого аргумента (/P1) — это < и >";

SubtractError1="Ошибка в методе Subtract: второй аргумент (/P1) не является существующим типом";
SubtractError2="Ошибка в методе Subtract: третий аргумент (/P1) не является синтаксически правильным выражением";
IntersectError1="Ошибка в методе Intersect: второй аргумент (/P1) не является существующим типом";
IntersectError2="Ошибка в методе Intersect: третий аргумент (/P1) не является синтаксически правильным выражением";
JunctionError1="Ошибка в методе Junction: второй аргумент (/P1) не является существующим типом";
JunctionError2="Ошибка в методе Junction: третий аргумент (/P1) не является существующим типом";
JunctionError3="Ошибка в методе Junction: четвертый аргумент не может быть пустым. Он должен содержать правило, которое оценивается в зависимости от значений x и y в форме x.атрибут == y.атрибут";
JunctionError4="Ошибка в методе Junction: четвертый аргумент (/P1) не является синтаксически правильным выражением";
SplitError1="Ошибка в методе Split: первый аргумент (/P1) не является существующим типом";
SplitError2="Ошибка в методе Split: второй аргумент (/P1) не является существующим типом";
SplitError3="Ошибка в методе Split: третий аргумент не может быть пустым. Он должен содержать правило, которое оценивает переменную y на основе переменной x";
SplitError4="Ошибка в методе Split: третий аргумент (/P1) не является синтаксически правильной программой";
AdvancedSortError1="Ошибка в методе AdvancedSort: первый аргумент (/P1) не является существующим типом";
AdvancedSortError2="Ошибка в методе AdvancedSort: третий аргумент (/P1) не является существующим типом";
AdvancedSortError3="Ошибка в методе AdvancedSort: авторизованные значения для второго аргумента (/P1) — это < и >";
AdvancedSortError4="Ошибка в методе AdvancedSort: четвертый аргумент не может быть пустым. Он должен содержать правило, которое оценивает переменную y на основе переменной x";
AdvancedSortListEmpty="Ошибка в методе AdvancedSort: невозможно выполнить операции, так как один из списков, указанных в аргументе, пуст.";
AdvancedSortDifferentSize="Ошибка в методе AdvancedSort: размеры списков, указанных в аргументе, отличаются.";

FindError1="Ошибка в методе Find: первый аргумент (/P1) не является существующим типом";
FindError2="Ошибка в методе Find: второй аргумент (/P1) не является синтаксически правильным выражением";
SyntaxError="Синтаксическая ошибка произошла на этапе выполнения: ";
SetAttributeDimension="Ошибка в методе SetAttributeDimension: последний аргумент (/P1) не является существующим типом размера";
NewError1="Ошибка в функции new: первый аргумент (/P1) не является существующим типом";
NewError2="Ошибка в функции new: первый аргумент (/P1) не является типом, экземпляр которого можно создать";
NewError3="Ошибка в функции new: невозможно создать объект типа /P1 в объекте /P2 типа /P3";
NewError4="Ошибка в функции new: у вас нет лицензии времени выполнения, чтобы управлять функцией new с помощью данного языка";
ReplaceError1="Ошибка в замене: невозможно выполнить замену, связь типа между замещающим объектом и объектом владельца запрещена. Используйте объект с авторизированной связью типа";
RemoveExtensionError1="Ошибка в функции RemoveExtension: не удается удалить прикладное расширение";
UnableCreate="Невозможно создать динамический атрибут типа /P1";
OperatorPowErrorCase1="Ошибка в операторе ** (основание, взятое по отношению к указанной степени): основание должно быть отличным от нуля, если показатель степени — отрицательное целое число.";
OperatorPowErrorCase2="Ошибка в операторе ** (основание, взятое по отношению у указанной степени): основание должно быть положительным числом, если показатель степени — положительное вещественное число.";
OperatorPowErrorCase3="Ошибка в ** (основание, взятое по отношению к указанной степени): основание должно быть положительным числом (исключая 0), если показатель степени — отрицательное вещественное число.";
ResultOfOperationIsUnset="Результат операции /P1 не задан. Проверьте операцию.";

TraceIncorrectLevel="Неверный уровень трассировки. Уровень должен быть от 1 до 9 (включая 1 и 9).";
TraceToCreateFile="Не удается создать файл /P1.";
TraceUnableToManipulateFile="Не удается выполнить запись в файл /P1.";
TraceUnableToWriteInFile="Не удается выполнить запись в файл /P1. Убедитесь в наличии необходимых прав для этого файла/каталога.";


UnableToAddItemToList="Не удается добавить в список элемент с индексом /P1. Недопустимый объект: убедитесь, что элемент, который вы пытаетесь добавить, существует.";
UnableToAddItemToListBecauseOfIndex="Не удается добавить элемент в список. Индекс /P1 находится вне диапазона (должен быть от 0 до /P2).";

UnableToInsertItemToList="Не удается вставить в список элемент с индексом /P1. Недопустимый объект: убедитесь, что элемент, который вы пытаетесь вставить, существует.";
UnableToInsertItemToListBecauseOfIndex="Не удается вставить в список элемент. Индекс /P1 находится вне диапазона (должен быть в диапазоне от 1 до /P2).";

UnableToAppendItemToList="Не удается добавить элемент в список. Недопустимый объект: убедитесь, что элемент, который вы пытаетесь вставить, существует.";

UnableToSetItemToList="Не удается задать в список элемент с индексом /P1. Недопустимый объект: убедитесь, что элемент, который вы пытаетесь добавить, существует.";
UnableToSetItemToListBecauseOfIndex="Не удается задать в список элемент. Индекс /P1 находится вне диапазона (должен быть в диапазоне от 1 до /P2).";

UnableToRemoveItem="Не удается удалить из списка элемент с индексом /P1.";
UnableToRemoveItemFromListBecauseOfIndex="Не удается удалить из списка элемент. Индекс /P1 находится вне диапазона (должен быть в диапазоне от 1 до /P2).";
UnableToValuateList="Не удается оценить список /P1 по списку /P2.";


UnableToRemoveAllItems="Не удается очистить список.";

ListItemNULL="Элемент списка с индексом /P1 имеет пустое значение.";
ListEmpty="Не удается выполнить операции в списке: список пуст.";

UnableToGetItemIndexOutOfRange="Не удается получить элемент списка. Индекс /P1 находится вне диапазона (должен быть в диапазоне от 1 до /P2).";

UnableToReorder="Не удается переупорядочить элемент с текущим положением /P1 в положение /P2.";
UnableToSwap="Не удается переупорядочить элемент с текущим положением /P1 в положение /P2.";

UnableToCreateList="Не удается создать список.";
UnableToAddItemToNewList="Не удается добавить в новый список элемент с индексом /P1. Недопустимый объект: убедитесь, что элемент, который вы пытаетесь добавить, существует.";
NoItemToAddToNewList="Нет элемента для добавления в новый список.";


SumIsNull="К данной сумме не добавлены элементы. Сумма равна 0.";

ErrorInComputeWrongTypeInItems="Проблема при вычислении операции /P1: элемент /P2 не учтен, так как его тип не /P3.";
ErrorInComputeWrongType="Не удается вычислить /P1: тип /P2 не является ссылочным типом.";
ErrorInComputeCanNotBeEvaluated="Не удается вычислить /P1: невозможно вычислить выражение (проверьте тип или синтаксис).";
BadOperatorInCompute="Оператор /P1 не доступен для метода Compute";
BadReturnedTypeInCompute="Тип /P1 вычисленного значения не является авторизированным типом. В методе Compute вычисленное значение должно быть вещественным числом или строкой.";

BadTypeError="Попытка повлиять на параметр типа /P1, когда ожидается параметр типа /P2";

ObjectModificationInfringement="Изменение объекта /P1 (с помощью атрибута /P2) запрещено в данном контексте правила";

SolveFailed="Не удалось применить метод Update к объекту /P1";
SolveFailedNotImpl="Метод Update не реализован для объекта /P1";

ListAttributesError1="Ошибка в методе ListAttributes: первый аргумент (/P1) не является существующим типом";
AddExtensionError1="Ошибка в методе AddExtension: первый аргумент (/P1) не является существующим типом";
AddExtensionError2="Ошибка в методе AddExtension: первый аргумент (/P1) не является типом, экземпляр которого можно создать";
AddExtensionError3="Ошибка в методе AddExtension: объект /P2 типа /P3 не может быть расширен с помощью типа /P1";
AddExtensionError4="Ошибка в методе AddExtension: у вас нет лицензии времени выполнения для работы с функцией new, используя новый язык";

IntegerOverflowError="Ошибка переполнения целочисленного значения.";
ReadAttributeOnNullObject="Попытка чтения атрибута /P1 в пустой переменной";
WriteAttributeOnNullObject="Попытка записи атрибута /P1 в пустой переменной";

FunctionNotAllowedInBR="Эта функция или метод не разрешены в контексте бизнес-правила";
QueryError1="Ошибка в методе Query: первый аргумент (/P1) не является существующим типом";
QueryError2="Ошибка в методе Query: второй аргумент (/P1) не является синтаксически правильным выражением";
QueryError="Ошибка в методе Query.";
TraceRaised="Возникла трассировка: ";
MessageRaised="Возникло сообщение: ";

IsSupportingError="Ошибка в методе IsSupporting: первый аргумент (/P1) не является существующим типом";
IsASortOfError="Ошибка в методе IsASortOf: первый аргумент (/P1) не является существующим типом";
ValuatePointerError="Ошибка в методе ValuatePointer: третий аргумент (/P1) не является существующим типом";
AccessError="Ошибка в методе Access: второй аргумент (/P1) не является существующим типом";

SetupDataError1="Строка /P1, заданная как идентификатор в функции /P2 в экспрессивном объекте /P3, не верна:\nСистема не смогла получить связанный ресурс";
ARMErrorNoTable="Не удалось найти ресурс /P1, используемый в функции /P2 в экспрессивном объекте /P3,\nтак как отсутствует таблица ресурсов в представлении, содержащем /P3";
ARMErrorResourceNotFound="Ресурс /P1, используемый в функции /P2 в экспрессивном объекте /P3, не удалось найти в таблице ресурсов, определенной в представлении, содержащем /P3";
UnstackError="Не удается деактивировать настроенные ресурсы /P1, поскольку предварительно активированы только /P2. Ничего не было деактивировано.";
AccessResourceBadType="Ошибка в методе AccessResource: второй аргумент (/P1) не является существующим типом";
ImplementsOperation="Ошибка в методе ImplementsOperation: (/P1) не является допустимым именем операции";
LicCheckERR_0001="Лицензия /P1 не предоставлена.";

OpenFilterErrorEmpty="Отфильтрованный контейнер /P1 пуст, поэтому ресурс /P2 не найден.\nВозможно, требуется изменить указанный фильтр.";
ResourceNotFoundInContainer="Невозможно найти ресурс /P1 в контейнере /P2.";
ResourceNotFoundInLocalResourceTable="Невозможно найти ресурс /P1 в таблице локальных ресурсов.";
ResourceNotFoundInDataSetup="Невозможно найти ресурс /P1 в /P2 через настройку данных.";

OpenFilterContainerError="Активированный фильтр не соответствует выбранному контейнеру /P1.\nНеобходимо выбрать фильтр, соответствующий контейнеру.";

TempGeometryInPersistentList="Невозможно добавить элемент в список /P1. Временную геометрию не следует помещать в постоянный список.";

NotAValidYear="В конструкторе даты задан недопустимый год.";
NotAValidMonth="В конструкторе даты задан недопустимый месяц.";
NotAValidDay="В конструкторе даты задан недопустимый день.";
NotAValidDayShort="В конструкторе даты задан недопустимый день для короткого месяца.";
NotAValidDayFeb="В конструкторе даты задан недопустимый день для февраля.";
NotAValidHour="В конструкторе даты и времени задан недопустимый час.";
NotAValidMinute="В конструкторе даты и времени задана недопустимая минута.";
NotAValidSecond="В конструкторе даты и времени задана недопустимая секунда.";
NotAValidDate="В конструкторе даты и времени задана недопустимая дата.";
NotAValidDate2="В конструкторе даты и времени задано недопустимое время.";
RemoveAttribute="Невозможно удалить атрибут /P1 в объекте /P2, так как это не динамически добавленный атрибут.";
AccessFederatedExtensionNotExisting="Невозможно получить доступ к объединенному расширению /P1, так как оно не существует.";
AccessFederatedExtensionNotImpl="Невозможно получить доступ к объединенному расширению /P1, так как это не реализованный атрибут CATIAttributeComputed.";

MatchPatternNotRecognized="Невозможно распознать шаблон /P1 в функции Match.";
SystemInfoNotRecognized="/P1 не является известной информацией о системе.";
PatternRegexError="Шаблон /P1 нельзя компилировать для создания регулярного выражения.";
IndexGroupCaptureError="Индекс вне пределов. Индекс (/P1) должен быть больше или равен 0, а также строго меньше числа групп (/P2).";

CannotInterrogateOnUpdateStatus="Невозможно опросить объект /P1 по статусу обновления.";

EnableErrors="Функция EnableErrors вызвана без соответствующего вызова функции DisableErors";
SilentErrorsMismatch="Функции DisableErrors и EnableErrors вызваны разное число раз.\nЭто могло привести к возникновению ошибок, скрытых для пользователя.";
DebuggerBreakNoDebugger="Функция DebuggerBreak вызвана, но текущий контекст не допускает отладку. Сначала подсоедините отладчик знаний.";

NumbersBetweenWrongNumber="В функции NumbersBetween передано неверное число значений";
NumbersBetweenWrongStep="В функции NumbersBetweenByStep передано неверное значение шага";

InitPersist="Метод инициализации списка может быть вызван только для непостоянных списков";
QuickSet="Недействительный список предоставленных индексов для доступа к элементу списка";

