<meta charset="UTF-8"/>
PLMPipingHVACRacewayIfc.IfcActuator = "Ifc Actuator";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_PredefinedType.Range.Equal.ELECTRICACTUATOR = "Electric actuator";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_PredefinedType.Range.Equal.HANDOPERATEDACTUATOR = "Hand operated actuator";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_PredefinedType.Range.Equal.HYDRAULICACTUATOR = "Hydraulic actuator";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_PredefinedType.Range.Equal.PNEUMATICACTUATOR = "Pneumatic actuator";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_PredefinedType.Range.Equal.THERMOSTATICACTUATOR = "Thermostatic actuator";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcActuator.IfcActuator_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcAirTerminal = "Ifc Air terminal";
PLMPipingHVACRacewayIfc.IfcAirTerminal.IfcAirTerminal_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcAirTerminal.IfcAirTerminal_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcAirTerminal.IfcAirTerminal_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcAirTerminal.IfcAirTerminal_PredefinedType.Range.Equal.DIFFUSER = "Diffuser";
PLMPipingHVACRacewayIfc.IfcAirTerminal.IfcAirTerminal_PredefinedType.Range.Equal.GRILLE = "Grille";
PLMPipingHVACRacewayIfc.IfcAirTerminal.IfcAirTerminal_PredefinedType.Range.Equal.LOUVRE = "Louvre";
PLMPipingHVACRacewayIfc.IfcAirTerminal.IfcAirTerminal_PredefinedType.Range.Equal.REGISTER = "Register";
PLMPipingHVACRacewayIfc.IfcAirTerminal.IfcAirTerminal_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcAirTerminal.IfcAirTerminal_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcAirTerminalBox = "Ifc Air terminal box";
PLMPipingHVACRacewayIfc.IfcAirTerminalBox.IfcAirTerminalBox_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcAirTerminalBox.IfcAirTerminalBox_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcAirTerminalBox.IfcAirTerminalBox_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcAirTerminalBox.IfcAirTerminalBox_PredefinedType.Range.Equal.CONSTANTFLOW = "Constant flow";
PLMPipingHVACRacewayIfc.IfcAirTerminalBox.IfcAirTerminalBox_PredefinedType.Range.Equal.VARIABLEFLOWPRESSUREDEPENDANT = "Variable flow pressure dependant";
PLMPipingHVACRacewayIfc.IfcAirTerminalBox.IfcAirTerminalBox_PredefinedType.Range.Equal.VARIABLEFLOWPRESSUREINDEPENDANT = "Variable flow pressure independant";
PLMPipingHVACRacewayIfc.IfcAirTerminalBox.IfcAirTerminalBox_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcAirTerminalBox.IfcAirTerminalBox_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcAirTerminalTypeEnum.DIFFUSER = "Diffuser";
PLMPipingHVACRacewayIfc.IfcAirTerminalTypeEnum.GRILLE = "Grille";
PLMPipingHVACRacewayIfc.IfcAirTerminalTypeEnum.LOUVRE = "Louvre";
PLMPipingHVACRacewayIfc.IfcAirTerminalTypeEnum.REGISTER = "Register";
PLMPipingHVACRacewayIfc.IfcAirTerminalTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcAirTerminalTypeEnum.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery = "Ifc Air to air heat recovery";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.FIXEDPLATECOUNTERFLOWEXCHANGER = "Fixed plate counter flow exchanger";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.FIXEDPLATECROSSFLOWEXCHANGER = "Fixed plate cross flow exchanger";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.FIXEDPLATEPARALLELFLOWEXCHANGER = "Fixed plate parallel flow exchanger";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.ROTARYWHEEL = "Rotary wheel";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.RUNAROUNDCOILLOOP = "Run around coil loop";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.HEATPIPE = "Heat pipe";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.TWINTOWERENTHALPYRECOVERYLOOPS = "Twin tower enthalpy recovery loops";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.THERMOSIPHONSEALEDTUBEHEATEXCHANGERS = "Thermosiphon sealed tube heat exchangers";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.THERMOSIPHONCOILTYPEHEATEXCHANGERS = "Thermosiphon coil type heat exchangers";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcAirToAirHeatRecovery.IfcAirToAirHeatRecovery_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcAlarm = "Ifc Alarm";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.BELL = "Bell";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.BREAKGLASSBUTTON = "Break glass button";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.LIGHT = "Light";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.MANUALPULLBOX = "Manual pull box";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.SIREN = "Siren";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.WHISTLE = "Whistle";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.RAILWAYCROCODILE = "Railway crocodile";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.RAILWAYDETONATOR = "Railway detonator";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcAlarm.IfcAlarm_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance = "Ifc Audio visual appliance";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.AMPLIFIER = "Amplifier";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.CAMERA = "Camera";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.DISPLAY = "Display";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.MICROPHONE = "Microphone";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.PLAYER = "Player";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.PROJECTOR = "Projector";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.RECEIVER = "Receiver";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.SPEAKER = "Speaker";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.SWITCHER = "Switcher";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.TELEPHONE = "Telephone";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.TUNER = "Tuner";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.RAILWAY_COMMUNICATION_TERMINAL = "Railway communication terminal";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcAudioVisualAppliance.IfcAudioVisualAppliance_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcBoiler = "Ifc Boiler";
PLMPipingHVACRacewayIfc.IfcBoiler.IfcBoiler_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcBoiler.IfcBoiler_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcBoiler.IfcBoiler_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcBoiler.IfcBoiler_PredefinedType.Range.Equal.WATER = "Water";
PLMPipingHVACRacewayIfc.IfcBoiler.IfcBoiler_PredefinedType.Range.Equal.STEAM = "Steam";
PLMPipingHVACRacewayIfc.IfcBoiler.IfcBoiler_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcBoiler.IfcBoiler_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcBurner = "Ifc Burner";
PLMPipingHVACRacewayIfc.IfcBurner.IfcBurner_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcBurner.IfcBurner_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcBurner.IfcBurner_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcBurner.IfcBurner_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcBurner.IfcBurner_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting = "Ifc Cable carrier fitting";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting.IfcCableCarrierFitting_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting.IfcCableCarrierFitting_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting.IfcCableCarrierFitting_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting.IfcCableCarrierFitting_PredefinedType.Range.Equal.BEND = "Bend";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting.IfcCableCarrierFitting_PredefinedType.Range.Equal.CROSS = "Cross";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting.IfcCableCarrierFitting_PredefinedType.Range.Equal.REDUCER = "Reducer";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting.IfcCableCarrierFitting_PredefinedType.Range.Equal.TEE = "Tee";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting.IfcCableCarrierFitting_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCableCarrierFitting.IfcCableCarrierFitting_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCableCarrierFittingTypeEnum.BEND = "Bend";
PLMPipingHVACRacewayIfc.IfcCableCarrierFittingTypeEnum.CROSS = "Cross";
PLMPipingHVACRacewayIfc.IfcCableCarrierFittingTypeEnum.REDUCER = "Reducer";
PLMPipingHVACRacewayIfc.IfcCableCarrierFittingTypeEnum.TEE = "Tee";
PLMPipingHVACRacewayIfc.IfcCableCarrierFittingTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCableCarrierFittingTypeEnum.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment = "Ifc Cable carrier segment";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment.IfcCableCarrierSegment_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment.IfcCableCarrierSegment_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment.IfcCableCarrierSegment_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment.IfcCableCarrierSegment_PredefinedType.Range.Equal.CABLELADDERSEGMENT = "Cable ladder segment";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment.IfcCableCarrierSegment_PredefinedType.Range.Equal.CABLETRAYSEGMENT = "Cable tray segment";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment.IfcCableCarrierSegment_PredefinedType.Range.Equal.CABLETRUNKINGSEGMENT = "Cable trunking segment";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment.IfcCableCarrierSegment_PredefinedType.Range.Equal.CONDUITSEGMENT = "Conduit segment";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment.IfcCableCarrierSegment_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegment.IfcCableCarrierSegment_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegmentTypeEnum.CABLELADDERSEGMENT = "Cable ladder segment";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegmentTypeEnum.CABLETRAYSEGMENT = "Cable tray segment";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegmentTypeEnum.CABLETRUNKINGSEGMENT = "Cable trunking segment";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegmentTypeEnum.CONDUITSEGMENT = "Conduit segment";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegmentTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCableCarrierSegmentTypeEnum.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCableFitting = "Ifc Cable fitting";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_PredefinedType.Range.Equal.CONNECTOR = "Connector";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_PredefinedType.Range.Equal.ENTRY = "Entry";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_PredefinedType.Range.Equal.EXIT = "Exit";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_PredefinedType.Range.Equal.JUNCTION = "Junction";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_PredefinedType.Range.Equal.TRANSITION = "Transition";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_PredefinedType.Range.Equal.FANOUT = "Fan out";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCableFitting.IfcCableFitting_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCableSegment = "Ifc Cable segment";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.BUSBARSEGMENT = "Busbar segment";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.CABLESEGMENT = "Cable segment";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.CONDUCTORSEGMENT = "Conductor segment";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.CORESEGMENT = "Cores egment";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.CONTACTWIRESEGMENT = "Contact wire segment";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.FIBERSEGMENT = "Fiber segment";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.FIBERTUBE = "Fiber tube";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.OPTICALCABLESEGMENT = "Optical cable segment";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.STITCHWIRE = "Stitch wire";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.WIREPAIRSEGMENT = "Wire pair segment";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCableSegment.IfcCableSegment_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcChiller = "Ifc Chiller";
PLMPipingHVACRacewayIfc.IfcChiller.IfcChiller_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcChiller.IfcChiller_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcChiller.IfcChiller_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcChiller.IfcChiller_PredefinedType.Range.Equal.AIRCOOLED = "Air cooled";
PLMPipingHVACRacewayIfc.IfcChiller.IfcChiller_PredefinedType.Range.Equal.WATERCOOLED = "Water cooled";
PLMPipingHVACRacewayIfc.IfcChiller.IfcChiller_PredefinedType.Range.Equal.HEATRECOVERY = "Heat recovery";
PLMPipingHVACRacewayIfc.IfcChiller.IfcChiller_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcChiller.IfcChiller_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCoil = "Ifc Coil";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType.Range.Equal.DXCOOLINGCOIL = "DX cooling coil";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType.Range.Equal.ELECTRICHEATINGCOIL = "Electric heating coil";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType.Range.Equal.GASHEATINGCOIL = "Gas heating coil";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType.Range.Equal.HYDRONICCOIL = "Hydronic coil";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType.Range.Equal.STEAMHEATINGCOIL = "Steam heating coil";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType.Range.Equal.WATERCOOLINGCOIL = "Water cooling coil";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType.Range.Equal.WATERHEATINGCOIL = "Water heating coil";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCoil.IfcCoil_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance = "Ifc Communications appliance";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.ANTENNA = "Antenna";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.COMPUTER = "Computer";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.FAX = "Fax";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.GATEWAY = "Gateway";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.MODEM = "Modem";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.NETWORKAPPLIANCE = "Network appliance";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.NETWORKBRIDGE = "Network bridge";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.NETWORKHUB = "Network hub";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.PRINTER = "Printer";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.REPEATER = "Repeater";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.ROUTER = "Router";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.SCANNER = "Scanner";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.AUTOMATON = "Automaton";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.INTELLIGENT_PERIPHERAL = "Intelligent peripheral";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.IP_NETWORK_EQUIPMENT = "IP network equipment";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.OPTICAL_NETWORK_UNIT = "Optical network unit";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.TELECOMMAND = "Telecommand";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.TELEPHONYEXCHANGE = "Telephony exchange";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.TRANSITIONCOMPONENT = "Transition component";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.TRANSPONDER = "Transponder";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.TRANSPORTEQUIPMENT = "Transport equipment";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCommunicationsAppliance.IfcCommunicationsAppliance_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCompressor = "Ifc Compressor";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.DYNAMIC = "Dynamic";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.RECIPROCATING = "Reciprocating";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.ROTARY = "Rotary";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.SCROLL = "Scroll";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.TROCHOIDAL = "Trochoidal";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.SINGLESTAGE = "Single stage";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.BOOSTER = "Booster";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.OPENTYPE = "Open type";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.HERMETIC = "Hermetic";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.SEMIHERMETIC = "Semi hermetic";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.WELDEDSHELLHERMETIC = "Welded shell hermetic";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.ROLLINGPISTON = "Rolling piston";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.ROTARYVANE = "Rotary vane";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.SINGLESCREW = "Single screw";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.TWINSCREW = "Twin screw";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCompressor.IfcCompressor_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCondenser = "Ifc Condenser";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType.Range.Equal.AIRCOOLED = "Air cooled";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType.Range.Equal.EVAPORATIVECOOLED = "Evaporative cooled";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType.Range.Equal.WATERCOOLED = "Water cooled";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType.Range.Equal.WATERCOOLEDBRAZEDPLATE = "Water cooled brazed plate";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType.Range.Equal.WATERCOOLEDSHELLCOIL = "Water cooled shell coil";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType.Range.Equal.WATERCOOLEDSHELLTUBE = "Water cooled shell tube";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType.Range.Equal.WATERCOOLEDTUBEINTUBE = "Water cooled tube in tube";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCondenser.IfcCondenser_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcController = "Ifc Controller";
PLMPipingHVACRacewayIfc.IfcController.IfcController_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcController.IfcController_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcController.IfcController_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcController.IfcController_PredefinedType.Range.Equal.FLOATING = "Floating";
PLMPipingHVACRacewayIfc.IfcController.IfcController_PredefinedType.Range.Equal.PROGRAMMABLE = "Programmable";
PLMPipingHVACRacewayIfc.IfcController.IfcController_PredefinedType.Range.Equal.PROPORTIONAL = "Proportional";
PLMPipingHVACRacewayIfc.IfcController.IfcController_PredefinedType.Range.Equal.MULTIPOSITION = "Multi positions";
PLMPipingHVACRacewayIfc.IfcController.IfcController_PredefinedType.Range.Equal.TWOPOSITION = "Two positions";
PLMPipingHVACRacewayIfc.IfcController.IfcController_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcController.IfcController_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCooledBeam = "Ifc Cooled beam";
PLMPipingHVACRacewayIfc.IfcCooledBeam.IfcCooledBeam_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCooledBeam.IfcCooledBeam_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCooledBeam.IfcCooledBeam_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCooledBeam.IfcCooledBeam_PredefinedType.Range.Equal.ACTIVE = "Active";
PLMPipingHVACRacewayIfc.IfcCooledBeam.IfcCooledBeam_PredefinedType.Range.Equal.PASSIVE = "Passive";
PLMPipingHVACRacewayIfc.IfcCooledBeam.IfcCooledBeam_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCooledBeam.IfcCooledBeam_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcCoolingTower = "Ifc Cooling tower";
PLMPipingHVACRacewayIfc.IfcCoolingTower.IfcCoolingTower_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcCoolingTower.IfcCoolingTower_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcCoolingTower.IfcCoolingTower_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcCoolingTower.IfcCoolingTower_PredefinedType.Range.Equal.NATURALDRAFT = "Natural draft";
PLMPipingHVACRacewayIfc.IfcCoolingTower.IfcCoolingTower_PredefinedType.Range.Equal.MECHANICALINDUCEDDRAFT = "Mechanical induced draft";
PLMPipingHVACRacewayIfc.IfcCoolingTower.IfcCoolingTower_PredefinedType.Range.Equal.MECHANICALFORCEDDRAFT = "Mechanical forced draft";
PLMPipingHVACRacewayIfc.IfcCoolingTower.IfcCoolingTower_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcCoolingTower.IfcCoolingTower_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDamper = "Ifc Damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.BACKDRAFTDAMPER = "Backdraft damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.BALANCINGDAMPER = "Balancing damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.BLASTDAMPER = "Blast damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.CONTROLDAMPER = "Control damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.FIREDAMPER = "Fire damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.FIRESMOKEDAMPER = "Fire smoke damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.FUMEHOODEXHAUST = "Fume hood exhaust";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.GRAVITYDAMPER = "Gravity damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.GRAVITYRELIEFDAMPER = "Gravity relief damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.RELIEFDAMPER = "Relief damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.SMOKEDAMPER = "Smoke damper";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDamper.IfcDamper_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.BACKDRAFTDAMPER = "Backdraft damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.BALANCINGDAMPER = "Balancing damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.BLASTDAMPER = "Blast damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.CONTROLDAMPER = "Control damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.FIREDAMPER = "Fire damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.FIRESMOKEDAMPER = "Fire smoke damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.FUMEHOODEXHAUST = "Fume hood exhaust";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.GRAVITYDAMPER = "Gravity damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.GRAVITYRELIEFDAMPER = "Gravity relief damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.RELIEFDAMPER = "Relief damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.SMOKEDAMPER = "Smoke damper";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDamperTypeEnum.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDistributionBoard = "Ifc Distribution board";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_PredefinedType.Range.Equal.SWITCHBOARD = "Switch board";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_PredefinedType.Range.Equal.CONSUMERUNIT = "Consumer unit";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_PredefinedType.Range.Equal.MOTORCONTROLCENTRE = "Motor control centre";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_PredefinedType.Range.Equal.DISTRIBUTIONFRAME = "Distribution frame";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_PredefinedType.Range.Equal.DISTRIBUTIONBOARD = "Distribution board";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDistributionBoard.IfcDistributionBoard_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement = "Ifc Distribution chamber element";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.FORMEDDUCT = "Formed duct";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.INSPECTIONCHAMBER = "Inspection chamber";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.INSPECTIONPIT = "Inspection pit";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.MANHOLE = "Manhole";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.METERCHAMBER = "Meter chamber";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.SUMP = "Sump";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.TRENCH = "Trench";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.VALVECHAMBER = "Valve chamber";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDistributionChamberElement.IfcDistributionChamberElement_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit = "Ifc Distribution circuit";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_LongName = "Long name";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.AIRCONDITIONING = "Air conditioning";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.AUDIOVISUAL = "Audio visual";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.CHEMICAL = "Chemical";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.CHILLEDWATER = "Chilled water";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.COMMUNICATION = "Communication";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.COMPRESSEDAIR = "Compressed air";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.CONDENSERWATER = "Condenser water";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.CONTROL = "Control";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.CONVEYING = "Conveying";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.DATA = "Data";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.DISPOSAL = "Disposal";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.DOMESTICCOLDWATER = "Domestic cold water";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.DOMESTICHOTWATER = "Domestic hot water";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.DRAINAGE = "Drainage";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.EARTHING = "Earthing";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.ELECTRICAL = "Electrical";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.ELECTROACOUSTIC = "Electroacoustic";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.EXHAUST = "Exhaust";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.FIREPROTECTION = "Fire protection";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.FUEL = "Fuel";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.GAS = "Gas";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.HAZARDOUS = "Hazardous";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.HEATING = "Heating";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.LIGHTING = "Lighting";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.LIGHTNINGPROTECTION = "Lightning protection";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.MUNICIPALSOLIDWASTE = "Municipal solid waste";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.OIL = "Oil";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.OPERATIONAL = "Operational";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.POWERGENERATION = "Power generation";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.RAINWATER = "Rainwater";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.REFRIGERATION = "Refrigeration";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.SECURITY = "Security";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.SEWAGE = "Sewage";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.SIGNAL = "Signal";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.STORMWATER = "Stormwater";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.TELEPHONE = "Telephone";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.TV = "TV";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.VACUUM = "Vacuum";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.VENT = "Vent";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.VENTILATION = "Ventilation";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.WASTEWATER = "Wastewater";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.WATERSUPPLY = "Water supply";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.CATENARY_SYSTEM = "Catenary system";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.OVERHEAD_CONTACTLINE_SYSTEM = "Overhead contact line system";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.RETURN_CIRCUIT = "Return circuit";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDistributionCircuit.IfcDistributionCircuit_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDistributionSystem = "Ifc Distribution system";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_LongName = "Long name";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.AIRCONDITIONING = "Air conditioning";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.AUDIOVISUAL = "Audio visual";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.CHEMICAL = "Chemical";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.CHILLEDWATER = "Chilled water";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.COMMUNICATION = "Communication";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.COMPRESSEDAIR = "Compressed air";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.CONDENSERWATER = "Condenser water";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.CONTROL = "Control";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.CONVEYING = "Conveying";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.DATA = "Data";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.DISPOSAL = "Disposal";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.DOMESTICCOLDWATER = "Domestic cold water";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.DOMESTICHOTWATER = "Domestic hot water";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.DRAINAGE = "Drainage";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.EARTHING = "Earthing";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.ELECTRICAL = "Electrical";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.ELECTROACOUSTIC = "Electroacoustic";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.EXHAUST = "Exhaust";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.FIREPROTECTION = "Fire protection";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.FUEL = "Fuel";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.GAS = "Gas";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.HAZARDOUS = "Hazardous";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.HEATING = "Heating";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.LIGHTING = "Lighting";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.LIGHTNINGPROTECTION = "Lightning protection";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.MUNICIPALSOLIDWASTE = "Municipal solid waste";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.OIL = "Oil";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.OPERATIONAL = "Operational";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.POWERGENERATION = "Power generation";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.RAINWATER = "Rainwater";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.REFRIGERATION = "Refrigeration";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.SECURITY = "Security";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.SEWAGE = "Sewage";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.SIGNAL = "Signal";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.STORMWATER = "Stormwater";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.TELEPHONE = "Telephone";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.TV = "TV";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.VACUUM = "Vacuum";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.VENT = "Vent";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.VENTILATION = "Ventilation";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.WASTEWATER = "Wastewater";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.WATERSUPPLY = "Water supply";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.CATENARY_SYSTEM = "Catenary system";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.OVERHEAD_CONTACTLINE_SYSTEM = "Overhead contact line system";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.RETURN_CIRCUIT = "Return circuit";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDistributionSystem.IfcDistributionSystem_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDuctFitting = "Ifc Duct fitting";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType.Range.Equal.BEND = "Bend";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType.Range.Equal.CONNECTOR = "Connector";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType.Range.Equal.ENTRY = "Entry";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType.Range.Equal.EXIT = "Exit";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType.Range.Equal.JUNCTION = "Junction";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType.Range.Equal.OBSTRUCTION = "Obstruction";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType.Range.Equal.TRANSITION = "Transition";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDuctFitting.IfcDuctFitting_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDuctFittingTypeEnum.BEND = "Bend";
PLMPipingHVACRacewayIfc.IfcDuctFittingTypeEnum.CONNECTOR = "Connector";
PLMPipingHVACRacewayIfc.IfcDuctFittingTypeEnum.ENTRY = "Entry";
PLMPipingHVACRacewayIfc.IfcDuctFittingTypeEnum.EXIT = "Exit";
PLMPipingHVACRacewayIfc.IfcDuctFittingTypeEnum.JUNCTION = "Junction";
PLMPipingHVACRacewayIfc.IfcDuctFittingTypeEnum.OBSTRUCTION = "Obstruction";
PLMPipingHVACRacewayIfc.IfcDuctFittingTypeEnum.TRANSITION = "Transition";
PLMPipingHVACRacewayIfc.IfcDuctFittingTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDuctFittingTypeEnum.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDuctSegment = "Ifc Duct segment";
PLMPipingHVACRacewayIfc.IfcDuctSegment.IfcDuctSegment_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcDuctSegment.IfcDuctSegment_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcDuctSegment.IfcDuctSegment_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcDuctSegment.IfcDuctSegment_PredefinedType.Range.Equal.RIGIDSEGMENT = "Rigid segment";
PLMPipingHVACRacewayIfc.IfcDuctSegment.IfcDuctSegment_PredefinedType.Range.Equal.FLEXIBLESEGMENT = "Flexible segment";
PLMPipingHVACRacewayIfc.IfcDuctSegment.IfcDuctSegment_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDuctSegment.IfcDuctSegment_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDuctSegmentTypeEnum.RIGIDSEGMENT = "Rigid segment";
PLMPipingHVACRacewayIfc.IfcDuctSegmentTypeEnum.FLEXIBLESEGMENT = "Flexible segment";
PLMPipingHVACRacewayIfc.IfcDuctSegmentTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDuctSegmentTypeEnum.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDuctSilencer = "Ifc Duct silencer";
PLMPipingHVACRacewayIfc.IfcDuctSilencer.IfcDuctSilencer_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcDuctSilencer.IfcDuctSilencer_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcDuctSilencer.IfcDuctSilencer_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcDuctSilencer.IfcDuctSilencer_PredefinedType.Range.Equal.FLATOVAL = "Flat-oval";
PLMPipingHVACRacewayIfc.IfcDuctSilencer.IfcDuctSilencer_PredefinedType.Range.Equal.RECTANGULAR = "Rectangular";
PLMPipingHVACRacewayIfc.IfcDuctSilencer.IfcDuctSilencer_PredefinedType.Range.Equal.ROUND = "Round";
PLMPipingHVACRacewayIfc.IfcDuctSilencer.IfcDuctSilencer_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDuctSilencer.IfcDuctSilencer_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcDuctSilencerTypeEnum.FLATOVAL = "Flat-oval";
PLMPipingHVACRacewayIfc.IfcDuctSilencerTypeEnum.RECTANGULAR = "Rectangular";
PLMPipingHVACRacewayIfc.IfcDuctSilencerTypeEnum.ROUND = "Round";
PLMPipingHVACRacewayIfc.IfcDuctSilencerTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcDuctSilencerTypeEnum.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcElectricAppliance = "Ifc Electric appliance";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.DISHWASHER = "Dishwasher";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.ELECTRICCOOKER = "Electric cooker";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.FREESTANDINGELECTRICHEATER = "Free standing electric heater";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.FREESTANDINGFAN = "Free standing fan";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.FREESTANDINGWATERHEATER = "Free standing water heater";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.FREESTANDINGWATERCOOLER = "Free standing water cooler";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.FREEZER = "Freezer";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.FRIDGE_FREEZER = "Fridge freezer";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.HANDDRYER = "Hand dryer";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.KITCHENMACHINE = "Kitchen machine";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.MICROWAVE = "Microwave";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.PHOTOCOPIER = "Photocopier";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.REFRIGERATOR = "Refrigerator";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.TUMBLEDRYER = "Tumble dryer";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.VENDINGMACHINE = "Vending machine";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.WASHINGMACHINE = "Washing machine";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcElectricAppliance.IfcElectricAppliance_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard = "Ifc Electric distribution board";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard.IfcElectricDistributionBoard_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard.IfcElectricDistributionBoard_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard.IfcElectricDistributionBoard_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard.IfcElectricDistributionBoard_PredefinedType.Range.Equal.CONSUMERUNIT = "Consumer unit";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard.IfcElectricDistributionBoard_PredefinedType.Range.Equal.DISTRIBUTIONBOARD = "Distribution board";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard.IfcElectricDistributionBoard_PredefinedType.Range.Equal.MOTORCONTROLCENTRE = "Motor control centre";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard.IfcElectricDistributionBoard_PredefinedType.Range.Equal.SWITCHBOARD = "Switchboard";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard.IfcElectricDistributionBoard_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcElectricDistributionBoard.IfcElectricDistributionBoard_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice = "Ifc Electric flow storage device";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.BATTERY = "Battery";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.CAPACITORBANK = "Capacitor bank";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.HARMONICFILTER = "Harmonic filter";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.INDUCTORBANK = "Inductor bank";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.UPS = "Ups";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.CAPACITOR = "Capacitor";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.COMPENSATOR = "Compensator";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.INDUCTOR = "Inductor";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.RECHARGER = "Recharger";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcElectricFlowStorageDevice.IfcElectricFlowStorageDevice_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcElectricFlowTreatmentDevice = "Ifc Electric flow treatment device";
PLMPipingHVACRacewayIfc.IfcElectricFlowTreatmentDevice.IfcElectricFlowTreatmentDevice_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcElectricFlowTreatmentDevice.IfcElectricFlowTreatmentDevice_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcElectricFlowTreatmentDevice.IfcElectricFlowTreatmentDevice_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcElectricFlowTreatmentDevice.IfcElectricFlowTreatmentDevice_PredefinedType.Range.Equal.ELECTRONICFILTER = "Electronic filter";
PLMPipingHVACRacewayIfc.IfcElectricFlowTreatmentDevice.IfcElectricFlowTreatmentDevice_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcElectricFlowTreatmentDevice.IfcElectricFlowTreatmentDevice_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcElectricGenerator = "Ifc Electric generator";
PLMPipingHVACRacewayIfc.IfcElectricGenerator.IfcElectricGenerator_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcElectricGenerator.IfcElectricGenerator_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcElectricGenerator.IfcElectricGenerator_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcElectricGenerator.IfcElectricGenerator_PredefinedType.Range.Equal.CHP = "CHP";
PLMPipingHVACRacewayIfc.IfcElectricGenerator.IfcElectricGenerator_PredefinedType.Range.Equal.ENGINEGENERATOR = "Engine generator";
PLMPipingHVACRacewayIfc.IfcElectricGenerator.IfcElectricGenerator_PredefinedType.Range.Equal.STANDALONE = "Standalone";
PLMPipingHVACRacewayIfc.IfcElectricGenerator.IfcElectricGenerator_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcElectricGenerator.IfcElectricGenerator_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcElectricMotor = "Ifc Electric motor";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_PredefinedType.Range.Equal.DC = "DD";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_PredefinedType.Range.Equal.INDUCTION = "Induction";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_PredefinedType.Range.Equal.POLYPHASE = "Polyphase";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_PredefinedType.Range.Equal.RELUCTANCESYNCHRONOUS = "Reluctance synchronous";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_PredefinedType.Range.Equal.SYNCHRONOUS = "Synchronous";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcElectricMotor.IfcElectricMotor_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcElectricTimeControl = "Ifc Electric time control";
PLMPipingHVACRacewayIfc.IfcElectricTimeControl.IfcElectricTimeControl_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcElectricTimeControl.IfcElectricTimeControl_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcElectricTimeControl.IfcElectricTimeControl_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcElectricTimeControl.IfcElectricTimeControl_PredefinedType.Range.Equal.TIMECLOCK = "Time clock";
PLMPipingHVACRacewayIfc.IfcElectricTimeControl.IfcElectricTimeControl_PredefinedType.Range.Equal.TIMEDELAY = "Time delay";
PLMPipingHVACRacewayIfc.IfcElectricTimeControl.IfcElectricTimeControl_PredefinedType.Range.Equal.RELAY = "Relay";
PLMPipingHVACRacewayIfc.IfcElectricTimeControl.IfcElectricTimeControl_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcElectricTimeControl.IfcElectricTimeControl_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcEngine = "Ifc Engine";
PLMPipingHVACRacewayIfc.IfcEngine.IfcEngine_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcEngine.IfcEngine_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcEngine.IfcEngine_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcEngine.IfcEngine_PredefinedType.Range.Equal.EXTERNALCOMBUSTION = "External combustion";
PLMPipingHVACRacewayIfc.IfcEngine.IfcEngine_PredefinedType.Range.Equal.INTERNALCOMBUSTION = "Internal combustion";
PLMPipingHVACRacewayIfc.IfcEngine.IfcEngine_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcEngine.IfcEngine_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler = "Ifc Evaporative cooler";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER = "Direct evaporative random media air cooler";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER = "Direct evaporative rigid media air cooler";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER = "Direct evaporatives lingers packaged air cooler";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER = "Direct evaporative packaged rotary air cooler";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.DIRECTEVAPORATIVEAIRWASHER = "Direct evaporative air washer";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.INDIRECTEVAPORATIVEPACKAGEAIRCOOLER = "Indirect evaporative package air cooler";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.INDIRECTEVAPORATIVEWETCOIL = "Indirect evaporative wet coil";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER = "Indirect evaporative cooling tower or coil cooler";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.INDIRECTDIRECTCOMBINATION = "Indirect direct combination";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcEvaporativeCooler.IfcEvaporativeCooler_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcEvaporator = "Ifc Evaporator";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_PredefinedType.Range.Equal.DIRECTEXPANSION = "Direct expansion";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_PredefinedType.Range.Equal.DIRECTEXPANSIONSHELLANDTUBE = "Direct expansion shell and tube";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_PredefinedType.Range.Equal.DIRECTEXPANSIONTUBEINTUBE = "Direct expansion tube in tube";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_PredefinedType.Range.Equal.DIRECTEXPANSIONBRAZEDPLATE = "Direct expansion brazed plate";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_PredefinedType.Range.Equal.FLOODEDSHELLANDTUBE = "Flooded shell and tube";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_PredefinedType.Range.Equal.SHELLANDCOIL = "Shell and coil";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcEvaporator.IfcEvaporator_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcFan = "Ifc Fan";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType.Range.Equal.CENTRIFUGALFORWARDCURVED = "Centrifugal forward curved";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType.Range.Equal.CENTRIFUGALRADIAL = "Centrifugal radial";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType.Range.Equal.CENTRIFUGALBACKWARDINCLINEDCURVED = "Centrifugal backward inclined curved";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType.Range.Equal.CENTRIFUGALAIRFOIL = "Centrifugal air foil";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType.Range.Equal.TUBEAXIAL = "Tube axial";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType.Range.Equal.VANEAXIAL = "Vane axial";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType.Range.Equal.PROPELLORAXIAL = "Propell or axial";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcFan.IfcFan_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcFilter = "Ifc Filter";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_PredefinedType.Range.Equal.AIRPARTICLEFILTER = "Air particle filter";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_PredefinedType.Range.Equal.COMPRESSEDAIRFILTER = "Compressed air filter";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_PredefinedType.Range.Equal.ODORFILTER = "Odor filter";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_PredefinedType.Range.Equal.OILFILTER = "Oil filter";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_PredefinedType.Range.Equal.STRAINER = "Strainer";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_PredefinedType.Range.Equal.WATERFILTER = "Water filter";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcFilter.IfcFilter_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal = "Ifc Fire suppression terminal";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_PredefinedType.Range.Equal.BREECHINGINLET = "Breeching inlet";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_PredefinedType.Range.Equal.FIREHYDRANT = "Fire hydrant";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_PredefinedType.Range.Equal.HOSEREEL = "Hose reel";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_PredefinedType.Range.Equal.SPRINKLER = "Sprinkler";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_PredefinedType.Range.Equal.SPRINKLERDEFLECTOR = "Sprinkler deflector";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcFireSuppressionTerminal.IfcFireSuppressionTerminal_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcFlowFitting = "Ifc Flow fitting";
PLMPipingHVACRacewayIfc.IfcFlowFitting.IfcFlowFitting_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcFlowFitting.IfcFlowFitting_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcFlowInstrument = "Ifc Flow instrument";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.PRESSUREGAUGE = "Pressure gauge";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.THERMOMETER = "Thermometer";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.AMMETER = "Ammeter";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.FREQUENCYMETER = "Frequency meter";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.POWERFACTORMETER = "Power factor meter";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.PHASEANGLEMETER = "Phase angle meter";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.VOLTMETER_PEAK = "Peak voltmeter";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.VOLTMETER_RMS = "RMS voltmeter";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcFlowInstrument.IfcFlowInstrument_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcFlowMeter = "Ifc Flow meter";
PLMPipingHVACRacewayIfc.IfcFlowMeter.IfcFlowMeter_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcFlowMeter.IfcFlowMeter_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcFlowMeter.IfcFlowMeter_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcFlowMeter.IfcFlowMeter_PredefinedType.Range.Equal.ENERGYMETER = "Energy meter";
PLMPipingHVACRacewayIfc.IfcFlowMeter.IfcFlowMeter_PredefinedType.Range.Equal.GASMETER = "Gas meter";
PLMPipingHVACRacewayIfc.IfcFlowMeter.IfcFlowMeter_PredefinedType.Range.Equal.OILMETER = "Oil meter";
PLMPipingHVACRacewayIfc.IfcFlowMeter.IfcFlowMeter_PredefinedType.Range.Equal.WATERMETER = "Water meter";
PLMPipingHVACRacewayIfc.IfcFlowMeter.IfcFlowMeter_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcFlowMeter.IfcFlowMeter_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcFlowSegment = "Ifc Flow segment";
PLMPipingHVACRacewayIfc.IfcFlowSegment.IfcFlowSegment_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcFlowSegment.IfcFlowSegment_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcFlowTerminal = "Ifc Flow terminal (Deprecated)";
PLMPipingHVACRacewayIfc.IfcFlowTerminal.IfcFlowTerminal_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcFlowTerminal.IfcFlowTerminal_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcHeatExchanger = "Ifc Heat exchanger";
PLMPipingHVACRacewayIfc.IfcHeatExchanger.IfcHeatExchanger_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcHeatExchanger.IfcHeatExchanger_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcHeatExchanger.IfcHeatExchanger_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcHeatExchanger.IfcHeatExchanger_PredefinedType.Range.Equal.PLATE = "Plate";
PLMPipingHVACRacewayIfc.IfcHeatExchanger.IfcHeatExchanger_PredefinedType.Range.Equal.SHELLANDTUBE = "Shell and tube";
PLMPipingHVACRacewayIfc.IfcHeatExchanger.IfcHeatExchanger_PredefinedType.Range.Equal.TURNOUTHEATING = "Turnout heating";
PLMPipingHVACRacewayIfc.IfcHeatExchanger.IfcHeatExchanger_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcHeatExchanger.IfcHeatExchanger_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcHumidifier = "Ifc Humidifier";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.STEAMINJECTION = "Steam injection";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ADIABATICAIRWASHER = "Adiabatic air washer";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ADIABATICPAN = "Adiabatic pan";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ADIABATICWETTEDELEMENT = "Adiabatic wetted element";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ADIABATICATOMIZING = "Adiabatic atomizing";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ADIABATICULTRASONIC = "Adiabatic ultrasonic";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ADIABATICRIGIDMEDIA = "Adiabatic rigid media";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ADIABATICCOMPRESSEDAIRNOZZLE = "Adiabatic compressed air nozzle";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ASSISTEDELECTRIC = "Assisted electric";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ASSISTEDNATURALGAS = "Assisted natural gas";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ASSISTEDPROPANE = "Assisted propane";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ASSISTEDBUTANE = "Assisted butane";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.ASSISTEDSTEAM = "Assisted steam";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcHumidifier.IfcHumidifier_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcInterceptor = "Ifc Interceptor";
PLMPipingHVACRacewayIfc.IfcInterceptor.IfcInterceptor_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcInterceptor.IfcInterceptor_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcInterceptor.IfcInterceptor_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcInterceptor.IfcInterceptor_PredefinedType.Range.Equal.CYCLONIC = "Cyclonic";
PLMPipingHVACRacewayIfc.IfcInterceptor.IfcInterceptor_PredefinedType.Range.Equal.GREASE = "Grease";
PLMPipingHVACRacewayIfc.IfcInterceptor.IfcInterceptor_PredefinedType.Range.Equal.OIL = "Oil";
PLMPipingHVACRacewayIfc.IfcInterceptor.IfcInterceptor_PredefinedType.Range.Equal.PETROL = "Petrol";
PLMPipingHVACRacewayIfc.IfcInterceptor.IfcInterceptor_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcInterceptor.IfcInterceptor_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcJunctionBox = "Ifc Junction box";
PLMPipingHVACRacewayIfc.IfcJunctionBox.IfcJunctionBox_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcJunctionBox.IfcJunctionBox_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcJunctionBox.IfcJunctionBox_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcJunctionBox.IfcJunctionBox_PredefinedType.Range.Equal.DATA = "Data";
PLMPipingHVACRacewayIfc.IfcJunctionBox.IfcJunctionBox_PredefinedType.Range.Equal.POWER = "Power";
PLMPipingHVACRacewayIfc.IfcJunctionBox.IfcJunctionBox_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcJunctionBox.IfcJunctionBox_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcLamp = "Ifc Lamp";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.COMPACTFLUORESCENT = "Compact fluorescent";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.FLUORESCENT = "Fluorescent";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.HALOGEN = "Halogen";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.HIGHPRESSUREMERCURY = "High pressure mercury";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.HIGHPRESSURESODIUM = "High pressure sodium";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.LED = "LED";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.METALHALIDE = "Metal halide";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.OLED = "OLED";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.TUNGSTENFILAMENT = "Tungsten filament";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcLamp.IfcLamp_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcLightFixture = "Ifc Light fixture";
PLMPipingHVACRacewayIfc.IfcLightFixture.IfcLightFixture_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcLightFixture.IfcLightFixture_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcLightFixture.IfcLightFixture_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcLightFixture.IfcLightFixture_PredefinedType.Range.Equal.POINTSOURCE = "Point source";
PLMPipingHVACRacewayIfc.IfcLightFixture.IfcLightFixture_PredefinedType.Range.Equal.DIRECTIONSOURCE = "Direction source";
PLMPipingHVACRacewayIfc.IfcLightFixture.IfcLightFixture_PredefinedType.Range.Equal.SECURITYLIGHTING = "Security lighting";
PLMPipingHVACRacewayIfc.IfcLightFixture.IfcLightFixture_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcLightFixture.IfcLightFixture_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcMedicalDevice = "Ifc Medical device";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_PredefinedType.Range.Equal.AIRSTATION = "Air station";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_PredefinedType.Range.Equal.FEEDAIRUNIT = "Feed air unit";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_PredefinedType.Range.Equal.OXYGENGENERATOR = "Oxygen generator";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_PredefinedType.Range.Equal.OXYGENPLANT = "Oxygen plant";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_PredefinedType.Range.Equal.VACUUMSTATION = "Vacuum station";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcMedicalDevice.IfcMedicalDevice_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance = "Ifc Mobile telecommunications appliance";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType.Range.Equal.E_UTRAN_NODE_B = "E-utran node B";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType.Range.Equal.REMOTE_RADIO_UNIT = "Remote radio unit";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType.Range.Equal.ACCESSPOINT = "Access point";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType.Range.Equal.BASETRANSCEIVERSTATION = "Base transceiver station";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType.Range.Equal.REMOTEUNIT = "Remote unit";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType.Range.Equal.BASEBANDUNIT = "Baseband unit";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType.Range.Equal.MASTERUNIT = "Master unit";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcMobileTelecommunicationsAppliance.IfcMobileTelecommunicationsAppliance_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcMotorConnection = "Ifc Motor connection";
PLMPipingHVACRacewayIfc.IfcMotorConnection.IfcMotorConnection_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcMotorConnection.IfcMotorConnection_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcMotorConnection.IfcMotorConnection_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcMotorConnection.IfcMotorConnection_PredefinedType.Range.Equal.BELTDRIVE = "Belt drive";
PLMPipingHVACRacewayIfc.IfcMotorConnection.IfcMotorConnection_PredefinedType.Range.Equal.COUPLING = "Coupling";
PLMPipingHVACRacewayIfc.IfcMotorConnection.IfcMotorConnection_PredefinedType.Range.Equal.DIRECTDRIVE = "Direct drive";
PLMPipingHVACRacewayIfc.IfcMotorConnection.IfcMotorConnection_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcMotorConnection.IfcMotorConnection_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcOutlet = "Ifc Outlet";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_PredefinedType.Range.Equal.AUDIOVISUALOUTLET = "Audio visual outlet";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_PredefinedType.Range.Equal.COMMUNICATIONSOUTLET = "Communications outlet";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_PredefinedType.Range.Equal.POWEROUTLET = "Power outlet";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_PredefinedType.Range.Equal.DATAOUTLET = "Data outlet";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_PredefinedType.Range.Equal.TELEPHONEOUTLET = "Telephone outlet";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcOutlet.IfcOutlet_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcPipeFitting = "Ifc Pipe fitting";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType.Range.Equal.BEND = "Bend";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType.Range.Equal.CONNECTOR = "Connector";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType.Range.Equal.ENTRY = "Entry";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType.Range.Equal.EXIT = "Exit";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType.Range.Equal.JUNCTION = "Junction";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType.Range.Equal.OBSTRUCTION = "Obstruction";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType.Range.Equal.TRANSITION = "Transition";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcPipeFitting.IfcPipeFitting_PredefinedType.Range.Equal.NOTDEFINED = "Not Defined";
PLMPipingHVACRacewayIfc.IfcPipeFittingTypeEnum.BEND = "Bend";
PLMPipingHVACRacewayIfc.IfcPipeFittingTypeEnum.CONNECTOR = "Connector";
PLMPipingHVACRacewayIfc.IfcPipeFittingTypeEnum.ENTRY = "Entry";
PLMPipingHVACRacewayIfc.IfcPipeFittingTypeEnum.EXIT = "Exit";
PLMPipingHVACRacewayIfc.IfcPipeFittingTypeEnum.JUNCTION = "Junction";
PLMPipingHVACRacewayIfc.IfcPipeFittingTypeEnum.OBSTRUCTION = "Obstruction";
PLMPipingHVACRacewayIfc.IfcPipeFittingTypeEnum.TRANSITION = "Transition";
PLMPipingHVACRacewayIfc.IfcPipeFittingTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcPipeFittingTypeEnum.NOTDEFINED = "Not Defined";
PLMPipingHVACRacewayIfc.IfcPipeSegment = "Ifc Pipe segment";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_PredefinedType.Range.Equal.CULVERT = "Culvert";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_PredefinedType.Range.Equal.FLEXIBLESEGMENT = "Flexible segment";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_PredefinedType.Range.Equal.RIGIDSEGMENT = "Rigid segment";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_PredefinedType.Range.Equal.GUTTER = "Gutter";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_PredefinedType.Range.Equal.SPOOL = "Spool";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcPipeSegment.IfcPipeSegment_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcPipeSegmentTypeEnum.CULVERT = "Culvert";
PLMPipingHVACRacewayIfc.IfcPipeSegmentTypeEnum.FLEXIBLESEGMENT = "Flexible segment";
PLMPipingHVACRacewayIfc.IfcPipeSegmentTypeEnum.RIGIDSEGMENT = "Rigid segment";
PLMPipingHVACRacewayIfc.IfcPipeSegmentTypeEnum.GUTTER = "Gutter";
PLMPipingHVACRacewayIfc.IfcPipeSegmentTypeEnum.SPOOL = "Spool";
PLMPipingHVACRacewayIfc.IfcPipeSegmentTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcPipeSegmentTypeEnum.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice = "Ifc Protective device";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.CIRCUITBREAKER = "Circuit breaker";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.EARTHLEAKAGECIRCUITBREAKER = "Earth leakage circuit breaker";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.EARTHINGSWITCH = "Earthing switch";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.FUSEDISCONNECTOR = "Fuse disconnector";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.RESIDUALCURRENTCIRCUITBREAKER = "Residual current circuit breaker";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.RESIDUALCURRENTSWITCH = "Residual current switch";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.VARISTOR = "Varistor";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.ANTI_ARCING_DEVICE = "Anti arcing device";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.SPARKGAP = "Spark gap";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.VOLTAGELIMITER = "Voltage limiter";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcProtectiveDevice.IfcProtectiveDevice_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit = "Ifc Protective device tripping unit";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit.IfcProtectiveDeviceTrippingUnit_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit.IfcProtectiveDeviceTrippingUnit_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit.IfcProtectiveDeviceTrippingUnit_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit.IfcProtectiveDeviceTrippingUnit_PredefinedType.Range.Equal.ELECTRONIC = "Electronic";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit.IfcProtectiveDeviceTrippingUnit_PredefinedType.Range.Equal.ELECTROMAGNETIC = "Electromagnetic";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit.IfcProtectiveDeviceTrippingUnit_PredefinedType.Range.Equal.RESIDUALCURRENT = "Residual current";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit.IfcProtectiveDeviceTrippingUnit_PredefinedType.Range.Equal.THERMAL = "Thermal";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit.IfcProtectiveDeviceTrippingUnit_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcProtectiveDeviceTrippingUnit.IfcProtectiveDeviceTrippingUnit_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcPump = "Ifc Pump";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType.Range.Equal.CIRCULATOR = "Circulator";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType.Range.Equal.ENDSUCTION = "End suction";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType.Range.Equal.SPLITCASE = "Split case";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType.Range.Equal.SUBMERSIBLEPUMP = "Submersible pump";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType.Range.Equal.SUMPPUMP = "Sump pump";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType.Range.Equal.VERTICALINLINE = "Vertical inline";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType.Range.Equal.VERTICALTURBINE = "Vertical turbine";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcPump.IfcPump_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal = "Ifc Sanitary terminal";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.BATH = "Bath";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.BIDET = "Bidet";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.CISTERN = "Cistern";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.SHOWER = "Shower";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.SINK = "Sink";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.SANITARYFOUNTAIN = "Sanitary fountain";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.TOILETPAN = "Toilet pan";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.URINAL = "Urinal";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.WASHHANDBASIN = "Wash hand basin";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.WCSEAT = "WC seat";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcSanitaryTerminal.IfcSanitaryTerminal_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcSensor = "Ifc Sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.COSENSOR = "CO sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.CO2SENSOR = "CO sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.CONDUCTANCESENSOR = "Conductance sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.CONTACTSENSOR = "Contact sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.FIRESENSOR = "Fire sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.FLOWSENSOR = "Flow sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.FROSTSENSOR = "Frost sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.GASSENSOR = "Gas sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.HEATSENSOR = "Heat sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.HUMIDITYSENSOR = "Humidity sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.IDENTIFIERSENSOR = "Identifier sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.IONCONCENTRATIONSENSOR = "Ion concentration sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.LEVELSENSOR = "Level sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.LIGHTSENSOR = "Light sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.MOISTURESENSOR = "Moisture sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.MOVEMENTSENSOR = "Movement sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.PHSENSOR = "PH sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.PRESSURESENSOR = "Pressure sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.RADIATIONSENSOR = "Radiation sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.RADIOACTIVITYSENSOR = "Radioactivity sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.SMOKESENSOR = "Smoke sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.SOUNDSENSOR = "Sound sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.TEMPERATURESENSOR = "Temperature sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.WINDSENSOR = "Wind sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.EARTHQUAKESENSOR = "Earthquake sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.FOREIGNOBJECTDETECTIONSENSOR = "Foreign object detection sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.OBSTACLESENSOR = "Obstacle sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.RAINSENSOR = "Rain sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.SNOWDEPTHSENSOR = "Snow depth sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.TRAINSENSOR = "Train sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.TURNOUTCLOSURESENSOR = "Turnout closure sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.WHEELSENSOR = "Wheel sensor";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcSensor.IfcSensor_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcSolarDevice = "Ifc Solar device";
PLMPipingHVACRacewayIfc.IfcSolarDevice.IfcSolarDevice_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcSolarDevice.IfcSolarDevice_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcSolarDevice.IfcSolarDevice_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcSolarDevice.IfcSolarDevice_PredefinedType.Range.Equal.SOLARCOLLECTOR = "Solar collector";
PLMPipingHVACRacewayIfc.IfcSolarDevice.IfcSolarDevice_PredefinedType.Range.Equal.SOLARPANEL = "Solar panel";
PLMPipingHVACRacewayIfc.IfcSolarDevice.IfcSolarDevice_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcSolarDevice.IfcSolarDevice_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcSpaceHeater = "Ifc Space heater";
PLMPipingHVACRacewayIfc.IfcSpaceHeater.IfcSpaceHeater_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcSpaceHeater.IfcSpaceHeater_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcSpaceHeater.IfcSpaceHeater_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcSpaceHeater.IfcSpaceHeater_PredefinedType.Range.Equal.CONVECTOR = "Convector";
PLMPipingHVACRacewayIfc.IfcSpaceHeater.IfcSpaceHeater_PredefinedType.Range.Equal.RADIATOR = "Radiator";
PLMPipingHVACRacewayIfc.IfcSpaceHeater.IfcSpaceHeater_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcSpaceHeater.IfcSpaceHeater_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcStackTerminal = "Ifc Stack terminal";
PLMPipingHVACRacewayIfc.IfcStackTerminal.IfcStackTerminal_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcStackTerminal.IfcStackTerminal_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcStackTerminal.IfcStackTerminal_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcStackTerminal.IfcStackTerminal_PredefinedType.Range.Equal.BIRDCAGE = "Bird cage";
PLMPipingHVACRacewayIfc.IfcStackTerminal.IfcStackTerminal_PredefinedType.Range.Equal.COWL = "Cowl";
PLMPipingHVACRacewayIfc.IfcStackTerminal.IfcStackTerminal_PredefinedType.Range.Equal.RAINWATERHOPPER = "Rain water hopper";
PLMPipingHVACRacewayIfc.IfcStackTerminal.IfcStackTerminal_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcStackTerminal.IfcStackTerminal_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice = "Ifc Switching device";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.CONTACTOR = "Contactor";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.DIMMERSWITCH = "Dimmer switch";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.EMERGENCYSTOP = "Emergency stop";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.KEYPAD = "Keypad";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.MOMENTARYSWITCH = "Momentary switch";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.SELECTORSWITCH = "Selector switch";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.STARTER = "Starter";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.SWITCHDISCONNECTOR = "Switch disconnector";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.TOGGLESWITCH = "Toggle switch";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.RELAY = "Relay";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.START_AND_STOP_EQUIPMENT = "Start and stop equipment";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcSwitchingDevice.IfcSwitchingDevice_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcTank = "Ifc Tank";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.BASIN = "Basin";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.BREAKPRESSURE = "Break pressure";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.EXPANSION = "Expansion";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.FEEDANDEXPANSION = "Feed and expansion";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.PRESSUREVESSEL = "Pressure vessel";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.STORAGE = "Storage";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.VESSEL = "Vessel";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.OILRETENTIONTRAY = "Oil retention tray";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcTank.IfcTank_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcTransformer = "Ifc Transformer";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType.Range.Equal.CURRENT = "Current";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType.Range.Equal.FREQUENCY = "Frequency";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType.Range.Equal.INVERTER = "Inverter";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType.Range.Equal.RECTIFIER = "Rectifier";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType.Range.Equal.VOLTAGE = "Voltage";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType.Range.Equal.CHOPPER = "Chopper";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType.Range.Equal.COMBINED = "Combined";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcTransformer.IfcTransformer_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcTubeBundle = "Ifc Tube bundle";
PLMPipingHVACRacewayIfc.IfcTubeBundle.IfcTubeBundle_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcTubeBundle.IfcTubeBundle_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcTubeBundle.IfcTubeBundle_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcTubeBundle.IfcTubeBundle_PredefinedType.Range.Equal.FINNED = "Finned";
PLMPipingHVACRacewayIfc.IfcTubeBundle.IfcTubeBundle_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcTubeBundle.IfcTubeBundle_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment = "Ifc Unitary equipment";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_PredefinedType.Range.Equal.AIRHANDLER = "Air handler";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_PredefinedType.Range.Equal.AIRCONDITIONINGUNIT = "Air conditioning unit";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_PredefinedType.Range.Equal.DEHUMIDIFIER = "Dehumidifier";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_PredefinedType.Range.Equal.SPLITSYSTEM = "Split system";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_PredefinedType.Range.Equal.ROOFTOPUNIT = "Roof top unit";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcUnitaryEquipment.IfcUnitaryEquipment_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcValve = "Ifc Valve";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.AIRRELEASE = "Air release";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.ANTIVACUUM = "Anti-vacuum";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.CHANGEOVER = "Change-over";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.CHECK = "Check";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.COMMISSIONING = "Commissioning";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.DIVERTING = "Diverting";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.DRAWOFFCOCK = "Draw-off cock";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.DOUBLECHECK = "Double check";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.DOUBLEREGULATING = "Double regulating";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.FAUCET = "Faucet";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.FLUSHING = "Flushing";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.GASCOCK = "Gas cock";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.GASTAP = "Gas tap";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.ISOLATING = "Isolating";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.MIXING = "Mixing";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.PRESSUREREDUCING = "Pressure reducing";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.PRESSURERELIEF = "Pressure relief";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.REGULATING = "Regulating";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.SAFETYCUTOFF = "Safety cut-off";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.STEAMTRAP = "Steam trap";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.STOPCOCK = "Stop cock";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcValve.IfcValve_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.AIRRELEASE = "Air release";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.ANTIVACUUM = "Anti-vacuum";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.CHANGEOVER = "Change-over";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.CHECK = "Check";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.COMMISSIONING = "Commissioning";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.DIVERTING = "Diverting";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.DRAWOFFCOCK = "Draw-off cock";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.DOUBLECHECK = "Double check";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.DOUBLEREGULATING = "Double regulating";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.FAUCET = "Faucet";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.FLUSHING = "Flushing";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.GASCOCK = "Gas cock";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.GASTAP = "Gas tap";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.ISOLATING = "Isolating";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.MIXING = "Mixing";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.PRESSUREREDUCING = "Pressure reducing";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.PRESSURERELIEF = "Pressure relief";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.REGULATING = "Regulating";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.SAFETYCUTOFF = "Safety cut-off";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.STEAMTRAP = "Steam trap";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.STOPCOCK = "Stop cock";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcValveTypeEnum.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcVibrationIsolator = "Ifc Vibration isolator";
PLMPipingHVACRacewayIfc.IfcVibrationIsolator.IfcVibrationIsolator_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcVibrationIsolator.IfcVibrationIsolator_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcVibrationIsolator.IfcVibrationIsolator_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcVibrationIsolator.IfcVibrationIsolator_PredefinedType.Range.Equal.COMPRESSION = "Compression";
PLMPipingHVACRacewayIfc.IfcVibrationIsolator.IfcVibrationIsolator_PredefinedType.Range.Equal.SPRING = "Spring";
PLMPipingHVACRacewayIfc.IfcVibrationIsolator.IfcVibrationIsolator_PredefinedType.Range.Equal.BASE = "Base";
PLMPipingHVACRacewayIfc.IfcVibrationIsolator.IfcVibrationIsolator_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcVibrationIsolator.IfcVibrationIsolator_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcWasteTerminal = "Ifc Waste terminal";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_ObjectType = "Object type";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_Tag = "Tag";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType = "Predefined type";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType.Range.Equal.FLOORTRAP = "Floor trap";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType.Range.Equal.FLOORWASTE = "Floor waste";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType.Range.Equal.GULLYSUMP = "Gully sump";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType.Range.Equal.GULLYTRAP = "Gully trap";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType.Range.Equal.ROOFDRAIN = "Roof drain";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType.Range.Equal.WASTEDISPOSALUNIT = "Waste disposal unit";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType.Range.Equal.WASTETRAP = "Waste trap";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcWasteTerminal.IfcWasteTerminal_PredefinedType.Range.Equal.NOTDEFINED = "Not defined";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon = "Ifc Actuator type common";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_FailPosition = "Fail position";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_FailPosition.Range.Equal.FAILOPEN = "Fail open";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_FailPosition.Range.Equal.FAILCLOSED = "Fail closed";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_FailPosition.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_FailPosition.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_FailPosition.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_ManualOverride = "Manual override";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application = "Application";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application.Range.Equal.ENTRYEXITDEVICE = "Entry exit device";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application.Range.Equal.FIRESMOKEDAMPERACTUATOR = "Fire smoke damper actuator";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application.Range.Equal.DAMPERACTUATOR = "Damper actuator";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application.Range.Equal.VALVEPOSITIONER = "Valve positioner";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application.Range.Equal.LAMPACTUATOR = "Lamp actuator";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application.Range.Equal.SUNBLINDACTUATOR = "Sunblind actuator";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeCommon.IfcPset_ActuatorTypeCommon_Application.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeElectricActuator = "Ifc Actuator type electric actuator";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeElectricActuator.IfcPset_ActuatorTypeElectricActuator_ActuatorInputPower = "Actuator input power";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeElectricActuator.IfcPset_ActuatorTypeElectricActuator_ElectricActuatorType = "Electric actuator type";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeElectricActuator.IfcPset_ActuatorTypeElectricActuator_ElectricActuatorType.Range.Equal.MOTORDRIVE = "Motor drive";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeElectricActuator.IfcPset_ActuatorTypeElectricActuator_ElectricActuatorType.Range.Equal.MAGNETIC = "Magnetic";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeElectricActuator.IfcPset_ActuatorTypeElectricActuator_ElectricActuatorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeElectricActuator.IfcPset_ActuatorTypeElectricActuator_ElectricActuatorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeElectricActuator.IfcPset_ActuatorTypeElectricActuator_ElectricActuatorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeHydraulicActuator = "Ifc Actuator type hydraulic actuator";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeHydraulicActuator.IfcPset_ActuatorTypeHydraulicActuator_InputPressure = "Input pressure";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeHydraulicActuator.IfcPset_ActuatorTypeHydraulicActuator_InputFlowrate = "Input flowrate";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeLinearActuation = "Ifc Actuator type linear actuation";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeLinearActuation.IfcPset_ActuatorTypeLinearActuation_Force = "Force";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeLinearActuation.IfcPset_ActuatorTypeLinearActuation_Stroke = "Stroke";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypePneumaticActuator = "Ifc Actuator type pneumatic actuator";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypePneumaticActuator.IfcPset_ActuatorTypePneumaticActuator_InputPressure = "Input pressure";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypePneumaticActuator.IfcPset_ActuatorTypePneumaticActuator_InputFlowrate = "Input flowrate";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeRotationalActuation = "Ifc Actuator type rotational actuation";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeRotationalActuation.IfcPset_ActuatorTypeRotationalActuation_Torque = "Torque";
PLMPipingHVACRacewayIfc.IfcPset_ActuatorTypeRotationalActuation.IfcPset_ActuatorTypeRotationalActuation_RangeAngle = "Range angle";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon = "Ifc Air terminal box type common";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_AirflowRateRange = "Airflow rate range";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_AirPressureRange = "Air pressure range";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_NominalAirFlowRate = "Nominal air flow rate";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ArrangementType = "Arrangement type";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ArrangementType.Range.Equal.SINGLEDUCT = "Single duct";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ArrangementType.Range.Equal.DUALDUCT = "Dual duct";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ArrangementType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ArrangementType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ArrangementType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReheatType = "Reheat type";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReheatType.Range.Equal.ELECTRICALREHEAT = "Electrical reheat";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReheatType.Range.Equal.WATERCOILREHEAT = "Water coil reheat";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReheatType.Range.Equal.STEAMCOILREHEAT = "Steam coil reheat";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReheatType.Range.Equal.GASREHEAT = "Gas reheat";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReheatType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReheatType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReheatType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReheatType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_HasSoundAttenuator = "Has sound attenuator";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_HasReturnAir = "Has return air";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_HasFan = "Has fan";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_NominalInletAirPressure = "Nominal inlet air pressure";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_NominalDamperDiameter = "Nominal damper diameter";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_HousingThickness = "Housing thickness";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_OperationTemperatureRange = "Operation temperature range";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalBoxTypeCommon.IfcPset_AirTerminalBoxTypeCommon_ReturnAirFractionRange = "Return air fraction range";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence = "Ifc Air terminal occurrence";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_AirflowType = "Air flow type";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_AirflowType.Range.Equal.SUPPLYAIR = "Supply air";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_AirflowType.Range.Equal.RETURNAIR = "Return air";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_AirflowType.Range.Equal.EXHAUSTAIR = "Exhaust air";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_AirflowType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_AirflowType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_AirflowType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_AirFlowRate = "Air flow rate";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location = "Location";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location.Range.Equal.SIDEWALLHIGH = "Side wall high";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location.Range.Equal.SIDEWALLLOW = "Side wall low";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location.Range.Equal.CEILINGPERIMETER = "Ceiling perimeter";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location.Range.Equal.CEILINGINTERIOR = "Ceiling interior";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location.Range.Equal.FLOOR = "Floor";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location.Range.Equal.SILL = "Sill";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalOccurrence.IfcPset_AirTerminalOccurrence_Location.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon = "Ifc Air terminal type common";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Shape = "Shape";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Shape.Range.Equal.ROUND = "Round";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Shape.Range.Equal.RECTANGULAR = "Rectangular";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Shape.Range.Equal.SQUARE = "Square";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Shape.Range.Equal.SLOT = "Slot";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Shape.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Shape.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_Shape.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType = "Face type";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.FOURWAYPATTERN = "Four way pattern";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.SINGLEDEFLECTION = "Single deflection";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.DOUBLEDEFLECTION = "Double deflection";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.SIGHTPROOF = "Sight proof";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.EGGCRATE = "Egg crate";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.PERFORATED = "Perforated";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.LOUVERED = "Louvered";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FaceType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_SlotWidth = "Slot width";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_SlotLength = "Slot length";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_NumberOfSlots = "Number of slots";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern = "Flow pattern";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.LINEARSINGLE = "Linear single";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.LINEARDOUBLE = "Linear double";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.LINEARFOURWAY = "Linear four-way";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.RADIAL = "Radial";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.SWIRL = "Swirl";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.DISPLACMENT = "Displacement";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.COMPACTJET = "Compact jet";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowPattern.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_AirFlowrateRange = "Air flow rate range";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_TemperatureRange = "Temperature range";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_DischargeDirection = "Discharge direction";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_DischargeDirection.Range.Equal.PARALLEL = "Parallel";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_DischargeDirection.Range.Equal.PERPENDICULAR = "Perpendicular";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_DischargeDirection.Range.Equal.ADJUSTABLE = "Adjustable";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_DischargeDirection.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_DischargeDirection.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_DischargeDirection.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_ThrowLength = "Throw length";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_AirDiffusionPerformanceIndex = "Air diffusion performance index";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FinishType = "Finish type";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FinishType.Range.Equal.ANNODIZED = "Anodized";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FinishType.Range.Equal.PAINTED = "Painted";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FinishType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FinishType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FinishType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FinishType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FinishColor = "Finish color";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_MountingType = "Mounting type";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_MountingType.Range.Equal.SURFACE = "Surface";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_MountingType.Range.Equal.FLATFLUSH = "Flat flush";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_MountingType.Range.Equal.LAYIN = "Layin";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_MountingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_MountingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_MountingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreType = "Core type";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreType.Range.Equal.SHUTTERBLADE = "Shutter blade";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreType.Range.Equal.CURVEDBLADE = "Curved blade";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreType.Range.Equal.REMOVABLE = "Removable";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreType.Range.Equal.REVERSIBLE = "Reversible";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreSetHorizontal = "Core set horizontal";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_CoreSetVertical = "Core set vertical";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_HasIntegralControl = "Has integral control";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowControlType = "Flow control type";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowControlType.Range.Equal.DAMPER = "Damper";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowControlType.Range.Equal.BELLOWS = "Bellows";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowControlType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowControlType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowControlType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_FlowControlType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_HasSoundAttenuator = "Has sound attenuator";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_HasThermalInsulation = "Has thermal insulation";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_NeckArea = "Neck area";
PLMPipingHVACRacewayIfc.IfcPset_AirTerminalTypeCommon.IfcPset_AirTerminalTypeCommon_EffectiveArea = "Effective area";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon = "Ifc Air to air heat recovery type common";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_HeatTransferTypeEnum = "Heat transfer type";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_HeatTransferTypeEnum.Range.Equal.SENSIBLE = "Sensible";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_HeatTransferTypeEnum.Range.Equal.LATENT = "Latent";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_HeatTransferTypeEnum.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_HeatTransferTypeEnum.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_HeatTransferTypeEnum.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_HasDefrost = "Has defrost";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_OperationalTemperatureRange = "Operational temperature range";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_PrimaryAirflowRateRange = "Primary airflow rate range";
PLMPipingHVACRacewayIfc.IfcPset_AirToAirHeatRecoveryTypeCommon.IfcPset_AirToAirHeatRecoveryTypeCommon_SecondaryAirflowRateRange = "Secondary airflow rate range";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon = "Ifc Alarm type common";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon.IfcPset_AlarmTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon.IfcPset_AlarmTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon.IfcPset_AlarmTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon.IfcPset_AlarmTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon.IfcPset_AlarmTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon.IfcPset_AlarmTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon.IfcPset_AlarmTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon.IfcPset_AlarmTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AlarmTypeCommon.IfcPset_AlarmTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeAmplifier = "Ifc Audio visual appliance type amplifier";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeAmplifier.IfcPset_AudioVisualApplianceTypeAmplifier_AmplifierType = "Amplifier type";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeAmplifier.IfcPset_AudioVisualApplianceTypeAmplifier_AmplifierType.Range.Equal.FIXED = "Fixed";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeAmplifier.IfcPset_AudioVisualApplianceTypeAmplifier_AmplifierType.Range.Equal.VARIABLE = "Variable";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeAmplifier.IfcPset_AudioVisualApplianceTypeAmplifier_AmplifierType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeAmplifier.IfcPset_AudioVisualApplianceTypeAmplifier_AmplifierType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeAmplifier.IfcPset_AudioVisualApplianceTypeAmplifier_AmplifierType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera = "Ifc Audio visual appliance type camera";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_CameraType = "Camera type";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_CameraType.Range.Equal.PHOTO = "Photo";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_CameraType.Range.Equal.VIDEO = "Video";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_CameraType.Range.Equal.AUDIOVIDEO = "Audio/video";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_CameraType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_CameraType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_CameraType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_IsOutdoors = "Is outdoors";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_VideoResolutionWidth = "Video resolution width";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_VideoResolutionHeight = "Video resolution height";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_PanHorizontal = "Pan horizontal";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_PanVertical = "Pan vertical";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_TiltHorizontal = "Tilt horizontal";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_TiltVertical = "Tilt vertical";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCamera.IfcPset_AudioVisualApplianceTypeCamera_Zoom = "Zoom";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon = "Ifc Audio visual appliance type common";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon.IfcPset_AudioVisualApplianceTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon.IfcPset_AudioVisualApplianceTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon.IfcPset_AudioVisualApplianceTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon.IfcPset_AudioVisualApplianceTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon.IfcPset_AudioVisualApplianceTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon.IfcPset_AudioVisualApplianceTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon.IfcPset_AudioVisualApplianceTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon.IfcPset_AudioVisualApplianceTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeCommon.IfcPset_AudioVisualApplianceTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay = "Ifc Audio visual appliance type display";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayType = "Display type";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayType.Range.Equal.CRT = "CRT";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayType.Range.Equal.DLP = "DLP";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayType.Range.Equal.LCD = "LCD";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayType.Range.Equal.LED = "LED";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayType.Range.Equal.PLASMA = "Plasma";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_NominalSize = "Nominal size";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayWidth = "Display width";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_DisplayHeight = "Display height";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_Brightness = "Brightness";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_ContrastRatio = "Contrast ratio";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_RefreshRate = "Refresh rate";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_TouchScreen = "Touch screen";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_TouchScreen.Range.Equal.SINGLETOUCH = "Single touch";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_TouchScreen.Range.Equal.MULTITOUCH = "Multi touch";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_TouchScreen.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_TouchScreen.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_TouchScreen.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_TouchScreen.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_VideoResolutionWidth = "Video resolution width";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeDisplay.IfcPset_AudioVisualApplianceTypeDisplay_VideoResolutionHeight = "Video resolution height";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypePlayer = "Ifc Audio visual appliance type player";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypePlayer.IfcPset_AudioVisualApplianceTypePlayer_PlayerType = "Player type";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypePlayer.IfcPset_AudioVisualApplianceTypePlayer_PlayerType.Range.Equal.AUDIO = "Audio";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypePlayer.IfcPset_AudioVisualApplianceTypePlayer_PlayerType.Range.Equal.VIDEO = "Video";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypePlayer.IfcPset_AudioVisualApplianceTypePlayer_PlayerType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypePlayer.IfcPset_AudioVisualApplianceTypePlayer_PlayerType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypePlayer.IfcPset_AudioVisualApplianceTypePlayer_PlayerType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypePlayer.IfcPset_AudioVisualApplianceTypePlayer_PlayerMediaEject = "Player media eject";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeProjector = "Ifc Audio visual appliance type projector";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeProjector.IfcPset_AudioVisualApplianceTypeProjector_ProjectorType = "Projector type";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeProjector.IfcPset_AudioVisualApplianceTypeProjector_ProjectorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeProjector.IfcPset_AudioVisualApplianceTypeProjector_ProjectorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeProjector.IfcPset_AudioVisualApplianceTypeProjector_ProjectorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeProjector.IfcPset_AudioVisualApplianceTypeProjector_VideoResolutionWidth = "Video resolution width";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeProjector.IfcPset_AudioVisualApplianceTypeProjector_VideoResolutionHeight = "Video resolution height";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeReceiver = "Ifc Audio visual appliance type receiver";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeReceiver.IfcPset_AudioVisualApplianceTypeReceiver_ReceiverType = "Receiver type";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeReceiver.IfcPset_AudioVisualApplianceTypeReceiver_ReceiverType.Range.Equal.AUDIO = "Audio";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeReceiver.IfcPset_AudioVisualApplianceTypeReceiver_ReceiverType.Range.Equal.AUDIOVIDEO = "Audio/video";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeReceiver.IfcPset_AudioVisualApplianceTypeReceiver_ReceiverType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeReceiver.IfcPset_AudioVisualApplianceTypeReceiver_ReceiverType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeReceiver.IfcPset_AudioVisualApplianceTypeReceiver_ReceiverType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker = "Ifc Audio visual appliance type speaker";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerType = "Speaker type";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerType.Range.Equal.FULLRANGE = "Full range";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerType.Range.Equal.MIDRANGE = "Mid range";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerType.Range.Equal.WOOFER = "Woofer";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerType.Range.Equal.TWEETER = "Tweeter";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerType.Range.Equal.COAXIAL = "Coaxial";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerMounting = "Speaker mounting";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerMounting.Range.Equal.FREESTANDING = "Freestanding";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerMounting.Range.Equal.CEILING = "Ceiling";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerMounting.Range.Equal.WALL = "Wall";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerMounting.Range.Equal.OUTDOOR = "Outdoor";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerMounting.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerMounting.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_SpeakerMounting.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeSpeaker.IfcPset_AudioVisualApplianceTypeSpeaker_Impedence = "Impedence";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeTuner = "Ifc Audio visual appliance type tuner";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeTuner.IfcPset_AudioVisualApplianceTypeTuner_TunerType = "Tuner type";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeTuner.IfcPset_AudioVisualApplianceTypeTuner_TunerType.Range.Equal.AUDIO = "Audio";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeTuner.IfcPset_AudioVisualApplianceTypeTuner_TunerType.Range.Equal.VIDEO = "Video";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeTuner.IfcPset_AudioVisualApplianceTypeTuner_TunerType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeTuner.IfcPset_AudioVisualApplianceTypeTuner_TunerType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeTuner.IfcPset_AudioVisualApplianceTypeTuner_TunerType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_AudioVisualApplianceTypeTuner.IfcPset_AudioVisualApplianceTypeTuner_TunerFrequency = "Tuner frequency";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon = "Ifc Boiler type common";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_PressureRating = "Pressure rating";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_OperatingMode = "Operating mode";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_OperatingMode.Range.Equal.FIXED = "Fixed";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_OperatingMode.Range.Equal.TWOSTEP = "Two step";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_OperatingMode.Range.Equal.MODULATING = "Modulating";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_OperatingMode.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_OperatingMode.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_OperatingMode.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_HeatTransferSurfaceArea = "Heat transfer surface area";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_NominalPartLoadRatio = "Nominal part load ratio";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_WaterInletTemperatureRange = "Water inlet temperature range";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_WaterStorageCapacity = "Water storage capacity";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_IsWaterStorageHeater = "Is water storage heater";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_OutletTemperatureRange = "Outlet temperature range";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_NominalEnergyConsumption = "Nominal energy consumption";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource = "Energy source";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.COAL = "Coal";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.COAL_PULVERIZED = "Coal pulverized";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.ELECTRICITY = "Electricity";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.GAS = "Gas";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.OIL = "Oil";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.PROPANE = "Propane";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.WOOD = "Wood";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.WOOD_CHIP = "Wood chip";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.WOOD_PELLET = "Wood pellet";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.WOOD_PULVERIZED = "Wood pulverized";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeCommon.IfcPset_BoilerTypeCommon_EnergySource.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeSteam = "Ifc Boiler type steam";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeSteam.IfcPset_BoilerTypeSteam_MaximumOutletPressure = "Maximum outlet pressure";
PLMPipingHVACRacewayIfc.IfcPset_BoilerTypeWater = "Ifc Boiler type water";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon = "Ifc Burner type common";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource = "Energy source";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.COAL = "Coal";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.COAL_PULVERIZED = "Coal pulverized";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.ELECTRICITY = "Electricity";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.GAS = "Gas";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.OIL = "Oil";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.PROPANE = "Propane";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.WOOD = "Wood";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.WOOD_CHIP = "Wood chip";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.WOOD_PELLET = "Wood pellet";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.WOOD_PULVERIZED = "Wood pulverized";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_BurnerTypeCommon.IfcPset_BurnerTypeCommon_EnergySource.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon = "Ifc Cable carrier fitting type common";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon.IfcPset_CableCarrierFittingTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon.IfcPset_CableCarrierFittingTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon.IfcPset_CableCarrierFittingTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon.IfcPset_CableCarrierFittingTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon.IfcPset_CableCarrierFittingTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon.IfcPset_CableCarrierFittingTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon.IfcPset_CableCarrierFittingTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon.IfcPset_CableCarrierFittingTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierFittingTypeCommon.IfcPset_CableCarrierFittingTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableLadderSegment = "Ifc Cable carrier segment type cable ladder segment";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableLadderSegment.IfcPset_CableCarrierSegmentTypeCableLadderSegment_NominalWidth = "Nominal width";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableLadderSegment.IfcPset_CableCarrierSegmentTypeCableLadderSegment_NominalHeight = "Nominal height";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableLadderSegment.IfcPset_CableCarrierSegmentTypeCableLadderSegment_LadderConfiguration = "Ladder configuration";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableTraySegment = "Ifc Cable carrier segment type cable tray segment";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableTraySegment.IfcPset_CableCarrierSegmentTypeCableTraySegment_HasCover = "Has cover";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment = "Ifc Cable carrier segment type cable trunking segment";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment_NominalWidth = "Nominal width";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment_NominalHeight = "Nominal height";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment.IfcPset_CableCarrierSegmentTypeCableTrunkingSegment_NumberOfCompartments = "Number of compartments";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon = "Ifc Cable carrier segment type common";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon.IfcPset_CableCarrierSegmentTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon.IfcPset_CableCarrierSegmentTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon.IfcPset_CableCarrierSegmentTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon.IfcPset_CableCarrierSegmentTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon.IfcPset_CableCarrierSegmentTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon.IfcPset_CableCarrierSegmentTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon.IfcPset_CableCarrierSegmentTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon.IfcPset_CableCarrierSegmentTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeCommon.IfcPset_CableCarrierSegmentTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment = "Ifc Cable carrier segment type conduit segment";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment.IfcPset_CableCarrierSegmentTypeConduitSegment_NominalWidth = "Nominal width";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment.IfcPset_CableCarrierSegmentTypeConduitSegment_NominalHeight = "Nominal height";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment.IfcPset_CableCarrierSegmentTypeConduitSegment_ConduitShapeType = "Conduit shape type";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment.IfcPset_CableCarrierSegmentTypeConduitSegment_ConduitShapeType.Range.Equal.CIRCULAR = "Circular";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment.IfcPset_CableCarrierSegmentTypeConduitSegment_ConduitShapeType.Range.Equal.OVAL = "Oval";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment.IfcPset_CableCarrierSegmentTypeConduitSegment_ConduitShapeType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment.IfcPset_CableCarrierSegmentTypeConduitSegment_ConduitShapeType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment.IfcPset_CableCarrierSegmentTypeConduitSegment_ConduitShapeType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableCarrierSegmentTypeConduitSegment.IfcPset_CableCarrierSegmentTypeConduitSegment_IsRigid = "Is rigid";
PLMPipingHVACRacewayIfc.IfcPset_CableConduitGeneral = "Ifc Cable conduit general";
PLMPipingHVACRacewayIfc.IfcPset_CableConduitGeneral.IfcPset_CableConduitGeneral_IsUnderground = "Is underground";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon = "Ifc Cable fitting type common";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon.IfcPset_CableFittingTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon.IfcPset_CableFittingTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon.IfcPset_CableFittingTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon.IfcPset_CableFittingTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon.IfcPset_CableFittingTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon.IfcPset_CableFittingTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon.IfcPset_CableFittingTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon.IfcPset_CableFittingTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableFittingTypeCommon.IfcPset_CableFittingTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence = "Ifc Cable segment occurrence";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_DesignAmbientTemperature = "Design ambient temperature";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_UserCorrectionFactor = "User correction factor";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_NumberOfParallelCircuits = "Number of parallel circuits";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_InstallationMethod = "Installation method";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_InstallationMethodFlagEnum = "Installation method flag enum";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_InstallationMethodFlagEnum.Range.Equal.INDUCT = "In duct";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_InstallationMethodFlagEnum.Range.Equal.INSOIL = "In soil";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_InstallationMethodFlagEnum.Range.Equal.ONWALL = "On wall";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_InstallationMethodFlagEnum.Range.Equal.BELOWCEILING = "Below ceiling";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_InstallationMethodFlagEnum.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_InstallationMethodFlagEnum.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_InstallationMethodFlagEnum.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_DistanceBetweenParallelCircuits = "Distance between parallel circuits";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_SoilConductivity = "Soil conductivity";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_CarrierStackNumber = "Carrier stack number";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_MountingMethod = "Mounting method";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_MountingMethod.Range.Equal.PERFORATEDTRAY = "Perforated tray";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_MountingMethod.Range.Equal.LADDER = "Ladder";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_MountingMethod.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_MountingMethod.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_MountingMethod.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_IsHorizontalCable = "Is horizontal cable";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_IsMountedFlatCable = "Is mounted flat cable";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_CurrentCarryingCapasity = "Current carrying capasity";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_MaximumCableLength = "Maximum cable length";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentOccurrence.IfcPset_CableSegmentOccurrence_PowerLoss = "Power loss";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeBusBarSegment = "Ifc Cable segment type bus bar segment";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeBusBarSegment.IfcPset_CableSegmentTypeBusBarSegment_IsHorizontalBusbar = "Is horizontal busbar";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment = "Ifc Cable segment type cable segment";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_Standard = "Standard";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_NumberOfCores = "Number of cores";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_OverallDiameter = "Overall diameter";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_RatedVoltage = "Rated voltage";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_RatedTemperature = "Rated temperature";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_ScreenDiameter = "Screen diameter";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_HasProtectiveEarth = "Has protective earth";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_MaximumOperatingTemperature = "Maximum operating temperature";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_MaximumShortCircuitTemperature = "Maximum short circuit temperature";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_SpecialConstruction = "Special construction";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_Weight = "Weight";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_SelfExtinguishing60332_1 = "Self extinguishing60332_1";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_SelfExtinguishing60332_3 = "Self extinguishing60332_3";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_HalogenProof = "Halogen proof";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCableSegment.IfcPset_CableSegmentTypeCableSegment_FunctionReliable = "Function reliable";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon = "Ifc Cable segment type common";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon.IfcPset_CableSegmentTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon.IfcPset_CableSegmentTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon.IfcPset_CableSegmentTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon.IfcPset_CableSegmentTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon.IfcPset_CableSegmentTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon.IfcPset_CableSegmentTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon.IfcPset_CableSegmentTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon.IfcPset_CableSegmentTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCommon.IfcPset_CableSegmentTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment = "Ifc Cable segment type conductor segment";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_CrossSectionalArea = "Cross sectional area";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Function = "Function";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Function.Range.Equal.LINE = "Line";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Function.Range.Equal.NEUTRAL = "Neutral";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Function.Range.Equal.PROTECTIVEEARTH = "Protective earth";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Function.Range.Equal.PROTECTIVEEARTHNEUTRAL = "Protective earth neutral";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Function.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Function.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Function.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Material = "Material";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Material.Range.Equal.ALUMINIUM = "Aluminium";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Material.Range.Equal.COPPER = "Copper";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Material.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Material.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Material.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Construction = "Construction";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Construction.Range.Equal.SOLIDCONDUCTOR = "Solid conductor";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Construction.Range.Equal.STRANDEDCONDUCTOR = "Stranded conductor";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Construction.Range.Equal.FLEXIBLESTRANDEDCONDUCTOR = "Flexible stranded conductor";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Construction.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Construction.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Construction.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Shape = "Shape";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Shape.Range.Equal.HELICALCONDUCTOR = "Helical conductor";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Shape.Range.Equal.CIRCULARCONDUCTOR = "Circular conductor";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Shape.Range.Equal.SECTORCONDUCTOR = "Sector conductor";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Shape.Range.Equal.RECTANGULARCONDUCTOR = "Rectangular conductor";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Shape.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Shape.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeConductorSegment.IfcPset_CableSegmentTypeConductorSegment_Shape.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment = "Ifc Cable segment type core segment";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_OverallDiameter = "Overall diameter";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_RatedVoltage = "Rated voltage";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_RatedTemperature = "Rated temperature";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_ScreenDiameter = "Screen diameter";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_CoreIdentifier = "Core identifier";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors = "Sheath colors";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.BLACK = "Black";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.BLUE = "Blue";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.BROWN = "Brown";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.GOLD = "Gold";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.GREEN = "Green";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.GREY = "Grey";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.ORANGE = "Orange";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.PINK = "Pink";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.RED = "Red";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.SILVER = "Silver";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.TURQUOISE = "Turquoise";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.VIOLET = "Violet";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.WHITE = "White";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.YELLOW = "Yellow";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.GREENANDYELLOW = "Green and yellow";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SheathColors.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_Weight = "Weight";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SelfExtinguishing60332_1 = "Self extinguishing60332_1";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_SelfExtinguishing60332_3 = "Self extinguishing60332_3";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_HalogenProof = "Halogen proof";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_FunctionReliable = "Function reliable";
PLMPipingHVACRacewayIfc.IfcPset_CableSegmentTypeCoreSegment.IfcPset_CableSegmentTypeCoreSegment_Standard = "Standard";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon = "Ifc Chiller type common";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_NominalCapacity = "Nominal capacity";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_NominalEfficiency = "Nominal efficiency";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_NominalCondensingTemperature = "Nominal condensing temperature";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_NominalEvaporatingTemperature = "Nominal evaporating temperature";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_NominalHeatRejectionRate = "Nominal heat rejection rate";
PLMPipingHVACRacewayIfc.IfcPset_ChillerTypeCommon.IfcPset_ChillerTypeCommon_NominalPowerConsumption = "Nominal power consumption";
PLMPipingHVACRacewayIfc.IfcPset_CoilOccurrence = "Ifc Coil occurrence";
PLMPipingHVACRacewayIfc.IfcPset_CoilOccurrence.IfcPset_CoilOccurrence_HasSoundAttenuation = "Has sound attenuation";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon = "Ifc Coil type common";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_OperationalTemperatureRange = "Operational temperature range";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_AirflowRateRange = "Airflow rate range";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_NominalSensibleCapacity = "Nominal sensible capacity";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_NominalLatentCapacity = "Nominal latent capacity";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_NominalUA = "Nominal ua";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_PlacementType = "Placement type";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_PlacementType.Range.Equal.FLOOR = "Floor";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_PlacementType.Range.Equal.CEILING = "Ceiling";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_PlacementType.Range.Equal.UNIT = "Unit";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_PlacementType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_PlacementType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeCommon.IfcPset_CoilTypeCommon_PlacementType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic = "Ifc Coil type hydronic";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_FluidPressureRange = "Fluid pressure range";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilCoolant = "Coil coolant";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilCoolant.Range.Equal.WATER = "Water";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilCoolant.Range.Equal.BRINE = "Brine";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilCoolant.Range.Equal.GLYCOL = "Glycol";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilCoolant.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilCoolant.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilCoolant.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilConnectionDirection = "Coil connection direction";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilConnectionDirection.Range.Equal.LEFT = "Left";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilConnectionDirection.Range.Equal.RIGHT = "Right";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilConnectionDirection.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilConnectionDirection.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilConnectionDirection.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilFluidArrangement = "Coil fluid arrangement";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilFluidArrangement.Range.Equal.CROSSFLOW = "Cross flow";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilFluidArrangement.Range.Equal.CROSSCOUNTERFLOW = "Cross counter flow";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilFluidArrangement.Range.Equal.CROSSPARALLELFLOW = "Cross parallel flow";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilFluidArrangement.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilFluidArrangement.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilFluidArrangement.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_CoilFaceArea = "Coil face area";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_HeatExchangeSurfaceArea = "Heat exchange surface area";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_PrimarySurfaceArea = "Primary surface area";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_SecondarySurfaceArea = "Secondary surface area";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_BypassFactor = "Bypass factor";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_SensibleHeatRatio = "Sensible heat ratio";
PLMPipingHVACRacewayIfc.IfcPset_CoilTypeHydronic.IfcPset_CoilTypeHydronic_WetCoilFraction = "Wet coil fraction";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon = "Ifc Communications appliance type common";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon.IfcPset_CommunicationsApplianceTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon.IfcPset_CommunicationsApplianceTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon.IfcPset_CommunicationsApplianceTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon.IfcPset_CommunicationsApplianceTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon.IfcPset_CommunicationsApplianceTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon.IfcPset_CommunicationsApplianceTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon.IfcPset_CommunicationsApplianceTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon.IfcPset_CommunicationsApplianceTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CommunicationsApplianceTypeCommon.IfcPset_CommunicationsApplianceTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon = "Ifc Compressor type common";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_PowerSource = "Power source";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_PowerSource.Range.Equal.MOTORDRIVEN = "Motor driven";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_PowerSource.Range.Equal.ENGINEDRIVEN = "Engine driven";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_PowerSource.Range.Equal.GASTURBINE = "Gas turbine";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_PowerSource.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_PowerSource.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_PowerSource.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass = "Refrigerant class";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.CFC = "CFC";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.HCFC = "HCFC";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.HFC = "HFC";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.HYDROCARBONS = "Hydrocarbons";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.AMMONIA = "Ammonia";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.CO2 = "CO2";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.H2O = "H2O";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_RefrigerantClass.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_MinimumPartLoadRatio = "Minimum part load ratio";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_MaximumPartLoadRatio = "Maximum part load ratio";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_CompressorSpeed = "Compressor speed";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_NominalCapacity = "Nominal capacity";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_IdealCapacity = "Ideal capacity";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_IdealShaftPower = "Ideal shaft power";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_HasHotGasBypass = "Has hot gas bypass";
PLMPipingHVACRacewayIfc.IfcPset_CompressorTypeCommon.IfcPset_CompressorTypeCommon_ImpellerDiameter = "Impeller diameter";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon = "Ifc Condenser type common";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass = "Refrigerant class";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.CFC = "CFC";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.HCFC = "HCFC";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.HFC = "HFC";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.HYDROCARBONS = "Hydrocarbons";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.AMMONIA = "Ammonia";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.CO2 = "CO2";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.H2O = "H2O";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_RefrigerantClass.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_ExternalSurfaceArea = "External surface area";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_InternalSurfaceArea = "Internal surface area";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_InternalRefrigerantVolume = "Internal refrigerant volume";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_InternalWaterVolume = "Internal water volume";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_NominalHeatTransferArea = "Nominal heat transfer area";
PLMPipingHVACRacewayIfc.IfcPset_CondenserTypeCommon.IfcPset_CondenserTypeCommon_NominalHeatTransferCoefficient = "Nominal heat transfer coefficient";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon = "Ifc Controller type common";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon.IfcPset_ControllerTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon.IfcPset_ControllerTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon.IfcPset_ControllerTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon.IfcPset_ControllerTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon.IfcPset_ControllerTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon.IfcPset_ControllerTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon.IfcPset_ControllerTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon.IfcPset_ControllerTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeCommon.IfcPset_ControllerTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating = "Ifc Controller type floating";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType = "Control type";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.CONSTANT = "Constant";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.MODIFIER = "Modifier";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.ABSOLUTE = "Absolute";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.INVERSE = "Inverse";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.HYSTERESIS = "Hysteresis";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.RUNNINGAVERAGE = "Running average";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.DERIVATIVE = "Derivative";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.INTEGRAL = "Integral";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.BINARY = "Binary";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.ACCUMULATOR = "Accumulator";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.PULSECONVERTER = "Pulse converter";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.LOWERLIMITCONTROL = "Lower limit control";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.UPPERLIMITCONTROL = "Upper limit control";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.SUM = "Sum";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.SUBTRACT = "Subtract";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.PRODUCT = "Product";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.DIVIDE = "Divide";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.AVERAGE = "Average";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.MAXIMUM = "Maximum";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.MINIMUM = "Minimum";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.REPORT = "Report";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.SPLIT = "Split";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.INPUT = "Input";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.OUTPUT = "Output";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.VARIABLE = "Variable";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_ControlType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_Range = "Range";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_Value = "Value";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_SignalOffset = "Signal offset";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_SignalFactor = "Signal factor";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeFloating.IfcPset_ControllerTypeFloating_SignalTime = "Signal time";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition = "Ifc Controller type multi position";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition.IfcPset_ControllerTypeMultiPosition_ControlType = "Control type";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition.IfcPset_ControllerTypeMultiPosition_ControlType.Range.Equal.INPUT = "Input";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition.IfcPset_ControllerTypeMultiPosition_ControlType.Range.Equal.OUTPUT = "Output";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition.IfcPset_ControllerTypeMultiPosition_ControlType.Range.Equal.VARIABLE = "Variable";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition.IfcPset_ControllerTypeMultiPosition_ControlType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition.IfcPset_ControllerTypeMultiPosition_ControlType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition.IfcPset_ControllerTypeMultiPosition_ControlType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition.IfcPset_ControllerTypeMultiPosition_Range = "Range";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeMultiPosition.IfcPset_ControllerTypeMultiPosition_Value = "Value";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable = "Ifc Controller type programmable";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_ControlType = "Control type";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_ControlType.Range.Equal.PRIMARY = "Primary";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_ControlType.Range.Equal.SECONDARY = "Secondary";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_ControlType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_ControlType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_ControlType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_FirmwareVersion = "Firmware version";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_SoftwareVersion = "Software version";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application = "Application";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.MODEMCONTROLLER = "Modem controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.TELEPHONEDIRECTORY = "Telephone directory";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.FANCOILUNITCONTROLLER = "Fan coil unit controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.ROOFTOPUNITCONTROLLER = "Roof top unit controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.UNITVENTILATORCONTROLLER = "Unit ventilator controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.SPACECONFORTCONTROLLER = "Space confort controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.VAV = "VAV";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.PUMPCONTROLLER = "Pump controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.BOILERCONTROLLER = "Boiler controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.DISCHARGEAIRCONTROLLER = "Discharge air controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.OCCUPANCYCONTROLLER = "Occupancy controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.CONSTANTLIGHTCONTROLLER = "Constant light controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.SCENECONTROLLER = "Scene controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.PARTITIONWALLCONTROLLER = "Partition wall controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.REALTIMEKEEPER = "Real time keeper";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.REALTIMEBASEDSCHEDULER = "Real time based scheduler";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.LIGHTINGPANELCONTROLLER = "Lighting panel controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.SUNBLINDCONTROLLER = "Sunblind controller";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProgrammable.IfcPset_ControllerTypeProgrammable_Application.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional = "Ifc Controller type proportional";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_ControlType = "Control type";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_ControlType.Range.Equal.PROPORTIONAL = "Proportional";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_ControlType.Range.Equal.PROPORTIONALINTEGRAL = "Proportional integral";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_ControlType.Range.Equal.PROPORTIONALINTEGRALDERIVATIVE = "Proportional integral derivative";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_ControlType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_ControlType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_ControlType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_Range = "Range";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_Value = "Value";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_ProportionalConstant = "Proportional constant";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_IntegralConstant = "Integral constant";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_DerivativeConstant = "Derivative constant";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_SignalTimeIncrease = "Signal time increase";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeProportional.IfcPset_ControllerTypeProportional_SignalTimeDecrease = "Signal time decrease";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition = "Ifc Controller type two position";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType = "Control type";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.NOT = "Not";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.AND = "And";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.OR = "Or";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.XOR = "Xor";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.LOWERLIMITSWITCH = "Lower limit switch";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.UPPERLIMITSWITCH = "Upper limit switch";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.LOWERBANDSWITCH = "Lower band switch";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.UPPERBANDSWITCH = "Upper band switch";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.AVERAGE = "Average";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.CALENDAR = "Calendar";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.INPUT = "Input";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.OUTPUT = "Output";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.VARIABLE = "Variable";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_ControlType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_Polarity = "Polarity";
PLMPipingHVACRacewayIfc.IfcPset_ControllerTypeTwoPosition.IfcPset_ControllerTypeTwoPosition_Value = "Value";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive = "Ifc Cooled beam type active";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_AirFlowConfiguration = "Air flow configuration";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_AirFlowConfiguration.Range.Equal.BIDIRECTIONAL = "Bidirectional";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_AirFlowConfiguration.Range.Equal.UNIDIRECTIONALRIGHT = "Unidirectional right";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_AirFlowConfiguration.Range.Equal.UNIDIRECTIONALLEFT = "Unidirectional left";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_AirFlowConfiguration.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_AirFlowConfiguration.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_AirFlowConfiguration.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_AirflowRateRange = "Airflow rate range";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_SupplyAirConnectionType = "Supply air connection type";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_SupplyAirConnectionType.Range.Equal.STRAIGHT = "Straight";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_SupplyAirConnectionType.Range.Equal.RIGHT = "Right";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_SupplyAirConnectionType.Range.Equal.LEFT = "Left";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_SupplyAirConnectionType.Range.Equal.TOP = "Top";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_SupplyAirConnectionType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_SupplyAirConnectionType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_SupplyAirConnectionType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeActive.IfcPset_CooledBeamTypeActive_ConnectionSize = "Connection size";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon = "Ifc Cooled beam type common";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_IsFreeHanging = "Is free hanging";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_PipeConnection = "Pipe connection enum";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_PipeConnection.Range.Equal.STRAIGHT = "Straight";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_PipeConnection.Range.Equal.RIGHT = "Right";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_PipeConnection.Range.Equal.LEFT = "Left";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_PipeConnection.Range.Equal.TOP = "Top";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_PipeConnection.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_PipeConnection.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_PipeConnection.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_WaterFlowControlSystemType = "Water flow control system type";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_WaterFlowControlSystemType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_WaterFlowControlSystemType.Range.Equal.ONOFFVALVE = "On/off valve";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_WaterFlowControlSystemType.Range.Equal.2WAYVALVE = "2-way valve";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_WaterFlowControlSystemType.Range.Equal.3WAYVALVE = "3-way valve";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_WaterFlowControlSystemType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_WaterFlowControlSystemType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_WaterFlowControlSystemType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_WaterPressureRange = "Water pressure range";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalCoolingCapacity = "Nominal cooling capacity";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalSurroundingTemperatureCooling = "Nominal surrounding temperature cooling";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalSurroundingHumidityCooling = "Nominal surrounding humidity cooling";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalSupplyWaterTemperatureCooling = "Nominal supply water temperature cooling";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalReturnWaterTemperatureCooling = "Nominal return water temperature cooling";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalWaterFlowCooling = "Nominal water flow cooling";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalHeatingCapacity = "Nominal heating capacity";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalSurroundingTemperatureHeating = "Nominal surrounding temperature heating";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalSupplyWaterTemperatureHeating = "Nominal supply water temperature heating";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalReturnWaterTemperatureHeating = "Nominal return water temperature heating";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_NominalWaterFlowHeating = "Nominal water flow heating";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_IntegratedLightingType = "Integrated lighting type";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_IntegratedLightingType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_IntegratedLightingType.Range.Equal.DIRECT = "Direct";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_IntegratedLightingType.Range.Equal.INDIRECT = "Indirect";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_IntegratedLightingType.Range.Equal.DIRECTANDINDIRECT = "Direct and indirect";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_IntegratedLightingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_IntegratedLightingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_IntegratedLightingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_FinishColor = "Finish color";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_CoilLength = "Coil length";
PLMPipingHVACRacewayIfc.IfcPset_CooledBeamTypeCommon.IfcPset_CooledBeamTypeCommon_CoilWidth = "Coil width";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon = "Ifc Cooling tower type common";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_NominalCapacity = "Nominal capacity";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CircuitType = "Circuit type";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CircuitType.Range.Equal.OPENCIRCUIT = "Open circuit";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CircuitType.Range.Equal.CLOSEDCIRCUITWET = "Closed circuit wet";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CircuitType.Range.Equal.CLOSEDCIRCUITDRY = "Closed circuit dry";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CircuitType.Range.Equal.CLOSEDCIRCUITDRYWET = "Closed circuit dry wet";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CircuitType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CircuitType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CircuitType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_FlowArrangement = "Flow arrangement";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_FlowArrangement.Range.Equal.COUNTERFLOW = "Counter flow";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_FlowArrangement.Range.Equal.CROSSFLOW = "Cross flow";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_FlowArrangement.Range.Equal.PARALLELFLOW = "Parallel flow";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_FlowArrangement.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_FlowArrangement.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_FlowArrangement.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_SprayType = "Spray type";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_SprayType.Range.Equal.SPRAYFILLED = "Spray filled";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_SprayType.Range.Equal.SPLASHTYPEFILL = "Splash type fill";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_SprayType.Range.Equal.FILMTYPEFILL = "Film type fill";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_SprayType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_SprayType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_SprayType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl = "Capacity control";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.FANCYCLING = "Fan cycling";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.TWOSPEEDFAN = "Two-speed fan";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.VARIABLESPEEDFAN = "Variable speed fan";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.DAMPERSCONTROL = "Dampers control";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.BYPASSVALVECONTROL = "Bypass valve control";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.MULTIPLESERIESPUMPS = "Multiple series pumps";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.TWOSPEEDPUMP = "Two-speed pump";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.VARIABLESPEEDPUMP = "Variable speed pump";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_CapacityControl.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_ControlStrategy = "Control strategy";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_ControlStrategy.Range.Equal.FIXEDEXITINGWATERTEMP = "Fixed exiting water temp";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_ControlStrategy.Range.Equal.WETBULBTEMPRESET = "Wet bulb temp reset";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_ControlStrategy.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_ControlStrategy.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_ControlStrategy.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_NumberOfCells = "Number of cells";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_BasinReserveVolume = "Basin reserve volume";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_LiftElevationDifference = "Lift elevation difference";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_WaterRequirement = "Water requirement";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_OperationTemperatureRange = "Operation temperature range";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_AmbientDesignDryBulbTemperature = "Ambient design dry bulb temperature";
PLMPipingHVACRacewayIfc.IfcPset_CoolingTowerTypeCommon.IfcPset_CoolingTowerTypeCommon_AmbientDesignWetBulbTemperature = "Ambient design wet bulb temperature";
PLMPipingHVACRacewayIfc.IfcPset_DamperOccurrence = "Ifc Damper occurrence";
PLMPipingHVACRacewayIfc.IfcPset_DamperOccurrence.IfcPset_DamperOccurrence_SizingMethod = "Sizing method";
PLMPipingHVACRacewayIfc.IfcPset_DamperOccurrence.IfcPset_DamperOccurrence_SizingMethod.Range.Equal.NOMINAL = "Nominal";
PLMPipingHVACRacewayIfc.IfcPset_DamperOccurrence.IfcPset_DamperOccurrence_SizingMethod.Range.Equal.EXACT = "Exact";
PLMPipingHVACRacewayIfc.IfcPset_DamperOccurrence.IfcPset_DamperOccurrence_SizingMethod.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperOccurrence.IfcPset_DamperOccurrence_SizingMethod.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon = "Ifc Damper type common";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Status.Range.Equal.UNSET = "(unset";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Operation = "Operation";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Operation.Range.Equal.AUTOMATIC = "Automatic";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Operation.Range.Equal.MANUAL = "Manual";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Operation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Operation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Operation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Orientation = "Orientation";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Orientation.Range.Equal.VERTICAL = "Vertical";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Orientation.Range.Equal.HORIZONTAL = "Horizontal";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Orientation.Range.Equal.VERTICALORHORIZONTAL = "Vertical or horizontal";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Orientation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Orientation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_Orientation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeThickness = "Blade thickness";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeAction = "Blade action";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeAction.Range.Equal.FOLDINGCURTAIN = "Folding curtain";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeAction.Range.Equal.PARALLEL = "Parallel";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeAction.Range.Equal.OPPOSED = "Opposed";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeAction.Range.Equal.SINGLE = "Single";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeAction.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeAction.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeAction.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeShape = "Blade shape";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeShape.Range.Equal.FLAT = "Flat";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeShape.Range.Equal.FABRICATEDAIRFOIL = "Fabricated airfoil";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeShape.Range.Equal.EXTRUDEDAIRFOIL = "Extruded airfoil";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeShape.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeShape.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeShape.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeEdge = "Blade edge";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeEdge.Range.Equal.CRIMPED = "Crimped";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeEdge.Range.Equal.UNCRIMPED = "Uncrimped";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeEdge.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeEdge.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_BladeEdge.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_NumberofBlades = "Number of blades";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_FaceArea = "Face area";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_MaximumAirFlowRate = "Maximum air flow rate";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_TemperatureRange = "Temperature range";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_MaximumWorkingPressure = "Maximum working pressure";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_TemperatureRating = "Temperature rating";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_NominalAirFlowRate = "Nominal air flow rate";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_OpenPressureDrop = "Open pressure drop";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_LeakageFullyClosed = "Leakage fully closed";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_LossCoefficentCurve = "Loss coefficient curve";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_FrameType = "Frame type";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_FrameDepth = "Frame depth";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_FrameThickness = "Frame thickness";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeCommon.IfcPset_DamperTypeCommon_CloseOffRating = "Close-off rating";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeControlDamper = "Ifc Damper type control damper";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeControlDamper.IfcPset_DamperTypeControlDamper_TorqueRange = "Torque range";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeControlDamper.IfcPset_DamperTypeControlDamper_ControlDamperOperation = "Control damper operation";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeControlDamper.IfcPset_DamperTypeControlDamper_ControlDamperOperation.Range.Equal.LINEAR = "Linear";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeControlDamper.IfcPset_DamperTypeControlDamper_ControlDamperOperation.Range.Equal.EXPONENTIAL = "Exponential";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeControlDamper.IfcPset_DamperTypeControlDamper_ControlDamperOperation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeControlDamper.IfcPset_DamperTypeControlDamper_ControlDamperOperation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeControlDamper.IfcPset_DamperTypeControlDamper_ControlDamperOperation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper = "Ifc Damper type fire damper";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ActuationType = "Actuation type";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ActuationType.Range.Equal.GRAVITY = "Gravity";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ActuationType.Range.Equal.SPRING = "Spring";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ActuationType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ActuationType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ActuationType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ClosureRatingEnum = "Closure rating";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ClosureRatingEnum.Range.Equal.DYNAMIC = "Dynamic";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ClosureRatingEnum.Range.Equal.STATIC = "Static";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ClosureRatingEnum.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ClosureRatingEnum.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_ClosureRatingEnum.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_FireResistanceRating = "Fire resistance rating";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireDamper.IfcPset_DamperTypeFireDamper_FusibleLinkTemperature = "Fusible link temperature";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper = "Ifc Damper type fire smoke damper";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ControlType = "Control type";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ActuationType = "Actuation type";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ActuationType.Range.Equal.GRAVITY = "Gravity";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ActuationType.Range.Equal.SPRING = "Spring";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ActuationType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ActuationType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ActuationType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ClosureRatingEnum = "Closure rating";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ClosureRatingEnum.Range.Equal.DYNAMIC = "Dynamic";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ClosureRatingEnum.Range.Equal.STATIC = "Static";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ClosureRatingEnum.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ClosureRatingEnum.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_ClosureRatingEnum.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_FireResistanceRating = "Fire resistance rating";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeFireSmokeDamper.IfcPset_DamperTypeFireSmokeDamper_FusibleLinkTemperature = "Fusible link temperature";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeSmokeDamper = "Ifc Damper type smoke damper";
PLMPipingHVACRacewayIfc.IfcPset_DamperTypeSmokeDamper.IfcPset_DamperTypeSmokeDamper_ControlType = "Control type";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardOccurrence = "Ifc Distribution board occurrence";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardOccurrence.IfcPset_DistributionBoardOccurrence_IsMain = "Is main";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardOccurrence.IfcPset_DistributionBoardOccurrence_IsSkilledOperator = "Is skilled operator";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon = "Ifc Distribution board type common";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon.IfcPset_DistributionBoardTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon.IfcPset_DistributionBoardTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon.IfcPset_DistributionBoardTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon.IfcPset_DistributionBoardTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon.IfcPset_DistributionBoardTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon.IfcPset_DistributionBoardTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon.IfcPset_DistributionBoardTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon.IfcPset_DistributionBoardTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionBoardTypeCommon.IfcPset_DistributionBoardTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon = "Ifc Distribution chamber element common";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon.IfcPset_DistributionChamberElementCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon.IfcPset_DistributionChamberElementCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon.IfcPset_DistributionChamberElementCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon.IfcPset_DistributionChamberElementCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon.IfcPset_DistributionChamberElementCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon.IfcPset_DistributionChamberElementCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon.IfcPset_DistributionChamberElementCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon.IfcPset_DistributionChamberElementCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementCommon.IfcPset_DistributionChamberElementCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeFormedDuct = "Ifc Distribution chamber element type formed duct";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeFormedDuct.IfcPset_DistributionChamberElementTypeFormedDuct_ClearWidth = "Clear width";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeFormedDuct.IfcPset_DistributionChamberElementTypeFormedDuct_ClearDepth = "Clear depth";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeFormedDuct.IfcPset_DistributionChamberElementTypeFormedDuct_WallThickness = "Wall thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeFormedDuct.IfcPset_DistributionChamberElementTypeFormedDuct_BaseThickness = "Base thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeFormedDuct.IfcPset_DistributionChamberElementTypeFormedDuct_AccessCoverLoadRating = "Access cover load rating";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber = "Ifc Distribution chamber element type inspection chamber";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_ChamberLengthOrRadius = "Chamber length or radius";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_ChamberWidth = "Chamber width";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_InvertLevel = "Invert level";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_SoffitLevel = "Soffit level";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_WallThickness = "Wall thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_BaseThickness = "Base thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_WithBackdrop = "With backdrop";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_AccessLengthOrRadius = "Access length or radius";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_AccessWidth = "Access width";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionChamber.IfcPset_DistributionChamberElementTypeInspectionChamber_AccessCoverLoadRating = "Access cover load rating";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionPit = "Ifc Distribution chamber element type inspection pit";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionPit.IfcPset_DistributionChamberElementTypeInspectionPit_Length = "Length";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionPit.IfcPset_DistributionChamberElementTypeInspectionPit_Width = "Width";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeInspectionPit.IfcPset_DistributionChamberElementTypeInspectionPit_Depth = "Depth";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole = "Ifc Distribution chamber element type manhole";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_InvertLevel = "Invert level";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_SoffitLevel = "Soffit level";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_WallThickness = "Wall thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_BaseThickness = "Base thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_IsShallow = "Is shallow";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_HasSteps = "Has steps";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_WithBackdrop = "With backdrop";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_AccessLengthOrRadius = "Access length or radius";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_AccessWidth = "Access width";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeManhole.IfcPset_DistributionChamberElementTypeManhole_AccessCoverLoadRating = "Access cover load rating";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeMeterChamber = "Ifc Distribution chamber element type meter chamber";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeMeterChamber.IfcPset_DistributionChamberElementTypeMeterChamber_ChamberLengthOrRadius = "Chamber length or radius";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeMeterChamber.IfcPset_DistributionChamberElementTypeMeterChamber_ChamberWidth = "Chamber width";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeMeterChamber.IfcPset_DistributionChamberElementTypeMeterChamber_WallThickness = "Wall thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeMeterChamber.IfcPset_DistributionChamberElementTypeMeterChamber_BaseThickness = "Base thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeSump = "Ifc Distribution chamber element type sump";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeSump.IfcPset_DistributionChamberElementTypeSump_Length = "Length";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeSump.IfcPset_DistributionChamberElementTypeSump_Width = "Width";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeSump.IfcPset_DistributionChamberElementTypeSump_InvertLevel = "Invert level";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeTrench = "Ifc Distribution chamber element type trench";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeTrench.IfcPset_DistributionChamberElementTypeTrench_Width = "Width";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeTrench.IfcPset_DistributionChamberElementTypeTrench_Depth = "Depth";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeTrench.IfcPset_DistributionChamberElementTypeTrench_InvertLevel = "Invert level";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeValveChamber = "Ifc Distribution chamber element type valve chamber";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeValveChamber.IfcPset_DistributionChamberElementTypeValveChamber_ChamberLengthOrRadius = "Chamber length or radius";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeValveChamber.IfcPset_DistributionChamberElementTypeValveChamber_ChamberWidth = "Chamber width";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeValveChamber.IfcPset_DistributionChamberElementTypeValveChamber_WallThickness = "Wall thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionChamberElementTypeValveChamber.IfcPset_DistributionChamberElementTypeValveChamber_BaseThickness = "Base thickness";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon = "Ifc Distribution flow element common (Deprecated)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon.IfcPset_DistributionFlowElementCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon.IfcPset_DistributionFlowElementCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon.IfcPset_DistributionFlowElementCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon.IfcPset_DistributionFlowElementCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon.IfcPset_DistributionFlowElementCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon.IfcPset_DistributionFlowElementCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon.IfcPset_DistributionFlowElementCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon.IfcPset_DistributionFlowElementCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionFlowElementCommon.IfcPset_DistributionFlowElementCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemCommon = "Ifc Distribution system common";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemCommon.IfcPset_DistributionSystemCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical = "Ifc Distribution system type electrical";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType = "Electrical system type";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType.Range.Equal.TN = "TN";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType.Range.Equal.TN_C = "TN C";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType.Range.Equal.TN_S = "TN S";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType.Range.Equal.TN_C_S = "TN C S";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType.Range.Equal.TT = "TT";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType.Range.Equal.IT = "IT";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemCategory = "Electrical system category";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemCategory.Range.Equal.HIGHVOLTAGE = "High voltage";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemCategory.Range.Equal.LOWVOLTAGE = "Low voltage";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemCategory.Range.Equal.EXTRALOWVOLTAGE = "Extra low voltage";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemCategory.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemCategory.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_ElectricalSystemCategory.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_Diversity = "Diversity";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_NumberOfLiveConductors = "Number of live conductors";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_MaximumAllowedVoltageDrop = "Maximum allowed voltage drop";
PLMPipingHVACRacewayIfc.IfcPset_DistributionSystemTypeElectrical.IfcPset_DistributionSystemTypeElectrical_NetImpedance = "Net impedance";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingOccurrence = "Ifc Duct fitting occurrence";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingOccurrence.IfcPset_DuctFittingOccurrence_InteriorRoughnessCoefficient = "Interior roughness coefficient";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingOccurrence.IfcPset_DuctFittingOccurrence_HasLiner = "Has liner";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingOccurrence.IfcPset_DuctFittingOccurrence_Color = "Color";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon = "Ifc Duct fitting type common";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_PressureClass = "Pressure class";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_PressureRange = "Pressure range";
PLMPipingHVACRacewayIfc.IfcPset_DuctFittingTypeCommon.IfcPset_DuctFittingTypeCommon_TemperatureRange = "Temperature range";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentOccurrence = "Ifc Duct segment occurrence";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentOccurrence.IfcPset_DuctSegmentOccurrence_InteriorRoughnessCoefficient = "Interior roughness coefficient";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentOccurrence.IfcPset_DuctSegmentOccurrence_HasLiner = "Has liner";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentOccurrence.IfcPset_DuctSegmentOccurrence_Color = "Color";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon = "Ifc Duct segment type common";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Shape = "Shape";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Shape.Range.Equal.FLATOVAL = "Flat-oval";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Shape.Range.Equal.RECTANGULAR = "Rectangular";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Shape.Range.Equal.ROUND = "Round";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Shape.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Shape.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Shape.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_WorkingPressure = "Working pressure";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_PressureRange = "Pressure range";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_TemperatureRange = "Temperature range";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_LongitudinalSeam = "Longitudinal seam";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_Reinforcement = "Reinforcement";
PLMPipingHVACRacewayIfc.IfcPset_DuctSegmentTypeCommon.IfcPset_DuctSegmentTypeCommon_ReinforcementSpacing = "Reinforcement spacing";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon = "Ifc Duct silencer type common";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_HydraulicDiameter = "Hydraulic diameter";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Length = "Length";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_Weight = "Weight";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_AirFlowrateRange = "Air flowrate range";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_WorkingPressureRange = "Working pressure range";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_TemperatureRange = "Temperature range";
PLMPipingHVACRacewayIfc.IfcPset_DuctSilencerTypeCommon.IfcPset_DuctSilencerTypeCommon_HasExteriorInsulation = "Has exterior insulation";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon = "Ifc Electrical device common";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_RatedCurrent = "Rated current";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_RatedVoltage = "Rated voltage";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_NominalFrequencyRange = "Nominal frequency range";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_PowerFactor = "Power factor";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction = "Conductor function";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction.Range.Equal.PHASE_L1 = "Phase L1";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction.Range.Equal.PHASE_L2 = "Phase L2";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction.Range.Equal.PHASE_L3 = "Phase L3";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction.Range.Equal.NEUTRAL = "Neutral";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction.Range.Equal.PROTECTIVEEARTH = "Protective earth";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction.Range.Equal.PROTECTIVEEARTHNEUTRAL = "Protective earth neutral";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_ConductorFunction.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_NumberOfPoles = "Number of poles";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_HasProtectiveEarth = "Has protective earth";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_InsulationStandardClass = "Insulation standard class";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_InsulationStandardClass.Range.Equal.CLASS0APPLIANCE = "Class 0 appliance";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_InsulationStandardClass.Range.Equal.CLASS0IAPPLIANCE = "Class 0I appliance";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_InsulationStandardClass.Range.Equal.CLASSIAPPLIANCE = "Class I appliance";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_InsulationStandardClass.Range.Equal.CLASSIIAPPLIANCE = "Class II appliance";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_InsulationStandardClass.Range.Equal.CLASSIIIAPPLIANCE = "Class III appliance";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_InsulationStandardClass.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_InsulationStandardClass.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_InsulationStandardClass.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_IP_Code = "IP code";
PLMPipingHVACRacewayIfc.IfcPset_ElectricalDeviceCommon.IfcPset_ElectricalDeviceCommon_IK_Code = "IK code";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon = "Ifc Electric appliance type common";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon.IfcPset_ElectricApplianceTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon.IfcPset_ElectricApplianceTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon.IfcPset_ElectricApplianceTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon.IfcPset_ElectricApplianceTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon.IfcPset_ElectricApplianceTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon.IfcPset_ElectricApplianceTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon.IfcPset_ElectricApplianceTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon.IfcPset_ElectricApplianceTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeCommon.IfcPset_ElectricApplianceTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher = "Ifc Electric appliance type dishwasher";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher.IfcPset_ElectricApplianceTypeDishwasher_DishwasherType = "Dishwasher type";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher.IfcPset_ElectricApplianceTypeDishwasher_DishwasherType.Range.Equal.POTWASHER = "Pot washer";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher.IfcPset_ElectricApplianceTypeDishwasher_DishwasherType.Range.Equal.TRAYWASHER = "Tray washer";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher.IfcPset_ElectricApplianceTypeDishwasher_DishwasherType.Range.Equal.DISHWASHER = "Dish washer";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher.IfcPset_ElectricApplianceTypeDishwasher_DishwasherType.Range.Equal.BOTTLEWASHER = "Bottle washer";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher.IfcPset_ElectricApplianceTypeDishwasher_DishwasherType.Range.Equal.CUTLERYWASHER = "Cutlery washer";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher.IfcPset_ElectricApplianceTypeDishwasher_DishwasherType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher.IfcPset_ElectricApplianceTypeDishwasher_DishwasherType.Range.Equal.UNKNOWN = "Unknown";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeDishwasher.IfcPset_ElectricApplianceTypeDishwasher_DishwasherType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker = "Ifc Electric appliance type electric cooker";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType = "Electric cooker type";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType.Range.Equal.STEAMCOOKER = "Steam cooker";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType.Range.Equal.DEEPFRYER = "Deep fryer";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType.Range.Equal.STOVE = "Stove";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType.Range.Equal.OVEN = "Oven";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType.Range.Equal.TILTINGFRYINGPAN = "Tilting frying pan";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType.Range.Equal.COOKINGKETTLE = "Cooking kettle";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType.Range.Equal.UNKNOWN = "Unknown";
PLMPipingHVACRacewayIfc.IfcPset_ElectricApplianceTypeElectricCooker.IfcPset_ElectricApplianceTypeElectricCooker_ElectricCookerType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon = "Ifc Electric flow storage device type common";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_NominalSupplyVoltage = "Nominal supply voltage";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_NominalSupplyVoltageOffset = "Nominal supply voltage offset";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_NominalFrequency = "Nominal frequency";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction = "Connected conductor function";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction.Range.Equal.PHASE_L1 = "Phase L1";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction.Range.Equal.PHASE_L2 = "Phase L2";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction.Range.Equal.PHASE_L3 = "Phase L3";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction.Range.Equal.NEUTRAL = "Neutral";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction.Range.Equal.PROTECTIVEEARTH = "Protective earth";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction.Range.Equal.PROTECTIVEEARTHNEUTRAL = "Protective earth neutral";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ConnectedConductorFunction.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ShortCircuit3PoleMaximumState = "Short circuit3 pole maximum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ShortCircuit3PolePowerFactorMaximumState = "Short circuit3 pole power factor maximum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ShortCircuit2PoleMinimumState = "Short circuit2 pole minimum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ShortCircuit2PolePowerFactorMinimumState = "Short circuit2 pole power factor minimum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ShortCircuit1PoleMaximumState = "Short circuit1 pole maximum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ShortCircuit1PolePowerFactorMaximumState = "Short circuit1 pole power factor maximum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ShortCircuit1PoleMinimumState = "Short circuit1 pole minimum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_ShortCircuit1PolePowerFactorMinimumState = "Short circuit1 pole power factor minimum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_EarthFault1PoleMaximumState = "Earth fault1 pole maximum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_EarthFault1PolePowerFactorMaximumState = "Earth fault1 pole power factor maximum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_EarthFault1PoleMinimumState = "Earth fault1 pole minimum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricFlowStorageDeviceTypeCommon.IfcPset_ElectricFlowStorageDeviceTypeCommon_EarthFault1PolePowerFactorMinimumState = "Earth fault1 pole power factor minimum state";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon = "Ifc Electric generator type common";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_ElectricGeneratorEfficiency = "Electric generator efficiency";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_StartCurrentFactor = "Start current factor";
PLMPipingHVACRacewayIfc.IfcPset_ElectricGeneratorTypeCommon.IfcPset_ElectricGeneratorTypeCommon_MaximumPowerOutput = "Maximum power output";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon = "Ifc Electric motor type common";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_MaximumPowerOutput = "Maximum power output";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_ElectricMotorEfficiency = "Electric motor efficiency";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_StartCurrentFactor = "Start current factor";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_StartingTime = "Starting time";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_TeTime = "Te time";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_LockedRotorCurrent = "Locked rotor current";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_MotorEnclosureType = "Motor enclosure type";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_MotorEnclosureType.Range.Equal.OPENDRIPPROOF = "Open drip proof";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_MotorEnclosureType.Range.Equal.TOTALLYENCLOSEDAIROVER = "Totally enclosed air over";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_MotorEnclosureType.Range.Equal.TOTALLYENCLOSEDFANCOOLED = "Totally enclosed fan cooled";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_MotorEnclosureType.Range.Equal.TOTALLYENCLOSEDNONVENTILATED = "Totally enclosed nonventilated";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_MotorEnclosureType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_MotorEnclosureType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_MotorEnclosureType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_FrameSize = "Frame size";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_IsGuarded = "Is guarded";
PLMPipingHVACRacewayIfc.IfcPset_ElectricMotorTypeCommon.IfcPset_ElectricMotorTypeCommon_HasPartWinding = "Has part winding";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon = "Ifc Electric time control type common";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon.IfcPset_ElectricTimeControlTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon.IfcPset_ElectricTimeControlTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon.IfcPset_ElectricTimeControlTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon.IfcPset_ElectricTimeControlTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon.IfcPset_ElectricTimeControlTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon.IfcPset_ElectricTimeControlTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon.IfcPset_ElectricTimeControlTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon.IfcPset_ElectricTimeControlTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ElectricTimeControlTypeCommon.IfcPset_ElectricTimeControlTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon = "Ifc Engine type common";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource = "Energy source";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.DIESEL = "Diesel";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.GASOLINE = "Gasoline";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.NATURALGAS = "Natural gas";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.PROPANE = "Propane";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.BIODIESEL = "Biodiesel";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.SEWAGEGAS = "Sewage gas";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.HYDROGEN = "Hydrogen";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.BIFUEL = "Bifuel";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.UNKNOWN = "Unknown";
PLMPipingHVACRacewayIfc.IfcPset_EngineTypeCommon.IfcPset_EngineTypeCommon_EnergySource.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon = "Ifc Evaporative cooler type common";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_FlowArrangement = "Flow arrangement";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_FlowArrangement.Range.Equal.COUNTERFLOW = "Counter flow";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_FlowArrangement.Range.Equal.CROSSFLOW = "Cross flow";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_FlowArrangement.Range.Equal.PARALLELFLOW = "Parallel flow";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_FlowArrangement.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_FlowArrangement.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_FlowArrangement.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_HeatExchangeArea = "Heat exchange area";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_OperationTemperatureRange = "Operation temperature range";
PLMPipingHVACRacewayIfc.IfcPset_EvaporativeCoolerTypeCommon.IfcPset_EvaporativeCoolerTypeCommon_WaterRequirement = "Water requirement";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon = "Ifc Evaporator type common";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorMediumType = "Evaporator medium type";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorMediumType.Range.Equal.COLDLIQUID = "Cold liquid";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorMediumType.Range.Equal.COLDAIR = "Cold air";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorMediumType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorMediumType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorMediumType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorCoolant = "Evaporator coolant";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorCoolant.Range.Equal.WATER = "Water";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorCoolant.Range.Equal.BRINE = "Brine";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorCoolant.Range.Equal.GLYCOL = "Glycol";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorCoolant.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorCoolant.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_EvaporatorCoolant.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass = "Refrigerant class";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.CFC = "Cfc";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.HCFC = "Hcfc";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.HFC = "Hfc";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.HYDROCARBONS = "Hydrocarbons";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.AMMONIA = "Ammonia";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.CO2 = "Co2";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.H2O = "H2o";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_RefrigerantClass.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_ExternalSurfaceArea = "External surface area";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_InternalSurfaceArea = "Internal surface area";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_InternalRefrigerantVolume = "Internal refrigerant volume";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_InternalWaterVolume = "Internal water volume";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_NominalHeatTransferArea = "Nominal heat transfer area";
PLMPipingHVACRacewayIfc.IfcPset_EvaporatorTypeCommon.IfcPset_EvaporatorTypeCommon_NominalHeatTransferCoefficient = "Nominal heat transfer coefficient";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal = "Ifc Fan centrifugal";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition = "Discharge position";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.TOPHORIZONTAL = "Top horizontal";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.TOPANGULARDOWN = "Top angular down";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.TOPANGULARUP = "Top angular up";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.DOWNBLAST = "Down blast";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.BOTTOMANGULARDOWN = "Bottom angular down";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.BOTTOMHORIZONTAL = "Bottom horizontal";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.BOTTOMANGULARUP = "Bottom angular up";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.UPBLAST = "Upblast";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DischargePosition.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DirectionOfRotation = "Direction of rotation";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DirectionOfRotation.Range.Equal.CLOCKWISE = "Clockwise";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DirectionOfRotation.Range.Equal.COUNTERCLOCKWISE = "Counter-clockwise";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DirectionOfRotation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DirectionOfRotation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_DirectionOfRotation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement = "Arrangement";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.ARRANGEMENT1 = "Arrangement1";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.ARRANGEMENT2 = "Arrangement2";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.ARRANGEMENT3 = "Arrangement3";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.ARRANGEMENT4 = "Arrangement4";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.ARRANGEMENT7 = "Arrangement7";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.ARRANGEMENT8 = "Arrangement8";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.ARRANGEMENT9 = "Arrangement9";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.ARRANGEMENT10 = "Arrangement10";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanCentrifugal.IfcPset_FanCentrifugal_Arrangement.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence = "Ifc Fan occurrence";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_DischargeType = "Discharge type";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_DischargeType.Range.Equal.DUCT = "Duct";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_DischargeType.Range.Equal.SCREEN = "Screen";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_DischargeType.Range.Equal.LOUVER = "Louver";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_DischargeType.Range.Equal.DAMPER = "Damper";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_DischargeType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_DischargeType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_DischargeType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_ApplicationOfFan = "Application of fan";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_ApplicationOfFan.Range.Equal.SUPPLYAIR = "Supply air";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_ApplicationOfFan.Range.Equal.RETURNAIR = "Return air";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_ApplicationOfFan.Range.Equal.EXHAUSTAIR = "Exhaust air";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_ApplicationOfFan.Range.Equal.COOLINGTOWER = "Cooling tower";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_ApplicationOfFan.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_ApplicationOfFan.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_ApplicationOfFan.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_CoilPosition = "Coil position";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_CoilPosition.Range.Equal.DRAWTHROUGH = "Draw through";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_CoilPosition.Range.Equal.BLOWTHROUGH = "Blow through";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_CoilPosition.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_CoilPosition.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_CoilPosition.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_MotorPosition = "Motor position";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_MotorPosition.Range.Equal.INAIRSTREAM = "In air stream";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_MotorPosition.Range.Equal.OUTOFAIRSTREAM = "Out of air stream";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_MotorPosition.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_MotorPosition.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_MotorPosition.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType = "Fan mounting type";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType.Range.Equal.MANUFACTUREDCURB = "Manufactured curb";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType.Range.Equal.FIELDERECTEDCURB = "Field erected curb";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType.Range.Equal.CONCRETEPAD = "Concrete pad";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType.Range.Equal.SUSPENDED = "Suspended";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType.Range.Equal.WALLMOUNTED = "Wall mounted";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType.Range.Equal.DUCTMOUNTED = "Duct mounted";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FanMountingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_FractionOfMotorHeatToAirStream = "Fraction of motor heat to air stream";
PLMPipingHVACRacewayIfc.IfcPset_FanOccurrence.IfcPset_FanOccurrence_ImpellerDiameter = "Impeller diameter";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon = "Ifc Fan type common";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_MotorDriveType = "Motor drive type";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_MotorDriveType.Range.Equal.DIRECTDRIVE = "Direct drive";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_MotorDriveType.Range.Equal.BELTDRIVE = "Belt drive";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_MotorDriveType.Range.Equal.COUPLING = "Coupling";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_MotorDriveType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_MotorDriveType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_MotorDriveType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_CapacityControlType = "Capacity control type";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_CapacityControlType.Range.Equal.INLETVANE = "Inlet vane";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_CapacityControlType.Range.Equal.VARIABLESPEEDDRIVE = "Variable speed drive";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_CapacityControlType.Range.Equal.BLADEPITCHANGLE = "Blade pitch angle";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_CapacityControlType.Range.Equal.TWOSPEED = "Two speed";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_CapacityControlType.Range.Equal.DISCHARGEDAMPER = "Discharge damper";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_CapacityControlType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_CapacityControlType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_CapacityControlType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_OperationTemperatureRange = "Operation temperature range";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_NominalAirFlowRate = "Nominal air flow rate";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_NominalTotalPressure = "Nominal total pressure";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_NominalStaticPressure = "Nominal static pressure";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_NominalRotationSpeed = "Nominal rotation speed";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_NominalPowerRate = "Nominal power rate";
PLMPipingHVACRacewayIfc.IfcPset_FanTypeCommon.IfcPset_FanTypeCommon_OperationalCriteria = "Operational criteria";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter = "Ifc Filter type air particle filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType = "Air particle filter type";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.COARSEMETALSCREEN = "Coarse metal screen";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.COARSECELLFOAMS = "Coarse cell foams";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.COARSESPUNGLASS = "Coarse spun glass";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.MEDIUMELECTRETFILTER = "Medium electret filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.MEDIUMNATURALFIBERFILTER = "Medium natural fiber filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.HEPAFILTER = "Hepa filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.ULPAFILTER = "Ulpa filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.MEMBRANEFILTERS = "Membrane filters";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.RENEWABLEMOVINGCURTIANDRYMEDIAFILTER = "Renewable moving curtian dry media filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.ELECTRICALFILTER = "Electrical filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.ROLLFORM = "Roll form";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.ADHESIVERESERVOIR = "Adhesive reservoir";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_AirParticleFilterType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_SeparationType = "Separation type";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_SeparationType.Range.Equal.BAG = "Bag";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_SeparationType.Range.Equal.PLEAT = "Pleat";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_SeparationType.Range.Equal.TREADSEPARATION = "Tread separation";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_SeparationType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_SeparationType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_SeparationType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_DustHoldingCapacity = "Dust holding capacity";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_FaceSurfaceArea = "Face surface area";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_MediaExtendedArea = "Media extended area";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_NominalCountedEfficiency = "Nominal counted efficiency";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeAirParticleFilter.IfcPset_FilterTypeAirParticleFilter_NominalWeightedEfficiency = "Nominal weighted efficiency";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon = "Ifc Filter type common";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_Weight = "Weight";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_InitialResistance = "Initial resistance";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_FinalResistance = "Final resistance";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_OperationTemperatureRange = "Operation temperature range";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_FlowRateRange = "Flow rate range";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_NominalFilterFaceVelocity = "Nominal filter face velocity";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_NominalMediaSurfaceVelocity = "Nominal media surface velocity";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_NominalPressureDrop = "Nominal pressure drop";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_NominalFlowrate = "Nominal flowrate";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_NominalParticleGeometricMeanDiameter = "Nominal particle geometric mean diameter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCommon.IfcPset_FilterTypeCommon_NominalParticleGeometricStandardDeviation = "Nominal particle geometric standard deviation";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter = "Ifc Filter type compressed air filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_CompressedAirFilterType = "Compressed air filter type";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_CompressedAirFilterType.Range.Equal.ACTIVATEDCARBON = "Activated carbon";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_CompressedAirFilterType.Range.Equal.PARTICLE_FILTER = "Particle filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_CompressedAirFilterType.Range.Equal.COALESCENSE_FILTER = "Coalescense filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_CompressedAirFilterType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_CompressedAirFilterType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_CompressedAirFilterType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_OperationPressureMax = "Operation pressure max";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_AutomaticCondensateDischarge = "Automatic condensate discharge";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeCompressedAirFilter.IfcPset_FilterTypeCompressedAirFilter_CloggingIndicator = "Clogging indicator";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter = "Ifc Filter type water filter";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter.IfcPset_FilterTypeWaterFilter_WaterFilterType = "Water filter type";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter.IfcPset_FilterTypeWaterFilter_WaterFilterType.Range.Equal.FILTRATION_DIATOMACEOUSEARTH = "Filtration diatomaceous earth";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter.IfcPset_FilterTypeWaterFilter_WaterFilterType.Range.Equal.FILTRATION_SAND = "Filtration sand";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter.IfcPset_FilterTypeWaterFilter_WaterFilterType.Range.Equal.PURIFICATION_DEIONIZING = "Purification deionizing";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter.IfcPset_FilterTypeWaterFilter_WaterFilterType.Range.Equal.PURIFICATION_REVERSEOSMOSIS = "Purification reverse osmosis";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter.IfcPset_FilterTypeWaterFilter_WaterFilterType.Range.Equal.SOFTENING_ZEOLITE = "Softening zeolite";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter.IfcPset_FilterTypeWaterFilter_WaterFilterType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter.IfcPset_FilterTypeWaterFilter_WaterFilterType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FilterTypeWaterFilter.IfcPset_FilterTypeWaterFilter_WaterFilterType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet = "Ifc Fire suppression terminal type breeching inlet";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_BreechingInletType = "Breeching inlet type";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_BreechingInletType.Range.Equal.TWOWAY = "Two-way";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_BreechingInletType.Range.Equal.FOURWAY = "Four-way";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_BreechingInletType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_BreechingInletType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_BreechingInletType.Range.Equal.NOTDEFINED = "Notdefined";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_InletDiameter = "Inlet diameter";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_OutletDiameter = "Outlet diameter";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_CouplingType = "Coupling type";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_CouplingType.Range.Equal.INSTANTANEOUS_FEMALE = "Instantaneous female";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_CouplingType.Range.Equal.INSTANTANEOUS_MALE = "Instantaneous male";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_CouplingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_CouplingType.Range.Equal.USERDEFINED = "User defined";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_CouplingType.Range.Equal.NOTDEFINED = "Notdefined";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeBreechingInlet.IfcPset_FireSuppressionTerminalTypeBreechingInlet_HasCaps = "Has caps";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon = "Ifc Fire suppression terminal type common";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon.IfcPset_FireSuppressionTerminalTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon.IfcPset_FireSuppressionTerminalTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon.IfcPset_FireSuppressionTerminalTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon.IfcPset_FireSuppressionTerminalTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon.IfcPset_FireSuppressionTerminalTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon.IfcPset_FireSuppressionTerminalTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon.IfcPset_FireSuppressionTerminalTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon.IfcPset_FireSuppressionTerminalTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeCommon.IfcPset_FireSuppressionTerminalTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant = "Ifc Fire suppression terminal type fire hydrant";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_FireHydrantType = "Fire hydrant type";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_FireHydrantType.Range.Equal.DRYBARREL = "Dry barrel";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_FireHydrantType.Range.Equal.WETBARREL = "Wet barrel";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_FireHydrantType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_FireHydrantType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_FireHydrantType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_PumperConnectionSize = "Pumper connection size";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_NumberOfHoseConnections = "Number of hose connections";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_HoseConnectionSize = "Hose connection size";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_DischargeFlowRate = "Discharge flow rate";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_FlowClass = "Flow class";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_WaterIsPotable = "Water is potable";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_PressureRating = "Pressure rating";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_BodyColor = "Body color";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeFireHydrant.IfcPset_FireSuppressionTerminalTypeFireHydrant_CapColor = "Cap color";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel = "Ifc Fire suppression terminal type hose reel";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelType = "Hose reel type";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelType.Range.Equal.RACK = "Rack";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelType.Range.Equal.REEL = "Reel";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelMountingType = "Hose reel mounting type";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelMountingType.Range.Equal.CABINET_RECESSED = "Cabinet recessed";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelMountingType.Range.Equal.CABINET_SEMIRECESSED = "Cabinet semirecessed";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelMountingType.Range.Equal.SURFACE = "Surface";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelMountingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelMountingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseReelMountingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_InletConnectionSize = "Inlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseDiameter = "Hose diameter";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseLength = "Hose length";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseNozzleType = "Hose nozzle type";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseNozzleType.Range.Equal.FOG = "Fog";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseNozzleType.Range.Equal.STRAIGHTSTREAM = "Straight stream";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseNozzleType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseNozzleType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_HoseNozzleType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_ClassOfService = "Class of service";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeHoseReel.IfcPset_FireSuppressionTerminalTypeHoseReel_ClassificationAuthority = "Classification authority";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler = "Ifc Fire suppression terminal type sprinkler";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType = "Sprinkler type";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.CEILING = "Ceiling";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.CONCEALED = "Concealed";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.CUTOFF = "Cut-off";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.PENDANT = "Pendant";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.RECESSEDPENDANT = "Recessed pendant";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.SIDEWALL = "Sidewall";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.UPRIGHT = "Upright";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_SprinklerType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Activation = "Activation";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Activation.Range.Equal.BULB = "Bulb";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Activation.Range.Equal.FUSIBLESOLDER = "Fusible solder";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Activation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Activation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Activation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Response = "Response";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Response.Range.Equal.QUICK = "Quick";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Response.Range.Equal.STANDARD = "Standard";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Response.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_Response.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_ActivationTemperature = "Activation temperature";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_CoverageArea = "Coverage area";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_HasDeflector = "Has deflector";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor = "Bulb liquid color";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor.Range.Equal.ORANGE = "Orange";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor.Range.Equal.RED = "Red";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor.Range.Equal.YELLOW = "Yellow";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor.Range.Equal.GREEN = "Green";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor.Range.Equal.BLUE = "Blue";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor.Range.Equal.MAUVE = "Mauve";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_BulbLiquidColor.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_DischargeFlowRate = "Discharge flow rate";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_ResidualFlowingPressure = "Residual flowing pressure";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_DischargeCoefficient = "Discharge coefficient";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_MaximumWorkingPressure = "Maximum working pressure";
PLMPipingHVACRacewayIfc.IfcPset_FireSuppressionTerminalTypeSprinkler.IfcPset_FireSuppressionTerminalTypeSprinkler_ConnectionSize = "Connection size";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterOccurrence = "Ifc Flow meter occurrence";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterOccurrence.IfcPset_FlowMeterOccurrence_Purpose = "Purpose";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterOccurrence.IfcPset_FlowMeterOccurrence_Purpose.Range.Equal.MASTER = "Master";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterOccurrence.IfcPset_FlowMeterOccurrence_Purpose.Range.Equal.SUBMASTER = "Submaster";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterOccurrence.IfcPset_FlowMeterOccurrence_Purpose.Range.Equal.SUBMETER = "Submeter";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterOccurrence.IfcPset_FlowMeterOccurrence_Purpose.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterOccurrence.IfcPset_FlowMeterOccurrence_Purpose.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterOccurrence.IfcPset_FlowMeterOccurrence_Purpose.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon = "Ifc Flow meter type common";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_ReadOutType = "Read out type";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_ReadOutType.Range.Equal.DIAL = "Dial";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_ReadOutType.Range.Equal.DIGITAL = "Digital";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_ReadOutType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_ReadOutType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_ReadOutType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeCommon.IfcPset_FlowMeterTypeCommon_RemoteReading = "Remote reading";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeEnergyMeter = "Ifc Flow meter type energy meter";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeEnergyMeter.IfcPset_FlowMeterTypeEnergyMeter_NominalCurrent = "Nominal current";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeEnergyMeter.IfcPset_FlowMeterTypeEnergyMeter_MaximumCurrent = "Maximum current";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeEnergyMeter.IfcPset_FlowMeterTypeEnergyMeter_MultipleTarriff = "Multiple tariffs";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter = "Ifc Flow meter type gas meter";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_GasType = "Gas type";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_GasType.Range.Equal.COMMERCIALBUTANE = "Commercial butane";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_GasType.Range.Equal.COMMERCIALPROPANE = "Commercial propane";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_GasType.Range.Equal.LIQUEFIEDPETROLEUMGAS = "Liquefied petroleum gas";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_GasType.Range.Equal.NATURALGAS = "Natural gas";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_GasType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_GasType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_GasType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_ConnectionSize = "Connection size";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_MaximumFlowRate = "Maximum flow rate";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeGasMeter.IfcPset_FlowMeterTypeGasMeter_MaximumPressureLoss = "Maximum pressure loss";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeOilMeter = "Ifc Flow meter type oil meter";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeOilMeter.IfcPset_FlowMeterTypeOilMeter_ConnectionSize = "Connection size";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeOilMeter.IfcPset_FlowMeterTypeOilMeter_MaximumFlowRate = "Maximum flow rate";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter = "Ifc Flow meter type water meter";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_Type = "Type";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_Type.Range.Equal.COMPOUND = "Compound";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_Type.Range.Equal.INFERENTIAL = "Inferential";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_Type.Range.Equal.PISTON = "Piston";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_Type.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_Type.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_Type.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_ConnectionSize = "Connection size";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_MaximumFlowRate = "Maximum flow rate";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_MaximumPressureLoss = "Maximum pressure loss";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType = "Backflow preventer type";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType.Range.Equal.ATMOSPHERICVACUUMBREAKER = "Atmospheric vacuum breaker";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType.Range.Equal.ANTISIPHONVALVE = "Antisiphon valve";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType.Range.Equal.DOUBLECHECKBACKFLOWPREVENTER = "Double check backflow preventer";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType.Range.Equal.PRESSUREVACUUMBREAKER = "Pressure vacuum breaker";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType.Range.Equal.REDUCEDPRESSUREBACKFLOWPREVENTER = "Reduced pressure backflow preventer";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_FlowMeterTypeWaterMeter.IfcPset_FlowMeterTypeWaterMeter_BackflowPreventerType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon = "Ifc Heat exchanger type common";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Arrangement = "Arrangement";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Arrangement.Range.Equal.COUNTERFLOW = "Counter flow";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Arrangement.Range.Equal.CROSSFLOW = "Cross flow";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Arrangement.Range.Equal.PARALLELFLOW = "Parallel flow";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Arrangement.Range.Equal.MULTIPASS = "Multipass";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Arrangement.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Arrangement.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypeCommon.IfcPset_HeatExchangerTypeCommon_Arrangement.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypePlate = "Ifc Heat exchanger type plate";
PLMPipingHVACRacewayIfc.IfcPset_HeatExchangerTypePlate.IfcPset_HeatExchangerTypePlate_NumberOfPlates = "Number of plates";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon = "Ifc Humidifier type common";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Application = "Application";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Application.Range.Equal.PORTABLE = "Portable";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Application.Range.Equal.FIXED = "Fixed";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Application.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Application.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Application.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_Weight = "Weight";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_NominalMoistureGain = "Nominal moisture gain";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_NominalAirFlowRate = "Nominal air flow rate";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_InternalControl = "Internal control";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_InternalControl.Range.Equal.ONOFF = "Onoff";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_InternalControl.Range.Equal.STEPPED = "Stepped";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_InternalControl.Range.Equal.MODULATING = "Modulating";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_InternalControl.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_InternalControl.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_InternalControl.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_InternalControl.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_HumidifierTypeCommon.IfcPset_HumidifierTypeCommon_WaterRequirement = "Water requirement";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon = "Ifc Interceptor type common";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_NominalBodyLength = "Nominal body length";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_NominalBodyWidth = "Nominal body width";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_NominalBodyDepth = "Nominal body depth";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_InletConnectionSize = "Inlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_OutletConnectionSize = "Outlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_CoverLength = "Cover length";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_CoverWidth = "Cover width";
PLMPipingHVACRacewayIfc.IfcPset_InterceptorTypeCommon.IfcPset_InterceptorTypeCommon_VentilatingPipeSize = "Ventilating pipe size";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon = "Ifc Junction box type common";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_NumberOfGangs = "Number of gangs";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_ClearDepth = "Clear depth";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_ShapeType = "Shape type";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_ShapeType.Range.Equal.RECTANGULAR = "Rectangular";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_ShapeType.Range.Equal.ROUND = "Round";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_ShapeType.Range.Equal.SLOT = "Slot";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_ShapeType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_ShapeType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_ShapeType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_PlacingType = "Placing type";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_PlacingType.Range.Equal.CEILING = "Ceiling";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_PlacingType.Range.Equal.FLOOR = "Floor";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_PlacingType.Range.Equal.WALL = "Wall";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_PlacingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_PlacingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_PlacingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_MountingType = "Mounting type";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_MountingType.Range.Equal.FACENAIL = "Facenail";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_MountingType.Range.Equal.SIDENAIL = "Sidenail";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_MountingType.Range.Equal.CUT_IN = "Cut in";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_MountingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_MountingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_MountingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_IsExternal = "Is external";
PLMPipingHVACRacewayIfc.IfcPset_JunctionBoxTypeCommon.IfcPset_JunctionBoxTypeCommon_IP_Code = "IP code";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon = "Ifc Lamp type common";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_ContributedLuminousFlux = "Contributed luminous flux";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LightEmitterNominalPower = "Light emitter nominal power";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampMaintenanceFactor = "Lamp maintenance factor";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampBallastType = "Lamp ballast type";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampBallastType.Range.Equal.CONVENTIONAL = "Conventional";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampBallastType.Range.Equal.ELECTRONIC = "Electronic";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampBallastType.Range.Equal.LOWLOSS = "Low loss";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampBallastType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampBallastType.Range.Equal.RESISTOR = "";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampBallastType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampBallastType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampCompensationType = "Lamp compensation type";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampCompensationType.Range.Equal.CAPACITIVE = "Capacitive";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampCompensationType.Range.Equal.INDUCTIVE = "Inductive";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampCompensationType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampCompensationType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_LampCompensationType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_ColorAppearance = "Color appearance";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_ColorTemperature = "Color temperature";
PLMPipingHVACRacewayIfc.IfcPset_LampTypeCommon.IfcPset_LampTypeCommon_ColorRenderingIndex = "Color rendering index";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon = "Ifc Light fixture type common";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_NumberOfSources = "Number of sources";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_TotalWattage = "Total wattage";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType = "Light fixture mounting type";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.CABLESPANNED = "Cable spanned";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.FREESTANDING = "Freestanding";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.POLE_SIDE = "Pole side";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.POLE_TOP = "Pole top";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.RECESSED = "Recessed";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.SURFACE = "Surface";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.SUSPENDED = "Suspended";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.TRACKMOUNTED = "Track mounted";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixtureMountingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixturePlacingType = "Light fixture placing type";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixturePlacingType.Range.Equal.CEILING = "Ceiling";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixturePlacingType.Range.Equal.FLOOR = "Floor";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixturePlacingType.Range.Equal.FURNITURE = "Furniture";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixturePlacingType.Range.Equal.POLE = "Pole";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixturePlacingType.Range.Equal.WALL = "Wall";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixturePlacingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixturePlacingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_LightFixturePlacingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_MaintenanceFactor = "Maintenance factor";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_MaximumPlenumSensibleLoad = "Maximum plenum sensible load";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_MaximumSpaceSensibleLoad = "Maximum space sensible load";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeCommon.IfcPset_LightFixtureTypeCommon_SensibleLoadToRadiant = "Sensible load to radiant";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting = "Ifc Light fixture type security lighting";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SecurityLightingType = "Security lighting type";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SecurityLightingType.Range.Equal.SAFETYLIGHT = "Safety light";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SecurityLightingType.Range.Equal.WARNINGLIGHT = "Warning light";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SecurityLightingType.Range.Equal.EMERGENCYEXITLIGHT = "Emergency exit light";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SecurityLightingType.Range.Equal.BLUEILLUMINATION = "Blue illumination";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SecurityLightingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SecurityLightingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SecurityLightingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_FixtureHeight = "Fixture height";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SelfTestFunction = "Self test function";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SelfTestFunction.Range.Equal.CENTRAL = "Central";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SelfTestFunction.Range.Equal.LOCAL = "Local";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SelfTestFunction.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SelfTestFunction.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SelfTestFunction.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_SelfTestFunction.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_BackupSupplySystem = "Backup supply system";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_BackupSupplySystem.Range.Equal.LOCALBATTERY = "Local battery";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_BackupSupplySystem.Range.Equal.CENTRALBATTERY = "Central battery";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_BackupSupplySystem.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_BackupSupplySystem.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_BackupSupplySystem.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_PictogramEscapeDirection = "Pictogram escape direction";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_PictogramEscapeDirection.Range.Equal.RIGHTARROW = "Right arrow";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_PictogramEscapeDirection.Range.Equal.LEFTARROW = "Left arrow";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_PictogramEscapeDirection.Range.Equal.DOWNARROW = "Down arrow";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_PictogramEscapeDirection.Range.Equal.UPARROW = "Up arrow";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_PictogramEscapeDirection.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_PictogramEscapeDirection.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_PictogramEscapeDirection.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_Addressablility = "Addressablility";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_Addressablility.Range.Equal.IMPLEMENTED = "Implemented";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_Addressablility.Range.Equal.UPGRADEABLETO = "Upgradeable to";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_Addressablility.Range.Equal.NOTIMPLEMENTED = "Not implemented";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_Addressablility.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_Addressablility.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_LightFixtureTypeSecurityLighting.IfcPset_LightFixtureTypeSecurityLighting_Addressablility.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon = "Ifc Medical device type common";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon.IfcPset_MedicalDeviceTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon.IfcPset_MedicalDeviceTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon.IfcPset_MedicalDeviceTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon.IfcPset_MedicalDeviceTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon.IfcPset_MedicalDeviceTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon.IfcPset_MedicalDeviceTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon.IfcPset_MedicalDeviceTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon.IfcPset_MedicalDeviceTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_MedicalDeviceTypeCommon.IfcPset_MedicalDeviceTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon = "Ifc Motor connection type common";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon.IfcPset_MotorConnectionTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon.IfcPset_MotorConnectionTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon.IfcPset_MotorConnectionTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon.IfcPset_MotorConnectionTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon.IfcPset_MotorConnectionTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon.IfcPset_MotorConnectionTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon.IfcPset_MotorConnectionTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon.IfcPset_MotorConnectionTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_MotorConnectionTypeCommon.IfcPset_MotorConnectionTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon = "Ifc Outlet type common";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_IsPluggableOutlet = "Is pluggable outlet";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_IsPluggableOutlet.Range.Equal.TRUE = "True";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_IsPluggableOutlet.Range.Equal.FALSE = "False";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_IsPluggableOutlet.Range.Equal.UNKNOWN = "Unknown";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommon.IfcPset_OutletTypeCommon_NumberOfSockets = "Number of sockets";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommunication = "Ifc Outlet type communication";
PLMPipingHVACRacewayIfc.IfcPset_OutletTypeCommunication.IfcPset_OutletTypeCommunication_IsWireLess = "Is wireless";
PLMPipingHVACRacewayIfc.IfcPset_PipeConnectionFlanged = "Ifc Pipe connection flanged";
PLMPipingHVACRacewayIfc.IfcPset_PipeConnectionFlanged.IfcPset_PipeConnectionFlanged_FlangeTable = "Flange table";
PLMPipingHVACRacewayIfc.IfcPset_PipeConnectionFlanged.IfcPset_PipeConnectionFlanged_FlangeStandard = "Flange standard";
PLMPipingHVACRacewayIfc.IfcPset_PipeConnectionFlanged.IfcPset_PipeConnectionFlanged_BoreSize = "Bore size";
PLMPipingHVACRacewayIfc.IfcPset_PipeConnectionFlanged.IfcPset_PipeConnectionFlanged_FlangeDiameter = "Flange diameter";
PLMPipingHVACRacewayIfc.IfcPset_PipeConnectionFlanged.IfcPset_PipeConnectionFlanged_FlangeThickness = "Flange thickness";
PLMPipingHVACRacewayIfc.IfcPset_PipeConnectionFlanged.IfcPset_PipeConnectionFlanged_NumberOfBoltholes = "Number of bolt holes";
PLMPipingHVACRacewayIfc.IfcPset_PipeConnectionFlanged.IfcPset_PipeConnectionFlanged_BoltSize = "Bolt size";
PLMPipingHVACRacewayIfc.IfcPset_PipeConnectionFlanged.IfcPset_PipeConnectionFlanged_BoltholePitch = "Bolt hole pitch";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingOccurrence = "Ifc Pipe fitting occurrence";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingOccurrence.IfcPset_PipeFittingOccurrence_InteriorRoughnessCoefficient = "Interior roughness coefficient";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingOccurrence.IfcPset_PipeFittingOccurrence_Color = "Color";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeBend = "Ifc Pipe fitting type bend";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeBend.IfcPset_PipeFittingTypeBend_BendAngle = "Bend angle";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeBend.IfcPset_PipeFittingTypeBend_BendRadius = "Bend radius";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon = "Ifc Pipe fitting type common";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_PressureClass = "Pressure class";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_PressureRange = "Pressure range";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeCommon.IfcPset_PipeFittingTypeCommon_TemperatureRange = "Temperature range";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction = "Ifc Pipe fitting type junction";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionType = "Junction type";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionType.Range.Equal.TEE = "Tee";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionType.Range.Equal.CROSS = "Cross";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionLeftAngle = "Junction left angle";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionLeftRadius = "Junction left radius";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionRightAngle = "Junction right angle";
PLMPipingHVACRacewayIfc.IfcPset_PipeFittingTypeJunction.IfcPset_PipeFittingTypeJunction_JunctionRightRadius = "Junction right radius";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentOccurrence = "Ifc Pipe segment occurrence";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentOccurrence.IfcPset_PipeSegmentOccurrence_InteriorRoughnessCoefficient = "Interior roughness coefficient";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentOccurrence.IfcPset_PipeSegmentOccurrence_Color = "Color";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentOccurrence.IfcPset_PipeSegmentOccurrence_Gradient = "Gradient";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentOccurrence.IfcPset_PipeSegmentOccurrence_InvertElevation = "Invert elevation";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon = "Ifc Pipe segment type common";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_WorkingPressure = "Working pressure";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_PressureRange = "Pressure range";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_TemperatureRange = "Temperature range";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCommon.IfcPset_PipeSegmentTypeCommon_NominalDiameter = "Nominal diameter";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCulvert = "Ifc Pipe segment type culvert";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCulvert.IfcPset_PipeSegmentTypeCulvert_InternalWidth = "Internal width";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeCulvert.IfcPset_PipeSegmentTypeCulvert_ClearDepth = "Clear depth";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeGutter = "Ifc Pipe segment type gutter";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeGutter.IfcPset_PipeSegmentTypeGutter_Slope = "Slope";
PLMPipingHVACRacewayIfc.IfcPset_PipeSegmentTypeGutter.IfcPset_PipeSegmentTypeGutter_FlowRating = "Flow rating";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve = "Ifc Protective device breaker unit I2T curve";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel = "Voltage level";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel.Range.Equal.U230 = "U230";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel.Range.Equal.U400 = "U400";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel.Range.Equal.U440 = "U440";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel.Range.Equal.U525 = "U525";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel.Range.Equal.U690 = "U690";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel.Range.Equal.U1000 = "U1000";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_VoltageLevel.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TCurve_NominalCurrent = "Nominal current";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve = "Ifc Protective device breaker unit i2t fuse curve";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel = "Voltage level";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel.Range.Equal.U230 = "U230";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel.Range.Equal.U400 = "U400";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel.Range.Equal.U440 = "U440";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel.Range.Equal.U525 = "U525";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel.Range.Equal.U690 = "U690";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel.Range.Equal.U1000 = "U1000";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve.IfcPset_ProtectiveDeviceBreakerUnitI2TFuseCurve_VoltageLevel.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve = "Ifc Protective device breaker unit IPI curve";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel = "Voltage level";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel.Range.Equal.U230 = "U230";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel.Range.Equal.U400 = "U400";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel.Range.Equal.U440 = "U440";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel.Range.Equal.U525 = "U525";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel.Range.Equal.U690 = "U690";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel.Range.Equal.U1000 = "U1000";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_VoltageLevel.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitIPICurve.IfcPset_ProtectiveDeviceBreakerUnitIPICurve_NominalCurrent = "Nominal current";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB = "Ifc Protective device breaker unit type m c b";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_PowerLoss = "Power loss";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel = "Voltage level";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel.Range.Equal.U230 = "U230";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel.Range.Equal.U400 = "U400";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel.Range.Equal.U440 = "U440";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel.Range.Equal.U525 = "U525";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel.Range.Equal.U690 = "U690";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel.Range.Equal.U1000 = "U1000";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_VoltageLevel.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_NominalCurrents = "Nominal currents";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_ICU60947 = "ICU60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_ICS60947 = "ICS60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_ICN60898 = "ICN60898";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB.IfcPset_ProtectiveDeviceBreakerUnitTypeMCB_ICS60898 = "ICS60898";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection = "Ifc Protective device breaker unit type motor protection";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_PerformanceClasses = "Performance classes";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel = "Voltage level";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel.Range.Equal.U230 = "U230";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel.Range.Equal.U400 = "U400";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel.Range.Equal.U440 = "U440";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel.Range.Equal.U525 = "U525";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel.Range.Equal.U690 = "U690";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel.Range.Equal.U1000 = "U1000";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_VoltageLevel.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_ICU60947 = "ICU60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_ICS60947 = "ICS60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_ICW60947 = "ICW60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection.IfcPset_ProtectiveDeviceBreakerUnitTypeMotorProtection_ICM60947 = "ICM60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence = "Ifc Protective device occurrence";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage = "Pole usage";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage.Range.Equal.1P = "1 P";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage.Range.Equal.2P = "2 P";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage.Range.Equal.3P = "3 P";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage.Range.Equal.4P = "4 P";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage.Range.Equal.1PN = "1 PN";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage.Range.Equal.3PN = "3 PN";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_PoleUsage.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_LongTimeFunction = "Long time function";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_ShortTimeFunction = "Short time function";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_ShortTimei2tFunction = "Short time i2t function";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_GroundFaultFunction = "Ground fault function";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_GroundFaulti2tFunction = "Ground fault i2t function";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_LongTimeCurrentSetValue = "Long time current set value";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_ShortTimeCurrentSetValue = "Short time current set value";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_InstantaneousCurrentSetValue = "Instantaneous current set value";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_GroundFaultCurrentSetValue = "Ground fault current set value";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_LongTimeDelay = "Long time delay";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_ShortTimeTrippingTime = "Short time tripping time";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_InstantaneousTrippingTime = "Instantaneous tripping time";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceOccurrence.IfcPset_ProtectiveDeviceOccurrence_GroundFaultTrippingTime = "Ground fault tripping time";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingCurve = "Ifc Protective device tripping curve";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingCurve.IfcPset_ProtectiveDeviceTrippingCurve_TrippingCurveType = "Tripping curve type";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingCurve.IfcPset_ProtectiveDeviceTrippingCurve_TrippingCurveType.Range.Equal.UPPER = "Upper";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingCurve.IfcPset_ProtectiveDeviceTrippingCurve_TrippingCurveType.Range.Equal.LOWER = "Lower";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingCurve.IfcPset_ProtectiveDeviceTrippingCurve_TrippingCurveType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingCurve.IfcPset_ProtectiveDeviceTrippingCurve_TrippingCurveType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingCurve.IfcPset_ProtectiveDeviceTrippingCurve_TrippingCurveType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve = "Ifc Protective device tripping function G curve";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_IsSelectable = "Is selectable";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_NominalCurrentAdjusted = "Nominal current adjusted";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_ExternalAdjusted = "External adjusted";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_ReleaseCurrent = "Release current";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_ReleaseTime = "Release time";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_CurrentTolerance1 = "Current tolerance1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_CurrentToleranceLimit1 = "Current tolerance limit1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_CurrentTolerance2 = "Current tolerance2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_IsCurrentTolerancePositiveOnly = "Is current tolerance positive only";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_TimeTolerance1 = "Time tolerance1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_TimeToleranceLimit1 = "Time tolerance limit1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_TimeTolerance2 = "Time tolerance2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_IsTimeTolerancePositiveOnly = "Is time tolerance positive only";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_ReleaseCurrentI2tStart = "Release current i2t start";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_ReleaseTimeI2tStart = "Release time i2t start";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_ReleaseCurrentI2tEnd = "Release current i2t end";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionGCurve.IfcPset_ProtectiveDeviceTrippingFunctionGCurve_ReleaseTimeI2tEnd = "Release time i2t end";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve = "Ifc Protective device tripping function I curve";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_IsSelectable = "Is selectable";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_NominalCurrentAdjusted = "Nominal current adjusted";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_ReleaseCurrent = "Release current";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_ReleaseTime = "Release time";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_CurrentTolerance1 = "Current tolerance1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_CurrentToleranceLimit1 = "Current tolerance limit1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_CurrentTolerance2 = "Current tolerance2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_IsCurrentTolerancePositiveOnly = "Is current tolerance positive only";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_TimeTolerance1 = "Time tolerance1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_TimeToleranceLimit1 = "Time tolerance limit1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_TimeTolerance2 = "Time tolerance2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_IsTimeTolerancePositiveOnly = "Is time tolerance positive only";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_MaxAdjustmentX_ICS = "Max adjustment X_ICS";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionICurve.IfcPset_ProtectiveDeviceTrippingFunctionICurve_IsOffWhenSFunctionOn = "Is off when S function on";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve = "Ifc Protective device tripping function L curve";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IfcPset_ProtectiveDeviceTrippingFunctionLCurve_IsSelectable = "Is selectable";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IfcPset_ProtectiveDeviceTrippingFunctionLCurve_UpperCurrent1 = "Upper current1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IfcPset_ProtectiveDeviceTrippingFunctionLCurve_UpperCurrent2 = "Upper current2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IfcPset_ProtectiveDeviceTrippingFunctionLCurve_UpperTime1 = "Upper time1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IfcPset_ProtectiveDeviceTrippingFunctionLCurve_UpperTime2 = "Upper time2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IfcPset_ProtectiveDeviceTrippingFunctionLCurve_LowerCurrent1 = "Lower current1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IfcPset_ProtectiveDeviceTrippingFunctionLCurve_LowerCurrent2 = "Lower current2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IfcPset_ProtectiveDeviceTrippingFunctionLCurve_LowerTime1 = "Lower time1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionLCurve.IfcPset_ProtectiveDeviceTrippingFunctionLCurve_LowerTime2 = "Lower time2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve = "Ifc Protective device tripping function S curve";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_IsSelectable = "Is selectable";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_NominalCurrentAdjusted = "Nominal current adjusted";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_ReleaseCurrent = "Release current";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_ReleaseTime = "Release time";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_CurrentTolerance1 = "Current tolerance1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_CurrentToleranceLimit1 = "Current tolerance limit1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_CurrentTolerance2 = "Current tolerance2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_IsCurrentTolerancePositiveOnly = "Is current tolerance positive only";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_TimeTolerance1 = "Time tolerance1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_TimeToleranceLimit1 = "Time tolerance limit1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_TimeTolerance2 = "Time tolerance2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_IsTimeTolerancePositiveOnly = "Is time tolerance positive only";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_ReleaseCurrentI2tStart = "Release current i2t start";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_ReleaseTimeI2tStart = "Release time i2t start";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_ReleaseCurrentI2tEnd = "Release current i2t end";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_ReleaseTimeI2tEnd = "Release time i2t end";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingFunctionSCurve.IfcPset_ProtectiveDeviceTrippingFunctionSCurve_IsOffWhenLfunctionOn = "Is off when L function on";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment = "Ifc Protective device tripping unit current adjustment";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment_AdjustmentValueType = "Adjustment value type";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment_AdjustmentValueType.Range.Equal.RANGE = "Range";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment_AdjustmentValueType.Range.Equal.LIST = "List";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment_AdjustmentRange = "Adjustment range";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment_AdjustmentRangeStepValue = "Adjustment range step value";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment_AdjustmentValues = "Adjustment values";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment.IfcPset_ProtectiveDeviceTrippingUnitCurrentAdjustment_AdjustmentDesignation = "Adjustment designation";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment = "Ifc Protective device tripping unit time adjustment";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_AdjustmentValueType = "Adjustment value type";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_AdjustmentValueType.Range.Equal.RANGE = "Range";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_AdjustmentValueType.Range.Equal.LIST = "List";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_AdjustmentRange = "Adjustment range";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_AdjustmentRangeStepValue = "Adjustment range step value";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_AdjustmentValues = "Adjustment values";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_AdjustmentDesignation = "Adjustment designation";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_CurrentForTimeDelay = "Current for time delay";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_I2TApplicability = "I2 tapplicability";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_I2TApplicability.Range.Equal.RANGE = "Range";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment.IfcPset_ProtectiveDeviceTrippingUnitTimeAdjustment_I2TApplicability.Range.Equal.LIST = "List";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon = "Ifc Protective device tripping unit type common";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_Standard = "Standard";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_UseInDiscrimination = "Use in discrimination";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_AtexVerified = "Atex verified";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_OldDevice = "Old device";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon.IfcPset_ProtectiveDeviceTrippingUnitTypeCommon_LimitingTerminalSize = "Limiting terminal size";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic = "Ifc Protective device tripping unit type electro magnetic";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_ElectroMagneticTrippingUnitType = "Electro magnetic tripping unit type";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_ElectroMagneticTrippingUnitType.Range.Equal.OL = "Ol";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_ElectroMagneticTrippingUnitType.Range.Equal.TMP_STD = "Tmp  std";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_ElectroMagneticTrippingUnitType.Range.Equal.TMP_SC = "Tmp  Sc";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_ElectroMagneticTrippingUnitType.Range.Equal.TMP_MP = "Tmp  Mp";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_ElectroMagneticTrippingUnitType.Range.Equal.TMP_BM = "Tmp  Bm";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_ElectroMagneticTrippingUnitType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_ElectroMagneticTrippingUnitType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_ElectroMagneticTrippingUnitType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_I1 = "I1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_I2 = "I2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_T2 = "T2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_DefinedTemperature = "Defined temperature";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_TemperatureFactor = "Temperature factor";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_I4 = "I4";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_I5 = "I5";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_T5 = "T5";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic_CurveDesignation = "Curve designation";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic = "Ifc Protective device tripping unit type electronic";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_ElectronicTrippingUnitType = "Electronic tripping unit type";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_ElectronicTrippingUnitType.Range.Equal.EP_BM = "Ep  Bm";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_ElectronicTrippingUnitType.Range.Equal.EP_MP = "Ep  Mp";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_ElectronicTrippingUnitType.Range.Equal.EP_SC = "Ep  Sc";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_ElectronicTrippingUnitType.Range.Equal.EP_STD = "Ep  Std";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_ElectronicTrippingUnitType.Range.Equal.EP_TIMEDELAYED = "Ep  Timedelayed";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_ElectronicTrippingUnitType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_ElectronicTrippingUnitType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_ElectronicTrippingUnitType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_NominalCurrents = "Nominal currents";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_N_Protection = "N_ protection";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_N_Protection_50 = "N_ protection_50";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_N_Protection_100 = "N_ protection_100";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic.IfcPset_ProtectiveDeviceTrippingUnitTypeElectronic_N_Protection_Select = "N_ protection_ select";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent = "Ifc Protective device tripping unit type residual current";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent = "Tripping unit release current";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent.Range.Equal.10 = "10";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent.Range.Equal.30 = "30";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent.Range.Equal.100 = "100";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent.Range.Equal.300 = "300";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent.Range.Equal.500 = "500";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent.Range.Equal.1000 = "1000";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent.IfcPset_ProtectiveDeviceTrippingUnitTypeResidualCurrent_TrippingUnitReleaseCurrent.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal = "Ifc Protective device tripping unit type thermal";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_ThermalTrippingUnitType = "Thermal tripping unit type";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_ThermalTrippingUnitType.Range.Equal.NH_FUSE = "NH fuse";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_ThermalTrippingUnitType.Range.Equal.DIAZED = "Diazed";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_ThermalTrippingUnitType.Range.Equal.MINIZED = "Minized";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_ThermalTrippingUnitType.Range.Equal.NEOZED = "Neozed";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_ThermalTrippingUnitType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_ThermalTrippingUnitType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_ThermalTrippingUnitType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_I1 = "I1";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_I2 = "I2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_T2 = "T2";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_DefinedTemperature = "Defined temperature";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_TemperatureFactor = "Temperature factor";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal.IfcPset_ProtectiveDeviceTrippingUnitTypeThermal_CurveDesignation = "Curve designation";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker = "Ifc Protective device type circuit breaker";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_PerformanceClasses = "Performance classes";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel = "Voltage level";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel.Range.Equal.U230 = "U230";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel.Range.Equal.U400 = "U400";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel.Range.Equal.U440 = "U440";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel.Range.Equal.U525 = "U525";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel.Range.Equal.U690 = "U690";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel.Range.Equal.U1000 = "U1000";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_VoltageLevel.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_ICU60947 = "ICU60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_ICS60947 = "ICS60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_ICW60947 = "ICW60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCircuitBreaker.IfcPset_ProtectiveDeviceTypeCircuitBreaker_ICM60947 = "ICM60947";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon = "Ifc Protective device type common";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon.IfcPset_ProtectiveDeviceTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon.IfcPset_ProtectiveDeviceTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon.IfcPset_ProtectiveDeviceTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon.IfcPset_ProtectiveDeviceTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon.IfcPset_ProtectiveDeviceTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon.IfcPset_ProtectiveDeviceTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon.IfcPset_ProtectiveDeviceTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon.IfcPset_ProtectiveDeviceTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeCommon.IfcPset_ProtectiveDeviceTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker = "Ifc Protective device type earth leakage circuit breaker";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker_EarthFailureDeviceType = "Earth failure device type";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker_EarthFailureDeviceType.Range.Equal.STANDARD = "Standard";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker_EarthFailureDeviceType.Range.Equal.TIMEDELAYED = "Time delayed";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker_EarthFailureDeviceType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker_EarthFailureDeviceType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker_EarthFailureDeviceType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker.IfcPset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker_Sensitivity = "Sensitivity";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector = "Ifc Protective device type fuse disconnector";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_FuseDisconnectorType = "Fuse disconnector type";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_FuseDisconnectorType.Range.Equal.ENGINEPROTECTIONDEVICE = "Engine protection device";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_FuseDisconnectorType.Range.Equal.FUSEDSWITCH = "Fused switch";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_FuseDisconnectorType.Range.Equal.HRC = "Hrc";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_FuseDisconnectorType.Range.Equal.OVERLOADPROTECTIONDEVICE = "Overload protection device";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_FuseDisconnectorType.Range.Equal.SWITCHDISCONNECTORFUSE = "Switch disconnector fuse";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_FuseDisconnectorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_FuseDisconnectorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_FuseDisconnectorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel = "Voltage level";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel.Range.Equal.U230 = "U230";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel.Range.Equal.U400 = "U400";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel.Range.Equal.U440 = "U440";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel.Range.Equal.U525 = "U525";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel.Range.Equal.U690 = "U690";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel.Range.Equal.U1000 = "U1000";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_VoltageLevel.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_IC60269 = "Ic60269";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeFuseDisconnector.IfcPset_ProtectiveDeviceTypeFuseDisconnector_PowerLoss = "Power loss";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeResidualCurrentCircuitBreaker = "Ifc Protective device type residual current circuit breaker";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeResidualCurrentCircuitBreaker.IfcPset_ProtectiveDeviceTypeResidualCurrentCircuitBreaker_Sensitivity = "Sensitivity";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeResidualCurrentSwitch = "Ifc Protective device type residual current switch";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeResidualCurrentSwitch.IfcPset_ProtectiveDeviceTypeResidualCurrentSwitch_Sensitivity = "Sensitivity";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeVaristor = "Ifc Protective device type varistor";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeVaristor.IfcPset_ProtectiveDeviceTypeVaristor_VaristorType = "Varistor type";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeVaristor.IfcPset_ProtectiveDeviceTypeVaristor_VaristorType.Range.Equal.METALOXIDE = "Metal oxide";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeVaristor.IfcPset_ProtectiveDeviceTypeVaristor_VaristorType.Range.Equal.ZINCOXIDE = "Zinc oxide";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeVaristor.IfcPset_ProtectiveDeviceTypeVaristor_VaristorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeVaristor.IfcPset_ProtectiveDeviceTypeVaristor_VaristorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ProtectiveDeviceTypeVaristor.IfcPset_ProtectiveDeviceTypeVaristor_VaristorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence = "Ifc Pump occurrence";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_ImpellerDiameter = "Impeller diameter";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_BaseType = "Base type";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_BaseType.Range.Equal.FRAME = "Frame";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_BaseType.Range.Equal.BASE = "Base";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_BaseType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_BaseType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_BaseType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_BaseType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_DriveConnectionType = "Drive connection type";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_DriveConnectionType.Range.Equal.DIRECTDRIVE = "Direct drive";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_DriveConnectionType.Range.Equal.BELTDRIVE = "Belt drive";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_DriveConnectionType.Range.Equal.COUPLING = "Coupling";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_DriveConnectionType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_DriveConnectionType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_PumpOccurrence.IfcPset_PumpOccurrence_DriveConnectionType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon = "Ifc Pump type common";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_FlowRateRange = "Flow rate range";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_FlowResistanceRange = "Flow resistance range";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_ConnectionSize = "Connection size";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_TemperatureRange = "Temperature range";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_NetPositiveSuctionHead = "Net positive suction head";
PLMPipingHVACRacewayIfc.IfcPset_PumpTypeCommon.IfcPset_PumpTypeCommon_NominalRotationSpeed = "Nominal rotation speed";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath = "Ifc Sanitary terminal type bath";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType = "Bath type";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.DOMESTIC = "Domestic";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.FOOT = "Foot";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.POOL = "Pool";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.PLUNGE = "Plunge";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.SITZ = "Sitz";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.SPA = "Whirlpool";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.TREATMENT = "Treatment";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_BathType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_DrainSize = "Drain size";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBath.IfcPset_SanitaryTerminalTypeBath_HasGrabHandles = "Has grab handles";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet = "Ifc Sanitary terminal type bidet";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_Mounting = "Mounting";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_Mounting.Range.Equal.BACKTOWALL = "Back to wall";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_Mounting.Range.Equal.PEDESTAL = "Pedestal";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_Mounting.Range.Equal.COUNTERTOP = "Countertop";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_Mounting.Range.Equal.WALLHUNG = "Wall hung";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_Mounting.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_Mounting.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_Mounting.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_SpilloverLevel = "Spillover level";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeBidet.IfcPset_SanitaryTerminalTypeBidet_DrainSize = "Drain size";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern = "Ifc Sanitary terminal type cistern";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_CisternHeight = "Cistern height";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_CisternHeight.Range.Equal.HIGHLEVEL = "High-level";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_CisternHeight.Range.Equal.LOWLEVEL = "Low-level";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_CisternHeight.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_CisternHeight.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_CisternHeight.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_CisternHeight.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_CisternCapacity = "Cistern capacity";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_IsSingleFlush = "Is single flush";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_FlushType = "Flush type";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_FlushType.Range.Equal.LEVER = "Lever";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_FlushType.Range.Equal.PULL = "Pull";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_FlushType.Range.Equal.PUSH = "Push";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_FlushType.Range.Equal.SENSOR = "Sensor";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_FlushType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_FlushType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_FlushType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_FlushRate = "Flush rate";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCistern.IfcPset_SanitaryTerminalTypeCistern_IsAutomaticFlush = "Is automatic flush";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon = "Ifc Sanitary terminal type common";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_NominalLength = "Nominal length";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_NominalWidth = "Nominal width";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_NominalDepth = "Nominal depth";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeCommon.IfcPset_SanitaryTerminalTypeCommon_Color = "Color";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain = "Ifc Sanitary terminal type sanitary fountain";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_FountainType = "Fountain type";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_FountainType.Range.Equal.DRINKINGWATER = "Drinking water";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_FountainType.Range.Equal.EYEWASH = "Eyewash";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_FountainType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_FountainType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_FountainType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_Mounting = "Mounting";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_Mounting.Range.Equal.BACKTOWALL = "Back to wall";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_Mounting.Range.Equal.PEDESTAL = "Pedestal";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_Mounting.Range.Equal.COUNTERTOP = "Countertop";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_Mounting.Range.Equal.WALLHUNG = "Wall hung";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_Mounting.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_Mounting.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_Mounting.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSanitaryFountain.IfcPset_SanitaryTerminalTypeSanitaryFountain_DrainSize = "Drain size";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower = "Ifc Sanitary terminal type shower";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_ShowerType = "Shower type";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_ShowerType.Range.Equal.DRENCH = "Drench";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_ShowerType.Range.Equal.INDIVIDUAL = "Individual";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_ShowerType.Range.Equal.TUNNEL = "Tunnel";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_ShowerType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_ShowerType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_ShowerType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_HasTray = "Has tray";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_ShowerHeadDescription = "Shower head description";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeShower.IfcPset_SanitaryTerminalTypeShower_DrainSize = "Drain size";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink = "Ifc Sanitary terminal type sink";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType = "Sink type";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.BELFAST = "Belfast";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.BUCKET = "Bucket";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.CLEANERS = "Cleaners";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.COMBINATION_LEFT = "Combination left";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.COMBINATION_RIGHT = "Combination right";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.COMBINATION_DOUBLE = "Combination double";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.DRIP = "Drip";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.LABORATORY = "Laboratory";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.LONDON = "London";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.PLASTER = "Plaster";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.POT = "Pot";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.RINSING = "Rinsing";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.SHELF = "Shelf";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.VEGETABLEPREPARATION = "Vegetable preparation";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_SinkType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_Mounting = "Mounting";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_Mounting.Range.Equal.BACKTOWALL = "Back to wall";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_Mounting.Range.Equal.PEDESTAL = "Pedestal";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_Mounting.Range.Equal.COUNTERTOP = "Countertop";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_Mounting.Range.Equal.WALLHUNG = "Wall hung";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_Mounting.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_Mounting.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_Mounting.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_Color = "Color";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_DrainSize = "Drain size";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeSink.IfcPset_SanitaryTerminalTypeSink_MountingOffset = "Mounting offset";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan = "Ifc Sanitary terminal type toilet pan";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletType = "Toilet type";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletType.Range.Equal.BEDPANWASHER = "Bed pan washer";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletType.Range.Equal.CHEMICAL = "Chemical";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletType.Range.Equal.CLOSECOUPLED = "Close coupled";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletType.Range.Equal.LOOSECOUPLED = "Loose coupled";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletType.Range.Equal.SLOPHOPPER = "Slop hopper";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletPanType = "Toilet pan type";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletPanType.Range.Equal.SIPHONIC = "Siphonic";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletPanType.Range.Equal.SQUAT = "Squat";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletPanType.Range.Equal.WASHDOWN = "Washdown";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletPanType.Range.Equal.WASHOUT = "Washout";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletPanType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletPanType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_ToiletPanType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_PanMounting = "Pan mounting";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_PanMounting.Range.Equal.BACKTOWALL = "Back to wall";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_PanMounting.Range.Equal.PEDESTAL = "Pedestal";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_PanMounting.Range.Equal.COUNTERTOP = "Countertop";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_PanMounting.Range.Equal.WALLHUNG = "Wall hung";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_PanMounting.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_PanMounting.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_PanMounting.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeToiletPan.IfcPset_SanitaryTerminalTypeToiletPan_SpilloverLevel = "Spillover level";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal = "Ifc Sanitary terminal type urinal";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_UrinalType = "Urinal type";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_UrinalType.Range.Equal.BOWL = "Bowl";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_UrinalType.Range.Equal.SLAB = "Slab";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_UrinalType.Range.Equal.STALL = "Stall";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_UrinalType.Range.Equal.TROUGH = "Trough";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_UrinalType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_UrinalType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_UrinalType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_Mounting = "Mounting";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_Mounting.Range.Equal.BACKTOWALL = "Back to wall";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_Mounting.Range.Equal.PEDESTAL = "Pedestal";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_Mounting.Range.Equal.COUNTERTOP = "Countertop";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_Mounting.Range.Equal.WALLHUNG = "Wall hung";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_Mounting.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_Mounting.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_Mounting.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeUrinal.IfcPset_SanitaryTerminalTypeUrinal_SpilloverLevel = "Spillover level";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin = "Ifc Sanitary terminal type wash hand basin";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType = "Wash hand basin type";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType.Range.Equal.DENTALCUSPIDOR = "Dental cuspidor";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType.Range.Equal.HANDRINSE = "Hand rinse";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType.Range.Equal.HOSPITAL = "Hospital";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType.Range.Equal.TIPUP = "Tipup";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType.Range.Equal.WASHFOUNTAIN = "Wash fountain";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType.Range.Equal.WASHINGTROUGH = "Washing trough";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_WashHandBasinType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_Mounting = "Mounting";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_Mounting.Range.Equal.BACKTOWALL = "Back to wall";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_Mounting.Range.Equal.PEDESTAL = "Pedestal";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_Mounting.Range.Equal.COUNTERTOP = "Countertop";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_Mounting.Range.Equal.WALLHUNG = "Wall hung";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_Mounting.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_Mounting.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_Mounting.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_DrainSize = "Drain size";
PLMPipingHVACRacewayIfc.IfcPset_SanitaryTerminalTypeWashHandBasin.IfcPset_SanitaryTerminalTypeWashHandBasin_MountingOffset = "Mounting offset";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCO2Sensor = "Ifc Sensor type CO2 sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCO2Sensor.IfcPset_SensorTypeCO2Sensor_SetPointConcentration = "Set point concentration";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon = "Ifc Sensor type common";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon.IfcPset_SensorTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon.IfcPset_SensorTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon.IfcPset_SensorTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon.IfcPset_SensorTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon.IfcPset_SensorTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon.IfcPset_SensorTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon.IfcPset_SensorTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon.IfcPset_SensorTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeCommon.IfcPset_SensorTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeConductanceSensor = "Ifc Sensor type conductance sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeConductanceSensor.IfcPset_SensorTypeConductanceSensor_SetPointConductance = "Set point conductance";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeContactSensor = "Ifc Sensor type contact sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeContactSensor.IfcPset_SensorTypeContactSensor_SetPointContact = "Set point contact";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeFireSensor = "Ifc Sensor type fire sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeFireSensor.IfcPset_SensorTypeFireSensor_FireSensorSetPoint = "Fire sensor set point";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeFireSensor.IfcPset_SensorTypeFireSensor_AccuracyOfFireSensor = "Accuracy of fire sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeFireSensor.IfcPset_SensorTypeFireSensor_TimeConstant = "Time constant";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeFlowSensor = "Ifc Sensor type flow sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeFlowSensor.IfcPset_SensorTypeFlowSensor_SetPointFlow = "Set point flow";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeFrostSensor = "Ifc Sensor type frost sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeFrostSensor.IfcPset_SensorTypeFrostSensor_SetPointFrost = "Set point frost";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeGasSensor = "Ifc Sensor type gas sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeGasSensor.IfcPset_SensorTypeGasSensor_GasDetected = "Gas detected";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeGasSensor.IfcPset_SensorTypeGasSensor_SetPointConcentration = "Set point concentration";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeGasSensor.IfcPset_SensorTypeGasSensor_CoverageArea = "Coverage area";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeHeatSensor = "Ifc Sensor type heat sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeHeatSensor.IfcPset_SensorTypeHeatSensor_CoverageArea = "Coverage area";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeHeatSensor.IfcPset_SensorTypeHeatSensor_SetPointTemperature = "Set point temperature";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeHeatSensor.IfcPset_SensorTypeHeatSensor_RateOfTemperatureRise = "Rate of temperature rise";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeHumiditySensor = "Ifc Sensor type humidity sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeHumiditySensor.IfcPset_SensorTypeHumiditySensor_SetPointHumidity = "Set point humidity";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeIdentifierSensor = "Ifc Sensor type identifier sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeIdentifierSensor.IfcPset_SensorTypeIdentifierSensor_SetPointIdentifier = "Set point identifier";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeIonConcentrationSensor = "Ifc Sensor type ion concentration sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeIonConcentrationSensor.IfcPset_SensorTypeIonConcentrationSensor_SubstanceDetected = "Substance detected";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeIonConcentrationSensor.IfcPset_SensorTypeIonConcentrationSensor_SetPointConcentration = "Set point concentration";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeLevelSensor = "Ifc Sensor type level sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeLevelSensor.IfcPset_SensorTypeLevelSensor_SetPointLevel = "Set point level";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeLightSensor = "Ifc Sensor type light sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeLightSensor.IfcPset_SensorTypeLightSensor_SetPointIlluminance = "Set point illuminance";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMoistureSensor = "Ifc Sensor type moisture sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMoistureSensor.IfcPset_SensorTypeMoistureSensor_SetPointMoisture = "Set point moisture";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMovementSensor = "Ifc Sensor type movement sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMovementSensor.IfcPset_SensorTypeMovementSensor_MovementSensingType = "Movement sensing type";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMovementSensor.IfcPset_SensorTypeMovementSensor_MovementSensingType.Range.Equal.PHOTOELECTRICCELL = "Photo electric cell";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMovementSensor.IfcPset_SensorTypeMovementSensor_MovementSensingType.Range.Equal.PRESSUREPAD = "Pressure pad";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMovementSensor.IfcPset_SensorTypeMovementSensor_MovementSensingType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMovementSensor.IfcPset_SensorTypeMovementSensor_MovementSensingType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMovementSensor.IfcPset_SensorTypeMovementSensor_MovementSensingType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeMovementSensor.IfcPset_SensorTypeMovementSensor_SetPointMovement = "Set point movement";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypePHSensor = "Ifc Sensor type PH sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypePHSensor.IfcPset_SensorTypePHSensor_SetPointPH = "Set point PH";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypePressureSensor = "Ifc Sensor type pressure sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypePressureSensor.IfcPset_SensorTypePressureSensor_SetPointPressure = "Set point pressure";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypePressureSensor.IfcPset_SensorTypePressureSensor_IsSwitch = "Is switch";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeRadiationSensor = "Ifc Sensor type radiation sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeRadiationSensor.IfcPset_SensorTypeRadiationSensor_SetPointRadiation = "Set point radiation";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeRadioactivitySensor = "Ifc Sensor type radioactivity sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeRadioactivitySensor.IfcPset_SensorTypeRadioactivitySensor_SetPointRadioactivity = "Set point radioactivity";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeSmokeSensor = "Ifc Sensor type smoke sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeSmokeSensor.IfcPset_SensorTypeSmokeSensor_CoverageArea = "Coverage area";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeSmokeSensor.IfcPset_SensorTypeSmokeSensor_SetPointConcentration = "Set point concentration";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeSmokeSensor.IfcPset_SensorTypeSmokeSensor_HasBuiltInAlarm = "Has built in alarm";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeSoundSensor = "Ifc Sensor type sound sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeSoundSensor.IfcPset_SensorTypeSoundSensor_SetPointSound = "Set point sound";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor = "Ifc Sensor type temperature sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_TemperatureSensorType = "Temperature sensor type";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_TemperatureSensorType.Range.Equal.HIGHLIMIT = "High limit";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_TemperatureSensorType.Range.Equal.LOWLIMIT = "Low limit";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_TemperatureSensorType.Range.Equal.OUTSIDETEMPERATURE = "Outside temperature";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_TemperatureSensorType.Range.Equal.OPERATINGTEMPERATURE = "Operating temperature";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_TemperatureSensorType.Range.Equal.ROOMTEMPERATURE = "Room temperature";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_TemperatureSensorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_TemperatureSensorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_TemperatureSensorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeTemperatureSensor.IfcPset_SensorTypeTemperatureSensor_SetPointTemperature = "Set point temperature";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor = "Ifc Sensor type wind sensor";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType = "Wind sensor type";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.CUP = "Cup";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.WINDMILL = "Windmill";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.HOTWIRE = "Hotwire";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.LASERDOPPLER = "Laser doppler";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.SONIC = "Sonic";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.PLATE = "Plate";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.TUBE = "Tube";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_WindSensorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SensorTypeWindSensor.IfcPset_SensorTypeWindSensor_SetPointSpeed = "Set point speed";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon = "Ifc Solar device type common";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon.IfcPset_SolarDeviceTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon.IfcPset_SolarDeviceTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon.IfcPset_SolarDeviceTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon.IfcPset_SolarDeviceTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon.IfcPset_SolarDeviceTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon.IfcPset_SolarDeviceTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon.IfcPset_SolarDeviceTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon.IfcPset_SolarDeviceTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SolarDeviceTypeCommon.IfcPset_SolarDeviceTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon = "Ifc Space heater type common";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_PlacementType = "Placement type";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_PlacementType.Range.Equal.BASEBOARD = "Baseboard";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_PlacementType.Range.Equal.TOWELWARMER = "Towel warmer";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_PlacementType.Range.Equal.SUSPENDED = "Suspended";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_PlacementType.Range.Equal.WALL = "Wall";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_PlacementType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_PlacementType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_PlacementType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_TemperatureClassification = "Temperature classification";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_TemperatureClassification.Range.Equal.LOWTEMPERATURE = "Low temperature";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_TemperatureClassification.Range.Equal.HIGHTEMPERATURE = "High temperature";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_TemperatureClassification.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_TemperatureClassification.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_TemperatureClassification.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferDimension = "Heat transfer dimension";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferDimension.Range.Equal.POINT = "Point";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferDimension.Range.Equal.PATH = "Path";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferDimension.Range.Equal.SURFACE = "Surface";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferDimension.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferDimension.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferDimension.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferMedium = "Heat transfer medium";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferMedium.Range.Equal.WATER = "Water";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferMedium.Range.Equal.STEAM = "Steam";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferMedium.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferMedium.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_HeatTransferMedium.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource = "Energy source";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.COAL = "Coal";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.COAL_PULVERIZED = "Coal pulverized";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.ELECTRICITY = "Electricity";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.GAS = "Gas";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.OIL = "Oil";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.PROPANE = "Propane";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.WOOD = "Wood";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.WOOD_CHIP = "Wood chip";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.WOOD_PELLET = "Wood pellet";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.WOOD_PULVERIZED = "Wood pulverized";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_EnergySource.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_BodyMass = "Body mass";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_ThermalMassHeatCapacity = "Thermal mass heat capacity";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_OutputCapacity = "Output capacity";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_ThermalEfficiency = "Thermal efficiency";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_NumberOfPanels = "Number of panels";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeCommon.IfcPset_SpaceHeaterTypeCommon_NumberOfSections = "Number of sections";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeConvector = "Ifc Space heater type convector";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeConvector.IfcPset_SpaceHeaterTypeConvector_ConvectorType = "Convector type";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeConvector.IfcPset_SpaceHeaterTypeConvector_ConvectorType.Range.Equal.FORCED = "Forced";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeConvector.IfcPset_SpaceHeaterTypeConvector_ConvectorType.Range.Equal.NATURAL = "Natural";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeConvector.IfcPset_SpaceHeaterTypeConvector_ConvectorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeConvector.IfcPset_SpaceHeaterTypeConvector_ConvectorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeConvector.IfcPset_SpaceHeaterTypeConvector_ConvectorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator = "Ifc Space heater type radiator";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_RadiatorType = "Radiator type";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_RadiatorType.Range.Equal.FINNEDTUBE = "Finned tube";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_RadiatorType.Range.Equal.PANEL = "Panel";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_RadiatorType.Range.Equal.SECTIONAL = "Sectional";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_RadiatorType.Range.Equal.TUBULAR = "Tubular";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_RadiatorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_RadiatorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_RadiatorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_TubingLength = "Tubing length";
PLMPipingHVACRacewayIfc.IfcPset_SpaceHeaterTypeRadiator.IfcPset_SpaceHeaterTypeRadiator_WaterContent = "Water content";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon = "Ifc Stack terminal type common";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon.IfcPset_StackTerminalTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon.IfcPset_StackTerminalTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon.IfcPset_StackTerminalTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon.IfcPset_StackTerminalTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon.IfcPset_StackTerminalTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon.IfcPset_StackTerminalTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon.IfcPset_StackTerminalTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon.IfcPset_StackTerminalTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_StackTerminalTypeCommon.IfcPset_StackTerminalTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon = "Ifc Switching device type common";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_NumberOfGangs = "Number of gangs";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_SwitchFunction = "Switch function";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_SwitchFunction.Range.Equal.ONOFFSWITCH = "On/off switch";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_SwitchFunction.Range.Equal.INTERMEDIATESWITCH = "Intermediate switch";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_SwitchFunction.Range.Equal.DOUBLETHROWSWITCH = "Double throw switch";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_SwitchFunction.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_SwitchFunction.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_SwitchFunction.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_HasLock = "Has lock";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_IsIlluminated = "Is illuminated";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeCommon.IfcPset_SwitchingDeviceTypeCommon_Legend = "Legend";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor = "Ifc Switching device type contactor";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType = "Contactor type";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.CAPACITORSWITCHING = "Capacitor switching";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.LOWCURRENT = "Low current";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.MAGNETICLATCHING = "Magnetic latching";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.MECHANICALLATCHING = "Mechanical latching";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.MODULAR = "Modular";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.REVERSING = "Reversing";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.STANDARD = "Standard";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeContactor.IfcPset_SwitchingDeviceTypeContactor_ContactorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeDimmerSwitch = "Ifc Switching device type dimmer switch";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeDimmerSwitch.IfcPset_SwitchingDeviceTypeDimmerSwitch_DimmerType = "Dimmer type";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeDimmerSwitch.IfcPset_SwitchingDeviceTypeDimmerSwitch_DimmerType.Range.Equal.ROCKER = "Rocker";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeDimmerSwitch.IfcPset_SwitchingDeviceTypeDimmerSwitch_DimmerType.Range.Equal.SELECTOR = "Selector";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeDimmerSwitch.IfcPset_SwitchingDeviceTypeDimmerSwitch_DimmerType.Range.Equal.TWIST = "Twist";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeDimmerSwitch.IfcPset_SwitchingDeviceTypeDimmerSwitch_DimmerType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeDimmerSwitch.IfcPset_SwitchingDeviceTypeDimmerSwitch_DimmerType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeDimmerSwitch.IfcPset_SwitchingDeviceTypeDimmerSwitch_DimmerType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeEmergencyStop = "Ifc Switching device type emergency stop";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeEmergencyStop.IfcPset_SwitchingDeviceTypeEmergencyStop_SwitchOperation = "Switch operation";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeEmergencyStop.IfcPset_SwitchingDeviceTypeEmergencyStop_SwitchOperation.Range.Equal.MUSHROOM = "Mushroom";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeEmergencyStop.IfcPset_SwitchingDeviceTypeEmergencyStop_SwitchOperation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeEmergencyStop.IfcPset_SwitchingDeviceTypeEmergencyStop_SwitchOperation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeEmergencyStop.IfcPset_SwitchingDeviceTypeEmergencyStop_SwitchOperation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeKeypad = "Ifc Switching device type keypad";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeKeypad.IfcPset_SwitchingDeviceTypeKeypad_KeypadType = "Keypad type";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeKeypad.IfcPset_SwitchingDeviceTypeKeypad_KeypadType.Range.Equal.BUTTONS = "Buttons";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeKeypad.IfcPset_SwitchingDeviceTypeKeypad_KeypadType.Range.Equal.TOUCHSCREEN = "Touchscreen";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeKeypad.IfcPset_SwitchingDeviceTypeKeypad_KeypadType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeKeypad.IfcPset_SwitchingDeviceTypeKeypad_KeypadType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeKeypad.IfcPset_SwitchingDeviceTypeKeypad_KeypadType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeMomentarySwitch = "Ifc Switching device type momentary switch";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeMomentarySwitch.IfcPset_SwitchingDeviceTypeMomentarySwitch_MomentaryType = "Momentary type";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeMomentarySwitch.IfcPset_SwitchingDeviceTypeMomentarySwitch_MomentaryType.Range.Equal.BUTTON = "Button";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeMomentarySwitch.IfcPset_SwitchingDeviceTypeMomentarySwitch_MomentaryType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeMomentarySwitch.IfcPset_SwitchingDeviceTypeMomentarySwitch_MomentaryType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeMomentarySwitch.IfcPset_SwitchingDeviceTypeMomentarySwitch_MomentaryType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch = "Ifc Switching device type selector switch";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SelectorType = "Selector type";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SelectorType.Range.Equal.ROCKER = "Rocker";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SelectorType.Range.Equal.SELECTOR = "Selector";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SelectorType.Range.Equal.TWIST = "Twist";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SelectorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SelectorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SelectorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchUsage = "Switch usage";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchUsage.Range.Equal.EMERGENCY = "Emergency";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchUsage.Range.Equal.GUARD = "Guard";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchUsage.Range.Equal.LIMIT = "Limit";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchUsage.Range.Equal.START = "Start";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchUsage.Range.Equal.STOP = "Stop";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchUsage.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchUsage.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchUsage.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation = "Switch activation";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.ACTUATOR = "Actuator";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.FOOT = "Foot";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.HAND = "Hand";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.PROXIMITY = "Proximity";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.SOUND = "Sound";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.TWOHAND = "Two hand";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.WIRE = "Wire";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSelectorSwitch.IfcPset_SwitchingDeviceTypeSelectorSwitch_SwitchActivation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter = "Ifc Switching device type starter";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType = "Starter type";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.AUTOTRANSFORMER = "Auto transformer";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.MANUAL = "Manual";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.DIRECTONLINE = "Direct online";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.FREQUENCY = "Frequency";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.NSTEP = "Nstep";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.RHEOSTATIC = "Rheostatic";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.STARDELTA = "Star delta";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeStarter.IfcPset_SwitchingDeviceTypeStarter_StarterType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector = "Ifc Switching device type switch disconnector";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_SwitchDisconnectorType = "Switch disconnector type";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_SwitchDisconnectorType.Range.Equal.CENTERBREAK = "Center break";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_SwitchDisconnectorType.Range.Equal.DIVIDEDSUPPORT = "Divided support";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_SwitchDisconnectorType.Range.Equal.DOUBLEBREAK = "Double break";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_SwitchDisconnectorType.Range.Equal.EARTHINGSWITCH = "Earthing switch";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_SwitchDisconnectorType.Range.Equal.ISOLATOR = "Isolator";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_SwitchDisconnectorType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_SwitchDisconnectorType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_SwitchDisconnectorType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_LoadDisconnectionType = "Load disconnection type";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_LoadDisconnectionType.Range.Equal.OFFLOAD = "Offload";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_LoadDisconnectionType.Range.Equal.ONLOAD = "Onload";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_LoadDisconnectionType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_LoadDisconnectionType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeSwitchDisconnector.IfcPset_SwitchingDeviceTypeSwitchDisconnector_LoadDisconnectionType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch = "Ifc Switching device type toggle switch";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType = "Toggle switch type";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.BREAKGLASS = "Break glass";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.CHANGEOVER = "Changeover";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.KEYOPERATED = "Key operated";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.MANUALPULL = "Manual pull";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.PUSHBUTTON = "Push button";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.PULLCORD = "Pull cord";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.ROCKER = "Rocker";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.SELECTOR = "Selector";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.TWIST = "Twist";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_ToggleSwitchType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchUsage = "Switch usage";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchUsage.Range.Equal.EMERGENCY = "Emergency";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchUsage.Range.Equal.GUARD = "Guard";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchUsage.Range.Equal.LIMIT = "Limit";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchUsage.Range.Equal.START = "Start";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchUsage.Range.Equal.STOP = "Stop";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchUsage.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchUsage.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchUsage.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation = "Switch activation";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.ACTUATOR = "Actuator";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.FOOT = "Foot";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.HAND = "Hand";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.PROXIMITY = "Proximity";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.SOUND = "Sound";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.TWOHAND = "Two hand";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.WIRE = "Wire";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_SwitchingDeviceTypeToggleSwitch.IfcPset_SwitchingDeviceTypeToggleSwitch_SwitchActivation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence = "Ifc Tank occurrence";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence.IfcPset_TankOccurrence_TankComposition = "Tank composition";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence.IfcPset_TankOccurrence_TankComposition.Range.Equal.COMPLEX = "Complex";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence.IfcPset_TankOccurrence_TankComposition.Range.Equal.ELEMENT = "Element";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence.IfcPset_TankOccurrence_TankComposition.Range.Equal.PARTIAL = "Partial";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence.IfcPset_TankOccurrence_TankComposition.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence.IfcPset_TankOccurrence_TankComposition.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence.IfcPset_TankOccurrence_TankComposition.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence.IfcPset_TankOccurrence_HasLadder = "Has ladder";
PLMPipingHVACRacewayIfc.IfcPset_TankOccurrence.IfcPset_TankOccurrence_HasVisualIndicator = "Has visual indicator";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon = "Ifc Tank type common";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_AccessType = "Access type";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_AccessType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_AccessType.Range.Equal.LOOSECOVER = "Loose cover";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_AccessType.Range.Equal.MANHOLE = "Manhole";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_AccessType.Range.Equal.SECUREDCOVER = "Secured cover";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_AccessType.Range.Equal.SECUREDCOVERWITHMANHOLE = "Secured cover with manhole";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_AccessType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_AccessType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_AccessType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType = "Storage type";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.ICE = "Ice";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.WATER = "Water";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.RAINWATER = "Rain water";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.WASTEWATER = "Waste water";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.POTABLEWATER = "Potable water";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.FUEL = "Fuel";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.OIL = "Oil";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_StorageType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_NominalLengthOrDiameter = "Nominal length or diameter";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_NominalWidthOrDiameter = "Nominal width or diameter";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_NominalDepth = "Nominal depth";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_NominalCapacity = "Nominal capacity";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EffectiveCapacity = "Effective capacity";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_OperatingWeight = "Operating weight";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_PatternType = "Pattern type";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_PatternType.Range.Equal.HORIZONTALCYLINDER = "Horizontal cylinder";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_PatternType.Range.Equal.VERTICALCYLINDER = "Vertical cylinder";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_PatternType.Range.Equal.RECTANGULAR = "Rectangular";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_PatternType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_PatternType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_PatternType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EndShapeType = "End shape type";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EndShapeType.Range.Equal.CONCAVECONVEX = "Concave convex";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EndShapeType.Range.Equal.FLATCONVEX = "Flat convex";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EndShapeType.Range.Equal.CONVEXCONVEX = "Convex convex";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EndShapeType.Range.Equal.CONCAVEFLAT = "Concave flat";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EndShapeType.Range.Equal.FLATFLAT = "Flat flat";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EndShapeType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EndShapeType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_EndShapeType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_FirstCurvatureRadius = "First curvature radius";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_SecondCurvatureRadius = "Second curvature radius";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeCommon.IfcPset_TankTypeCommon_NumberOfSections = "Number of sections";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeExpansion = "Ifc Tank type expansion";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeExpansion.IfcPset_TankTypeExpansion_ChargePressure = "Charge pressure";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeExpansion.IfcPset_TankTypeExpansion_PressureRegulatorSetting = "Pressure regulator setting";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeExpansion.IfcPset_TankTypeExpansion_ReliefValveSetting = "Relief valve setting";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed = "Ifc Tank type preformed";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_PatternType = "Pattern type";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_PatternType.Range.Equal.HORIZONTALCYLINDER = "Horizontal cylinder";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_PatternType.Range.Equal.VERTICALCYLINDER = "Vertical cylinder";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_PatternType.Range.Equal.RECTANGULAR = "Rectangular";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_PatternType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_PatternType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_PatternType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_EndShapeType = "End shape type";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_EndShapeType.Range.Equal.CONCAVECONVEX = "Concave convex";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_EndShapeType.Range.Equal.FLATCONVEX = "Flat convex";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_EndShapeType.Range.Equal.CONVEXCONVEX = "Convex convex";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_EndShapeType.Range.Equal.CONCAVEFLAT = "Concave flat";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_EndShapeType.Range.Equal.FLATFLAT = "Flat flat";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_EndShapeType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_EndShapeType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_EndShapeType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_FirstCurvatureRadius = "First curvature radius";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePreformed.IfcPset_TankTypePreformed_SecondCurvatureRadius = "Second curvature radius";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePressureVessel = "Ifc Tank type pressure vessel";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePressureVessel.IfcPset_TankTypePressureVessel_ChargePressure = "Charge pressure";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePressureVessel.IfcPset_TankTypePressureVessel_PressureRegulatorSetting = "Pressure regulator setting";
PLMPipingHVACRacewayIfc.IfcPset_TankTypePressureVessel.IfcPset_TankTypePressureVessel_ReliefValveSetting = "Relief valve setting";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeSectional = "Ifc Tank type sectional";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeSectional.IfcPset_TankTypeSectional_NumberOfSections = "Number of sections";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeSectional.IfcPset_TankTypeSectional_SectionLength = "Section length";
PLMPipingHVACRacewayIfc.IfcPset_TankTypeSectional.IfcPset_TankTypeSectional_SectionWidth = "Section width";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon = "Ifc Transformer type common";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_PrimaryVoltage = "Primary voltage";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_SecondaryVoltage = "Secondary voltage";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_PrimaryCurrent = "Primary current";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_SecondaryCurrent = "Secondary current";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_PrimaryFrequency = "Primary frequency";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_SecondaryFrequency = "Secondary frequency";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_PrimaryApparentPower = "Primary apparent power";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_SecondaryApparentPower = "Secondary apparent power";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_MaximumApparentPower = "Maximum apparent power";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_SecondaryCurrentType = "Secondary current type";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_SecondaryCurrentType.Range.Equal.AC = "Ac";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_SecondaryCurrentType.Range.Equal.DC = "Dc";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_SecondaryCurrentType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_SecondaryCurrentType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_ShortCircuitVoltage = "Short circuit voltage";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_RealImpedanceRatio = "Real impedance ratio";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_ImaginaryImpedanceRatio = "Imaginary impedance ratio";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup = "Transformer vector group";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.DD0 = "Dd0";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.DD6 = "Dd6";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.DY5 = "Dy5";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.DY11 = "Dy11";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.YD5 = "Yd5";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.YD11 = "Yd11";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.DZ0 = "Dz0";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.DZ6 = "Dz6";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.YY0 = "Yy0";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.YY6 = "Yy6";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.YZ5 = "Yz5";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.YZ11 = "Yz11";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_TransformerVectorGroup.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_IsNeutralPrimaryTerminalAvailable = "Is neutral primary terminal available";
PLMPipingHVACRacewayIfc.IfcPset_TransformerTypeCommon.IfcPset_TransformerTypeCommon_IsNeutralSecondaryTerminalAvailable = "Is neutral secondary terminal available";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon = "Ifc Tube bundle type common";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_NumberOfRows = "Number of rows";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_StaggeredRowSpacing = "Staggered row spacing";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_InLineRowSpacing = "In line row spacing";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_NumberOfCircuits = "Number of circuits";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_FoulingFactor = "Fouling factor";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_ThermalConductivity = "Thermal conductivity";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Length = "Length";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_Volume = "Volume";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_NominalDiameter = "Nominal diameter";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_OutsideDiameter = "Outside diameter";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_InsideDiameter = "Inside diameter";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_HorizontalSpacing = "Horizontal spacing";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_VerticalSpacing = "Vertical spacing";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeCommon.IfcPset_TubeBundleTypeCommon_HasTurbulator = "Has turbulator";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeFinned = "Ifc Tube bundle type finned";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeFinned.IfcPset_TubeBundleTypeFinned_Spacing = "Spacing";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeFinned.IfcPset_TubeBundleTypeFinned_Thickness = "Thickness";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeFinned.IfcPset_TubeBundleTypeFinned_ThermalConductivity = "Thermal conductivity";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeFinned.IfcPset_TubeBundleTypeFinned_Length = "Length";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeFinned.IfcPset_TubeBundleTypeFinned_Height = "Height";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeFinned.IfcPset_TubeBundleTypeFinned_Diameter = "Diameter";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeFinned.IfcPset_TubeBundleTypeFinned_FinCorrugatedType = "Fin corrugated type";
PLMPipingHVACRacewayIfc.IfcPset_TubeBundleTypeFinned.IfcPset_TubeBundleTypeFinned_HasCoating = "Has coating";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit = "Ifc Unitary equipment type air conditioning unit";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.IfcPset_UnitaryEquipmentTypeAirConditioningUnit_SensibleCoolingCapacity = "Sensible cooling capacity";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.IfcPset_UnitaryEquipmentTypeAirConditioningUnit_LatentCoolingCapacity = "Latent cooling capacity";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.IfcPset_UnitaryEquipmentTypeAirConditioningUnit_CoolingEfficiency = "Cooling efficiency";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.IfcPset_UnitaryEquipmentTypeAirConditioningUnit_HeatingCapacity = "Heating capacity";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.IfcPset_UnitaryEquipmentTypeAirConditioningUnit_HeatingEfficiency = "Heating efficiency";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.IfcPset_UnitaryEquipmentTypeAirConditioningUnit_CondenserFlowrate = "Condenser flowrate";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.IfcPset_UnitaryEquipmentTypeAirConditioningUnit_CondenserEnteringTemperature = "Condenser entering temperature";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.IfcPset_UnitaryEquipmentTypeAirConditioningUnit_CondenserLeavingTemperature = "Condenser leaving temperature";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirConditioningUnit.IfcPset_UnitaryEquipmentTypeAirConditioningUnit_OutsideAirFlowrate = "Outside air flowrate";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler = "Ifc Unitary equipment type air handler";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerConstruction = "Air handler construction";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerConstruction.Range.Equal.MANUFACTUREDITEM = "Manufactured item";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerConstruction.Range.Equal.CONSTRUCTEDONSITE = "Constructed on site";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerConstruction.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerConstruction.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerConstruction.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerFanCoilArrangement = "Air handler fan coil arrangement";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerFanCoilArrangement.Range.Equal.BLOWTHROUGH = "Blow through";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerFanCoilArrangement.Range.Equal.DRAWTHROUGH = "Draw through";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerFanCoilArrangement.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerFanCoilArrangement.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_AirHandlerFanCoilArrangement.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeAirHandler.IfcPset_UnitaryEquipmentTypeAirHandler_DualDeck = "Dual deck";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon = "Ifc Unitary equipment type common";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon.IfcPset_UnitaryEquipmentTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon.IfcPset_UnitaryEquipmentTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon.IfcPset_UnitaryEquipmentTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon.IfcPset_UnitaryEquipmentTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon.IfcPset_UnitaryEquipmentTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon.IfcPset_UnitaryEquipmentTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon.IfcPset_UnitaryEquipmentTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon.IfcPset_UnitaryEquipmentTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_UnitaryEquipmentTypeCommon.IfcPset_UnitaryEquipmentTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeAirRelease = "Ifc Valve type air release";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeAirRelease.IfcPset_ValveTypeAirRelease_IsAutomatic = "Is automatic";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon = "Ifc Valve type common";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValvePattern = "Valve pattern";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValvePattern.Range.Equal.SINGLEPORT = "Single port";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValvePattern.Range.Equal.ANGLED_2_PORT = "Angled 2 port";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValvePattern.Range.Equal.STRAIGHT_2_PORT = "Straight 2 port";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValvePattern.Range.Equal.STRAIGHT_3_PORT = "Straight 3 port";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValvePattern.Range.Equal.CROSSOVER_4_PORT = "Crossover 4 port";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValvePattern.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValvePattern.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValvePattern.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation = "Valve operation";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.DROPWEIGHT = "Drop weight";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.FLOAT = "Float";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.HYDRAULIC = "Hydraulic";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.LEVER = "Lever";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.LOCKSHIELD = "Lock shield";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.MOTORIZED = "Motorized";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.PNEUMATIC = "Pneumatic";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.SOLENOID = "Solenoid";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.SPRING = "Spring";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.THERMOSTATIC = "Thermostatic";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.WHEEL = "Wheel";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveOperation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism = "Valve mechanism";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.BALL = "Ball";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.BUTTERFLY = "Butterfly";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.CONFIGUREDGATE = "Configured gate";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.GLAND = "Gland";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.GLOBE = "Globe";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.LUBRICATEDPLUG = "Lubricated plug";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.NEEDLE = "Needle";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.PARALLELSLIDE = "Parallel slide";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.PLUG = "Plug";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.WEDGEGATE = "Wedge gate";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_ValveMechanism.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_Size = "Size";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_TestPressure = "Test pressure";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_WorkingPressure = "Working pressure";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeCommon.IfcPset_ValveTypeCommon_CloseOffRating = "Close-off rating";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeDrawOffCock = "Ifc Valve type draw-off cock";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeDrawOffCock.IfcPset_ValveTypeDrawOffCock_HasHoseUnion = "Has hose union";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet = "Ifc Valve type faucet";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType = "Faucet type";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.BIB = "Bib";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.GLOBE = "Globe";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.DIVERTER = "Diverter";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.DIVIDEDFLOWCOMBINATION = "Divided flow combination";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.PILLAR = "Pillar";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.SINGLEOUTLETCOMBINATION = "Single outlet combination";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.SPRAY = "Spray";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.SPRAYMIXING = "Spray mixing";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation = "Faucet operation";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.CERAMICDISC = "Ceramic disc";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.LEVERHANDLE = "Lever Handle";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.NONCONCUSSIVESELFCLOSING = "Non concussive self-closing";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.QUARTERTURN = "Quarter turn";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.QUICKACTION = "Quick action";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.SCREWDOWN = "Screw down";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.SELFCLOSING = "Self-closing";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.TIMEDSELFCLOSING = "Timed self-closing";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetOperation.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetFunction = "Faucet function";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetFunction.Range.Equal.COLD = "Cold";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetFunction.Range.Equal.HOT = "Hot";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetFunction.Range.Equal.MIXED = "Mixed";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetFunction.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetFunction.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetFunction.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_Finish = "Finish";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFaucet.IfcPset_ValveTypeFaucet_FaucetTopDescription = "Faucet top description";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFlushing = "Ifc Valve type flushing";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFlushing.IfcPset_ValveTypeFlushing_FlushingRate = "Flushing rate";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFlushing.IfcPset_ValveTypeFlushing_HasIntegralShutOffDevice = "Has integral shut-off device";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeFlushing.IfcPset_ValveTypeFlushing_IsHighPressure = "Is high pressure";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeGasTap = "Ifc Valve type gas tap";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeGasTap.IfcPset_ValveTypeGasTap_HasHoseUnion = "Has hose union";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeIsolating = "Ifc Valve type isolating";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeIsolating.IfcPset_ValveTypeIsolating_IsNormallyOpen = "Is normally open";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeIsolating.IfcPset_ValveTypeIsolating_IsolatingPurpose = "Isolating purpose";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeIsolating.IfcPset_ValveTypeIsolating_IsolatingPurpose.Range.Equal.LANDING = "Landing";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeIsolating.IfcPset_ValveTypeIsolating_IsolatingPurpose.Range.Equal.LANDINGWITHPRESSUREREGULATION = "Landing with pressure regulation";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeIsolating.IfcPset_ValveTypeIsolating_IsolatingPurpose.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeIsolating.IfcPset_ValveTypeIsolating_IsolatingPurpose.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeIsolating.IfcPset_ValveTypeIsolating_IsolatingPurpose.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeMixing = "Ifc Valve type mixing";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeMixing.IfcPset_ValveTypeMixing_MixerControl = "Mixer control";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeMixing.IfcPset_ValveTypeMixing_MixerControl.Range.Equal.MANUAL = "Manual";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeMixing.IfcPset_ValveTypeMixing_MixerControl.Range.Equal.PREDEFINED = "Predefined";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeMixing.IfcPset_ValveTypeMixing_MixerControl.Range.Equal.THERMOSTATIC = "Thermostatic";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeMixing.IfcPset_ValveTypeMixing_MixerControl.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeMixing.IfcPset_ValveTypeMixing_MixerControl.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeMixing.IfcPset_ValveTypeMixing_MixerControl.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypeMixing.IfcPset_ValveTypeMixing_OutletConnectionSize = "Outlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypePressureReducing = "Ifc Valve type pressure reducing";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypePressureReducing.IfcPset_ValveTypePressureReducing_UpstreamPressure = "Upstream pressure";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypePressureReducing.IfcPset_ValveTypePressureReducing_DownstreamPressure = "Downstream pressure";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypePressureRelief = "Ifc Valve type pressure relief";
PLMPipingHVACRacewayIfc.IfcPset_ValveTypePressureRelief.IfcPset_ValveTypePressureRelief_ReliefPressure = "Relief pressure";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon = "Ifc Vibration isolator type common";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_VibrationTransmissibility = "Vibration transmissibility";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_IsolatorStaticDeflection = "Isolator static deflection";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_IsolatorCompressibility = "Isolator compressibility";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_MaximumSupportedWeight = "Maximum supported weight";
PLMPipingHVACRacewayIfc.IfcPset_VibrationIsolatorTypeCommon.IfcPset_VibrationIsolatorTypeCommon_NominalHeight = "Height";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon = "Ifc Waste terminal type common";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon.IfcPset_WasteTerminalTypeCommon_Reference = "Reference";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon.IfcPset_WasteTerminalTypeCommon_Status = "Status";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon.IfcPset_WasteTerminalTypeCommon_Status.Range.Equal.NEW = "New";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon.IfcPset_WasteTerminalTypeCommon_Status.Range.Equal.EXISTING = "Existing";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon.IfcPset_WasteTerminalTypeCommon_Status.Range.Equal.DEMOLISH = "Demolish";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon.IfcPset_WasteTerminalTypeCommon_Status.Range.Equal.TEMPORARY = "Temporary";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon.IfcPset_WasteTerminalTypeCommon_Status.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon.IfcPset_WasteTerminalTypeCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeCommon.IfcPset_WasteTerminalTypeCommon_Status.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap = "Ifc Waste terminal type floor trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_NominalBodyLength = "Nominal body length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_NominalBodyWidth = "Nominal body width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_NominalBodyDepth = "Nominal body depth";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_IsForSullageWater = "Is for sullage water";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_SpilloverLevel = "Spillover level";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_TrapType = "Trap type";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_TrapType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_TrapType.Range.Equal.P_TRAP = "P trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_TrapType.Range.Equal.Q_TRAP = "Q trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_TrapType.Range.Equal.S_TRAP = "S trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_TrapType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_TrapType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_TrapType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_HasStrainer = "Has strainer";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_OutletConnectionSize = "Outlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType = "Inlet pattern type";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.1 = "1";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.2 = "2";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.3 = "3";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.4 = "4";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.12 = "12";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.13 = "13";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.14 = "14";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.23 = "23";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.24 = "24";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.34 = "34";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.123 = "123";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.124 = "124";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.134 = "134";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.234 = "234";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletPatternType.Range.Equal.1234 = "1234";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_InletConnectionSize = "Inlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_CoverLength = "Cover length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorTrap.IfcPset_WasteTerminalTypeFloorTrap_CoverWidth = "Cover width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorWaste = "Ifc Waste terminal type floor waste";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorWaste.IfcPset_WasteTerminalTypeFloorWaste_NominalBodyLength = "Nominal body length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorWaste.IfcPset_WasteTerminalTypeFloorWaste_NominalBodyWidth = "Nominal body width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorWaste.IfcPset_WasteTerminalTypeFloorWaste_NominalBodyDepth = "Nominal body depth";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorWaste.IfcPset_WasteTerminalTypeFloorWaste_OutletConnectionSize = "Outlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorWaste.IfcPset_WasteTerminalTypeFloorWaste_CoverLength = "Cover length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeFloorWaste.IfcPset_WasteTerminalTypeFloorWaste_CoverWidth = "Cover width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump = "Ifc Waste terminal type gully sump";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_NominalSumpLength = "Nominal sump length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_NominalSumpWidth = "Nominal sump width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_NominalSumpDepth = "Nominal sump depth";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_GullyType = "Gully type";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_GullyType.Range.Equal.VERTICAL = "Vertical";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_GullyType.Range.Equal.BACKINLET = "Backinlet";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_GullyType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_GullyType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_GullyType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_TrapType = "Trap type";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_TrapType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_TrapType.Range.Equal.P_TRAP = "P trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_TrapType.Range.Equal.Q_TRAP = "Q trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_TrapType.Range.Equal.S_TRAP = "S trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_TrapType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_TrapType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_TrapType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_OutletConnectionSize = "Outlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType = "Back inlet pattern type";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.1 = "1";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.2 = "2";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.3 = "3";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.4 = "4";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.12 = "12";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.13 = "13";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.14 = "14";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.23 = "23";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.24 = "24";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.34 = "34";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.123 = "123";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.124 = "124";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.134 = "134";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.234 = "234";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_BackInletPatternType.Range.Equal.1234 = "1234";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_InletConnectionSize = "Inlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_CoverLength = "Cover length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullySump.IfcPset_WasteTerminalTypeGullySump_CoverWidth = "Cover width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap = "Ifc Waste terminal type gully trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_NominalBodyLength = "Nominal body length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_NominalBodyWidth = "Nominal body width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_NominalBodyDepth = "Nominal body depth";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_GullyType = "Gully type";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_GullyType.Range.Equal.VERTICAL = "Vertical";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_GullyType.Range.Equal.BACKINLET = "Backinlet";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_GullyType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_GullyType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_GullyType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_HasStrainer = "Has strainer";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_TrapType = "Trap type";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_TrapType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_TrapType.Range.Equal.P_TRAP = "P trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_TrapType.Range.Equal.Q_TRAP = "Q trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_TrapType.Range.Equal.S_TRAP = "S trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_TrapType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_TrapType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_TrapType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_OutletConnectionSize = "Outlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType = "Back inlet pattern type";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.1 = "1";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.2 = "2";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.3 = "3";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.4 = "4";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.12 = "12";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.13 = "13";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.14 = "14";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.23 = "23";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.24 = "24";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.34 = "34";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.123 = "123";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.124 = "124";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.134 = "134";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.234 = "234";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_BackInletPatternType.Range.Equal.1234 = "1234";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_InletConnectionSize = "Inlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_CoverLength = "Cover length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeGullyTrap.IfcPset_WasteTerminalTypeGullyTrap_CoverWidth = "Cover width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeRoofDrain = "Ifc Waste terminal type roof drain";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeRoofDrain.IfcPset_WasteTerminalTypeRoofDrain_NominalBodyLength = "Nominal body length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeRoofDrain.IfcPset_WasteTerminalTypeRoofDrain_NominalBodyWidth = "Nominal body width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeRoofDrain.IfcPset_WasteTerminalTypeRoofDrain_NominalBodyDepth = "Nominal body depth";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeRoofDrain.IfcPset_WasteTerminalTypeRoofDrain_OutletConnectionSize = "Outlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeRoofDrain.IfcPset_WasteTerminalTypeRoofDrain_CoverLength = "Cover length";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeRoofDrain.IfcPset_WasteTerminalTypeRoofDrain_CoverWidth = "Cover width";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteDisposalUnit = "Ifc Waste terminal type waste disposal unit";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteDisposalUnit.IfcPset_WasteTerminalTypeWasteDisposalUnit_DrainConnectionSize = "Drain connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteDisposalUnit.IfcPset_WasteTerminalTypeWasteDisposalUnit_OutletConnectionSize = "Outlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteDisposalUnit.IfcPset_WasteTerminalTypeWasteDisposalUnit_NominalDepth = "Nominal depth";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap = "Ifc Waste terminal type waste trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_WasteTrapType = "Waste trap type";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_WasteTrapType.Range.Equal.NONE = "None";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_WasteTrapType.Range.Equal.P_TRAP = "P trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_WasteTrapType.Range.Equal.Q_TRAP = "Q trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_WasteTrapType.Range.Equal.S_TRAP = "S trap";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_WasteTrapType.Range.Equal.OTHER = "(other)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_WasteTrapType.Range.Equal.NOTKNOWN = "(unknown)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_WasteTrapType.Range.Equal.UNSET = "(unset)";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_OutletConnectionSize = "Outlet connection size";
PLMPipingHVACRacewayIfc.IfcPset_WasteTerminalTypeWasteTrap.IfcPset_WasteTerminalTypeWasteTrap_InletConnectionSize = "Inlet connection size";
PLMPipingHVACRacewayIfc.IfcQto_ActuatorBaseQuantities = "Ifc Actuator base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ActuatorBaseQuantities.IfcQto_ActuatorBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ActuatorBaseQuantities.IfcQto_ActuatorBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_AirTerminalBaseQuantities = "Ifc Air terminal base quantities";
PLMPipingHVACRacewayIfc.IfcQto_AirTerminalBaseQuantities.IfcQto_AirTerminalBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_AirTerminalBaseQuantities.IfcQto_AirTerminalBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_AirTerminalBaseQuantities.IfcQto_AirTerminalBaseQuantities_Perimeter = "Perimeter";
PLMPipingHVACRacewayIfc.IfcQto_AirTerminalBaseQuantities.IfcQto_AirTerminalBaseQuantities_TotalSurfaceArea = "Total surface area";
PLMPipingHVACRacewayIfc.IfcQto_AirTerminalBoxTypeBaseQuantities = "Ifc Air terminal box type base quantities";
PLMPipingHVACRacewayIfc.IfcQto_AirTerminalBoxTypeBaseQuantities.IfcQto_AirTerminalBoxTypeBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_AirTerminalBoxTypeBaseQuantities.IfcQto_AirTerminalBoxTypeBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_AirToAirHeatRecoveryBaseQuantities = "Ifc Air to air heat recovery base quantities";
PLMPipingHVACRacewayIfc.IfcQto_AirToAirHeatRecoveryBaseQuantities.IfcQto_AirToAirHeatRecoveryBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_AirToAirHeatRecoveryBaseQuantities.IfcQto_AirToAirHeatRecoveryBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_AlarmBaseQuantities = "Ifc Alarm base quantities";
PLMPipingHVACRacewayIfc.IfcQto_AlarmBaseQuantities.IfcQto_AlarmBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_AlarmBaseQuantities.IfcQto_AlarmBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_AudioVisualApplianceBaseQuantities = "Ifc Audio visual appliance base quantities";
PLMPipingHVACRacewayIfc.IfcQto_AudioVisualApplianceBaseQuantities.IfcQto_AudioVisualApplianceBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_AudioVisualApplianceBaseQuantities.IfcQto_AudioVisualApplianceBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_BoilerBaseQuantities = "Ifc Boiler base quantities";
PLMPipingHVACRacewayIfc.IfcQto_BoilerBaseQuantities.IfcQto_BoilerBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_BoilerBaseQuantities.IfcQto_BoilerBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_BoilerBaseQuantities.IfcQto_BoilerBaseQuantities_NetWeight = "Net weight";
PLMPipingHVACRacewayIfc.IfcQto_BoilerBaseQuantities.IfcQto_BoilerBaseQuantities_TotalSurfaceArea = "Total surface area";
PLMPipingHVACRacewayIfc.IfcQto_BurnerBaseQuantities = "Ifc Burner base quantities";
PLMPipingHVACRacewayIfc.IfcQto_BurnerBaseQuantities.IfcQto_BurnerBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_BurnerBaseQuantities.IfcQto_BurnerBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CableCarrierFittingBaseQuantities = "Ifc Cable carrier fitting base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CableCarrierFittingBaseQuantities.IfcQto_CableCarrierFittingBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CableCarrierFittingBaseQuantities.IfcQto_CableCarrierFittingBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CableCarrierSegmentBaseQuantities = "Ifc Cable carrier segment base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CableCarrierSegmentBaseQuantities.IfcQto_CableCarrierSegmentBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CableCarrierSegmentBaseQuantities.IfcQto_CableCarrierSegmentBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CableCarrierSegmentBaseQuantities.IfcQto_CableCarrierSegmentBaseQuantities_Length = "Length";
PLMPipingHVACRacewayIfc.IfcQto_CableCarrierSegmentBaseQuantities.IfcQto_CableCarrierSegmentBaseQuantities_CrossSectionArea = "Cross section area";
PLMPipingHVACRacewayIfc.IfcQto_CableCarrierSegmentBaseQuantities.IfcQto_CableCarrierSegmentBaseQuantities_OuterSurfaceArea = "Outer surface area";
PLMPipingHVACRacewayIfc.IfcQto_CableFittingBaseQuantities = "Ifc Cable fitting base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CableFittingBaseQuantities.IfcQto_CableFittingBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CableFittingBaseQuantities.IfcQto_CableFittingBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CableSegmentBaseQuantities = "Ifc Cable segment base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CableSegmentBaseQuantities.IfcQto_CableSegmentBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CableSegmentBaseQuantities.IfcQto_CableSegmentBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CableSegmentBaseQuantities.IfcQto_CableSegmentBaseQuantities_Length = "Length";
PLMPipingHVACRacewayIfc.IfcQto_CableSegmentBaseQuantities.IfcQto_CableSegmentBaseQuantities_CrossSectionArea = "Cross section area";
PLMPipingHVACRacewayIfc.IfcQto_CableSegmentBaseQuantities.IfcQto_CableSegmentBaseQuantities_OuterSurfaceArea = "Outer surface area";
PLMPipingHVACRacewayIfc.IfcQto_ChillerBaseQuantities = "Ifc Chiller base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ChillerBaseQuantities.IfcQto_ChillerBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ChillerBaseQuantities.IfcQto_ChillerBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CoilBaseQuantities = "Ifc Coil base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CoilBaseQuantities.IfcQto_CoilBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CoilBaseQuantities.IfcQto_CoilBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CommunicationsApplianceBaseQuantities = "Ifc Communications appliance base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CommunicationsApplianceBaseQuantities.IfcQto_CommunicationsApplianceBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CommunicationsApplianceBaseQuantities.IfcQto_CommunicationsApplianceBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CompressorBaseQuantities = "Ifc Compressor base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CompressorBaseQuantities.IfcQto_CompressorBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CompressorBaseQuantities.IfcQto_CompressorBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CondenserBaseQuantities = "Ifc Condenser base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CondenserBaseQuantities.IfcQto_CondenserBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CondenserBaseQuantities.IfcQto_CondenserBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_ControllerBaseQuantities = "Ifc Controller base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ControllerBaseQuantities.IfcQto_ControllerBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ControllerBaseQuantities.IfcQto_ControllerBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CooledBeamBaseQuantities = "Ifc Cooled beam base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CooledBeamBaseQuantities.IfcQto_CooledBeamBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CooledBeamBaseQuantities.IfcQto_CooledBeamBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_CoolingTowerBaseQuantities = "Ifc Cooling tower base quantities";
PLMPipingHVACRacewayIfc.IfcQto_CoolingTowerBaseQuantities.IfcQto_CoolingTowerBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_CoolingTowerBaseQuantities.IfcQto_CoolingTowerBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_DamperBaseQuantities = "Ifc Damper base quantities";
PLMPipingHVACRacewayIfc.IfcQto_DamperBaseQuantities.IfcQto_DamperBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_DamperBaseQuantities.IfcQto_DamperBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_DistributionBoardBaseQuantities = "Ifc Distribution board base quantities";
PLMPipingHVACRacewayIfc.IfcQto_DistributionBoardBaseQuantities.IfcQto_DistributionBoardBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_DistributionBoardBaseQuantities.IfcQto_DistributionBoardBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_DistributionBoardBaseQuantities.IfcQto_DistributionBoardBaseQuantities_NumberOfCircuits = "Number of circuits";
PLMPipingHVACRacewayIfc.IfcQto_DistributionChamberElementBaseQuantities = "Ifc Distribution chamber element base quantities";
PLMPipingHVACRacewayIfc.IfcQto_DistributionChamberElementBaseQuantities.IfcQto_DistributionChamberElementBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_DistributionChamberElementBaseQuantities.IfcQto_DistributionChamberElementBaseQuantities_GrossSurfaceArea = "Gross surface area";
PLMPipingHVACRacewayIfc.IfcQto_DistributionChamberElementBaseQuantities.IfcQto_DistributionChamberElementBaseQuantities_NetSurfaceArea = "Net surface area";
PLMPipingHVACRacewayIfc.IfcQto_DistributionChamberElementBaseQuantities.IfcQto_DistributionChamberElementBaseQuantities_GrossVolume = "Gross volume";
PLMPipingHVACRacewayIfc.IfcQto_DistributionChamberElementBaseQuantities.IfcQto_DistributionChamberElementBaseQuantities_NetVolume = "Net volume";
PLMPipingHVACRacewayIfc.IfcQto_DuctFittingBaseQuantities = "Ifc Duct fitting base quantities";
PLMPipingHVACRacewayIfc.IfcQto_DuctFittingBaseQuantities.IfcQto_DuctFittingBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_DuctFittingBaseQuantities.IfcQto_DuctFittingBaseQuantities_Length = "Length";
PLMPipingHVACRacewayIfc.IfcQto_DuctFittingBaseQuantities.IfcQto_DuctFittingBaseQuantities_GrossCrossSectionArea = "Gross cross section area";
PLMPipingHVACRacewayIfc.IfcQto_DuctFittingBaseQuantities.IfcQto_DuctFittingBaseQuantities_NetCrossSectionArea = "Net cross section area";
PLMPipingHVACRacewayIfc.IfcQto_DuctFittingBaseQuantities.IfcQto_DuctFittingBaseQuantities_OuterSurfaceArea = "Outer surface area";
PLMPipingHVACRacewayIfc.IfcQto_DuctFittingBaseQuantities.IfcQto_DuctFittingBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_DuctSegmentBaseQuantities = "Ifc Duct segment base quantities";
PLMPipingHVACRacewayIfc.IfcQto_DuctSegmentBaseQuantities.IfcQto_DuctSegmentBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_DuctSegmentBaseQuantities.IfcQto_DuctSegmentBaseQuantities_Length = "Length";
PLMPipingHVACRacewayIfc.IfcQto_DuctSegmentBaseQuantities.IfcQto_DuctSegmentBaseQuantities_GrossCrossSectionArea = "Gross cross section area";
PLMPipingHVACRacewayIfc.IfcQto_DuctSegmentBaseQuantities.IfcQto_DuctSegmentBaseQuantities_NetCrossSectionArea = "Net cross section area";
PLMPipingHVACRacewayIfc.IfcQto_DuctSegmentBaseQuantities.IfcQto_DuctSegmentBaseQuantities_OuterSurfaceArea = "Outer surface area";
PLMPipingHVACRacewayIfc.IfcQto_DuctSegmentBaseQuantities.IfcQto_DuctSegmentBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_DuctSilencerBaseQuantities = "Ifc Duct silencer base quantities";
PLMPipingHVACRacewayIfc.IfcQto_DuctSilencerBaseQuantities.IfcQto_DuctSilencerBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_DuctSilencerBaseQuantities.IfcQto_DuctSilencerBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_ElectricApplianceBaseQuantities = "Ifc Electric appliance base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ElectricApplianceBaseQuantities.IfcQto_ElectricApplianceBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ElectricApplianceBaseQuantities.IfcQto_ElectricApplianceBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_ElectricFlowStorageDeviceBaseQuantities = "Ifc Electric flow storage device base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ElectricFlowStorageDeviceBaseQuantities.IfcQto_ElectricFlowStorageDeviceBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ElectricFlowStorageDeviceBaseQuantities.IfcQto_ElectricFlowStorageDeviceBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_ElectricGeneratorBaseQuantities = "Ifc Electric generator base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ElectricGeneratorBaseQuantities.IfcQto_ElectricGeneratorBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ElectricGeneratorBaseQuantities.IfcQto_ElectricGeneratorBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_ElectricMotorBaseQuantities = "Ifc Electric motor base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ElectricMotorBaseQuantities.IfcQto_ElectricMotorBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ElectricMotorBaseQuantities.IfcQto_ElectricMotorBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_ElectricTimeControlBaseQuantities = "Ifc Electric time control base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ElectricTimeControlBaseQuantities.IfcQto_ElectricTimeControlBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ElectricTimeControlBaseQuantities.IfcQto_ElectricTimeControlBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_EvaporativeCoolerBaseQuantities = "Ifc Evaporative cooler base quantities";
PLMPipingHVACRacewayIfc.IfcQto_EvaporativeCoolerBaseQuantities.IfcQto_EvaporativeCoolerBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_EvaporativeCoolerBaseQuantities.IfcQto_EvaporativeCoolerBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_EvaporatorBaseQuantities = "Ifc Evaporator base quantities";
PLMPipingHVACRacewayIfc.IfcQto_EvaporatorBaseQuantities.IfcQto_EvaporatorBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_EvaporatorBaseQuantities.IfcQto_EvaporatorBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_FanBaseQuantities = "Ifc Fan base quantities";
PLMPipingHVACRacewayIfc.IfcQto_FanBaseQuantities.IfcQto_FanBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_FanBaseQuantities.IfcQto_FanBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_FilterBaseQuantities = "Ifc Filter base quantities";
PLMPipingHVACRacewayIfc.IfcQto_FilterBaseQuantities.IfcQto_FilterBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_FilterBaseQuantities.IfcQto_FilterBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_FireSuppressionTerminalBaseQuantities = "Ifc Fire suppression terminal base quantities";
PLMPipingHVACRacewayIfc.IfcQto_FireSuppressionTerminalBaseQuantities.IfcQto_FireSuppressionTerminalBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_FireSuppressionTerminalBaseQuantities.IfcQto_FireSuppressionTerminalBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_FlowMeterBaseQuantities = "Ifc Flow meter base quantities";
PLMPipingHVACRacewayIfc.IfcQto_FlowMeterBaseQuantities.IfcQto_FlowMeterBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_FlowMeterBaseQuantities.IfcQto_FlowMeterBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_HeatExchangerBaseQuantities = "Ifc Heat exchanger base quantities";
PLMPipingHVACRacewayIfc.IfcQto_HeatExchangerBaseQuantities.IfcQto_HeatExchangerBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_HeatExchangerBaseQuantities.IfcQto_HeatExchangerBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_HumidifierBaseQuantities = "Ifc Humidifier base quantities";
PLMPipingHVACRacewayIfc.IfcQto_HumidifierBaseQuantities.IfcQto_HumidifierBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_HumidifierBaseQuantities.IfcQto_HumidifierBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_InterceptorBaseQuantities = "Ifc Interceptor base quantities";
PLMPipingHVACRacewayIfc.IfcQto_InterceptorBaseQuantities.IfcQto_InterceptorBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_InterceptorBaseQuantities.IfcQto_InterceptorBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_JunctionBoxBaseQuantities = "Ifc Junction box base quantities";
PLMPipingHVACRacewayIfc.IfcQto_JunctionBoxBaseQuantities.IfcQto_JunctionBoxBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_JunctionBoxBaseQuantities.IfcQto_JunctionBoxBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_JunctionBoxBaseQuantities.IfcQto_JunctionBoxBaseQuantities_NumberOfGangs = "Number of gangs";
PLMPipingHVACRacewayIfc.IfcQto_LampBaseQuantities = "Ifc Lamp base quantities";
PLMPipingHVACRacewayIfc.IfcQto_LampBaseQuantities.IfcQto_LampBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_LampBaseQuantities.IfcQto_LampBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_LightFixtureBaseQuantities = "Ifc Light fixture base quantities";
PLMPipingHVACRacewayIfc.IfcQto_LightFixtureBaseQuantities.IfcQto_LightFixtureBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_LightFixtureBaseQuantities.IfcQto_LightFixtureBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_MotorConnectionBaseQuantities = "Ifc Motor connection base quantities";
PLMPipingHVACRacewayIfc.IfcQto_MotorConnectionBaseQuantities.IfcQto_MotorConnectionBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_MotorConnectionBaseQuantities.IfcQto_MotorConnectionBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_OutletBaseQuantities = "Ifc Outlet base quantities";
PLMPipingHVACRacewayIfc.IfcQto_OutletBaseQuantities.IfcQto_OutletBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_OutletBaseQuantities.IfcQto_OutletBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_PipeFittingBaseQuantities = "Ifc Pipe fitting base quantities";
PLMPipingHVACRacewayIfc.IfcQto_PipeFittingBaseQuantities.IfcQto_PipeFittingBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_PipeFittingBaseQuantities.IfcQto_PipeFittingBaseQuantities_Length = "Length";
PLMPipingHVACRacewayIfc.IfcQto_PipeFittingBaseQuantities.IfcQto_PipeFittingBaseQuantities_GrossCrossSectionArea = "Gross cross section area";
PLMPipingHVACRacewayIfc.IfcQto_PipeFittingBaseQuantities.IfcQto_PipeFittingBaseQuantities_NetCrossSectionArea = "Net cross section area";
PLMPipingHVACRacewayIfc.IfcQto_PipeFittingBaseQuantities.IfcQto_PipeFittingBaseQuantities_OuterSurfaceArea = "Outer surface area";
PLMPipingHVACRacewayIfc.IfcQto_PipeFittingBaseQuantities.IfcQto_PipeFittingBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_PipeFittingBaseQuantities.IfcQto_PipeFittingBaseQuantities_NetWeight = "Net weight";
PLMPipingHVACRacewayIfc.IfcQto_PipeSegmentBaseQuantities = "Ifc Pipe segment base quantities";
PLMPipingHVACRacewayIfc.IfcQto_PipeSegmentBaseQuantities.IfcQto_PipeSegmentBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_PipeSegmentBaseQuantities.IfcQto_PipeSegmentBaseQuantities_Length = "Length";
PLMPipingHVACRacewayIfc.IfcQto_PipeSegmentBaseQuantities.IfcQto_PipeSegmentBaseQuantities_GrossCrossSectionArea = "Gross cross section area";
PLMPipingHVACRacewayIfc.IfcQto_PipeSegmentBaseQuantities.IfcQto_PipeSegmentBaseQuantities_NetCrossSectionArea = "Net cross section area";
PLMPipingHVACRacewayIfc.IfcQto_PipeSegmentBaseQuantities.IfcQto_PipeSegmentBaseQuantities_OuterSurfaceArea = "Outer surface area";
PLMPipingHVACRacewayIfc.IfcQto_PipeSegmentBaseQuantities.IfcQto_PipeSegmentBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_PipeSegmentBaseQuantities.IfcQto_PipeSegmentBaseQuantities_NetWeight = "Net weight";
PLMPipingHVACRacewayIfc.IfcQto_ProtectiveDeviceBaseQuantities = "Ifc Protective device base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ProtectiveDeviceBaseQuantities.IfcQto_ProtectiveDeviceBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ProtectiveDeviceBaseQuantities.IfcQto_ProtectiveDeviceBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_ProtectiveDeviceTrippingUnitBaseQuantities = "Ifc Protective device tripping unit base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ProtectiveDeviceTrippingUnitBaseQuantities.IfcQto_ProtectiveDeviceTrippingUnitBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ProtectiveDeviceTrippingUnitBaseQuantities.IfcQto_ProtectiveDeviceTrippingUnitBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_PumpBaseQuantities = "Ifc Pump base quantities";
PLMPipingHVACRacewayIfc.IfcQto_PumpBaseQuantities.IfcQto_PumpBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_PumpBaseQuantities.IfcQto_PumpBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_SanitaryTerminalBaseQuantities = "Ifc Sanitary terminal base quantities";
PLMPipingHVACRacewayIfc.IfcQto_SanitaryTerminalBaseQuantities.IfcQto_SanitaryTerminalBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_SanitaryTerminalBaseQuantities.IfcQto_SanitaryTerminalBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_SensorBaseQuantities = "Ifc Sensor base quantities";
PLMPipingHVACRacewayIfc.IfcQto_SensorBaseQuantities.IfcQto_SensorBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_SensorBaseQuantities.IfcQto_SensorBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_SolarDeviceBaseQuantities = "Ifc Solar device base quantities";
PLMPipingHVACRacewayIfc.IfcQto_SolarDeviceBaseQuantities.IfcQto_SolarDeviceBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_SolarDeviceBaseQuantities.IfcQto_SolarDeviceBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_SolarDeviceBaseQuantities.IfcQto_SolarDeviceBaseQuantities_GrossArea = "Gross area";
PLMPipingHVACRacewayIfc.IfcQto_SpaceHeaterBaseQuantities = "Ifc Space heater base quantities";
PLMPipingHVACRacewayIfc.IfcQto_SpaceHeaterBaseQuantities.IfcQto_SpaceHeaterBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_SpaceHeaterBaseQuantities.IfcQto_SpaceHeaterBaseQuantities_Length = "Length";
PLMPipingHVACRacewayIfc.IfcQto_SpaceHeaterBaseQuantities.IfcQto_SpaceHeaterBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_SpaceHeaterBaseQuantities.IfcQto_SpaceHeaterBaseQuantities_NetWeight = "Net weight";
PLMPipingHVACRacewayIfc.IfcQto_StackTerminalBaseQuantities = "Ifc Stack terminal base quantities";
PLMPipingHVACRacewayIfc.IfcQto_StackTerminalBaseQuantities.IfcQto_StackTerminalBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_StackTerminalBaseQuantities.IfcQto_StackTerminalBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_SwitchingDeviceBaseQuantities = "Ifc Switching device base quantities";
PLMPipingHVACRacewayIfc.IfcQto_SwitchingDeviceBaseQuantities.IfcQto_SwitchingDeviceBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_SwitchingDeviceBaseQuantities.IfcQto_SwitchingDeviceBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_TankBaseQuantities = "Ifc Tank base quantities";
PLMPipingHVACRacewayIfc.IfcQto_TankBaseQuantities.IfcQto_TankBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_TankBaseQuantities.IfcQto_TankBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_TankBaseQuantities.IfcQto_TankBaseQuantities_NetWeight = "Net weight";
PLMPipingHVACRacewayIfc.IfcQto_TankBaseQuantities.IfcQto_TankBaseQuantities_TotalSurfaceArea = "Total surface area";
PLMPipingHVACRacewayIfc.IfcQto_TransformerBaseQuantities = "Ifc Transformer base quantities";
PLMPipingHVACRacewayIfc.IfcQto_TransformerBaseQuantities.IfcQto_TransformerBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_TransformerBaseQuantities.IfcQto_TransformerBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_TubeBundleBaseQuantities = "Ifc Tube bundle base quantities";
PLMPipingHVACRacewayIfc.IfcQto_TubeBundleBaseQuantities.IfcQto_TubeBundleBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_TubeBundleBaseQuantities.IfcQto_TubeBundleBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_TubeBundleBaseQuantities.IfcQto_TubeBundleBaseQuantities_NetWeight = "Net weight";
PLMPipingHVACRacewayIfc.IfcQto_UnitaryEquipmentBaseQuantities = "Ifc Unitary equipment base quantities";
PLMPipingHVACRacewayIfc.IfcQto_UnitaryEquipmentBaseQuantities.IfcQto_UnitaryEquipmentBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_UnitaryEquipmentBaseQuantities.IfcQto_UnitaryEquipmentBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_ValveBaseQuantities = "Ifc Valve base quantities";
PLMPipingHVACRacewayIfc.IfcQto_ValveBaseQuantities.IfcQto_ValveBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_ValveBaseQuantities.IfcQto_ValveBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_VibrationIsolatorBaseQuantities = "Ifc Vibration isolator base quantities";
PLMPipingHVACRacewayIfc.IfcQto_VibrationIsolatorBaseQuantities.IfcQto_VibrationIsolatorBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_VibrationIsolatorBaseQuantities.IfcQto_VibrationIsolatorBaseQuantities_GrossWeight = "Gross weight";
PLMPipingHVACRacewayIfc.IfcQto_WasteTerminalBaseQuantities = "Ifc Waste terminal base quantities";
PLMPipingHVACRacewayIfc.IfcQto_WasteTerminalBaseQuantities.IfcQto_WasteTerminalBaseQuantities_MethodOfMeasurement = "Method of measurement";
PLMPipingHVACRacewayIfc.IfcQto_WasteTerminalBaseQuantities.IfcQto_WasteTerminalBaseQuantities_GrossWeight = "Gross weight";
