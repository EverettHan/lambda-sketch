<meta charset="UTF-8"/>
PackageName="Fonctions PLM";
CATKnowledge.ListInstances.Description="Liste les instances existantes d'une référence donnée dans un contexte donné. \nSi plusieurs occurrences d'une même instance existent dans le contexte, seule une instance sera renvoyée.\n Voir également ListOccurrences ";
CATKnowledge.ListInstances.Sample="let root(VPMReference)\nlet searchInstancesOf(VPMReference)\nlet lInstances(List)\let currentInstance(VPMInstance)\n\n[...]\n\nlInstances = searchInstancesOf->ListInstances(root) \nfor currentInstance inside lInstances\n{ \n	/* Treatment on each instance */ \n}\n";

CATKnowledge.ListOccurrences.Description="Liste toutes les occurrences d'une référence donnée dans un contexte donné. \nVoir également ListInstances ";
CATKnowledge.ListOccurrences.Sample="let root(VPMReference)\nlet searchOccurrencesOf(VPMReference)\nlet lInstances(List)\let currentOccurrence(ProductOccurrence)\n\n[...]\n\nlInstances = searchOccurrencesOf->ListOccurrences(root) \nfor currentOccurrence inside lOccurrences\n{ \n	/* Treatment on each occurrence */ \n}\n";

CATKnowledge.RefreshEntities.Description="<p><span style=\"font-weight:bold;font-size:12px;\">RefreshEntities</span><span style=\"font-size:12px;\"> réalise une actualisation sélective. </span><//p><p><span style=\"font-weight:bold;font-size:12px;\">Entrées :</span><//p><p> - <span style=\"font-weight:bold;font-size:12px;\">iPLMEntitylist</span> (liste) : spécifie la liste des entités à actualiser.<//p><p> - <span style=\"font-weight:bold;font-size:12px;\">iIsRecursive</span> (booléen) : indique si le mode d'actualisation est récursif (s'applique aux entités fournies et à leurs descendants) ou non (appliqué uniquement aux entités fournies). <br/> <//p><p>Notez que les entités entrées peuvent être :<br/> - VPMReferences, VPMInstances, VPMRepReferences et VPMRepInstances en mode récursif <br/> - Sinon, VPMReferences et VPMRepReferences.<//p><p>Les VPMRep privés sont exclus du processus d'actualisation.<//p>";
CATKnowledge.RefreshEntities.Sample="/*Whole assembly refresh */ \nLet lEntities(List) \nlet oRoot,oPrd (VPMReference) \nset oRoot = GetEditorRoots(\"VPMReference\")->GetItem(1) \nlEntities.Append(oRoot) \nRefreshEntities(lEntities,true)\n";
