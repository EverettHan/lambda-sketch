<meta charset="UTF-8"/>
// COPYRIGHT DASSAULT SYSTEMES 
//----------------------------


// NLS error messages for the XMLParser component. 

SourceLabel = "Source: ";
DescriptionLabel = "Description: ";
HelpfileLabel = "Help file: ";
//CodeLabel = "Error code: ";
StatementLabel = "Statement: ";
LineLabel = "Line: ";
ColumnLabel = "Column: ";

EditPrompt = "Would you like to edit the macro source code now ?";

XML4C_XMLException = "XML4C3.0 Exception\nMessage: /p1\nCode: /p2\nSource file: /p3\nLine number: /p4";
Internal_Error_hr = "Internal error with hr = /p1";
Internal_Error_msg = "Internal error with message = /p1";

ADAPTER_ILLEGAL_PREFIX = "Illegal Namespace prefix: /p1";
ADAPTER_UNDECLARED_PREFIX = "Undeclared Namespace prefix: /p1";

NODE_ITERATOR_ILLEGAL_STATE = "CATIDOMNodeIterator::Detach has already been invoked on the iterator.";

XMLParserERR_0000 = "Internal error. The return code equals /p1.";

XMLParserERR_1000 = "DOM exception.";

XMLParserERR_2000.Request = "/p1";
XMLParserERR_2000.Diagnostic = "SAX exception : /p1";
XMLParserERR_2000.Advice = "";

XMLParserERR_2001.Request = "/p1";
XMLParserERR_2001.Diagnostic = "SAX IO exception : /p1";
XMLParserERR_2001.Advice = "";

XMLParserERR_2002.Request = "/p1";
XMLParserERR_2002.Diagnostic = "SAX parse exception : /p1\nSystemId : /p2\nPublicId : p3\nLine : /p4\nColumn : /p5";
XMLParserERR_2002.Advice = "";

XMLParserERR_2003.Request = "/p1";
XMLParserERR_2003.Diagnostic = "UTF-8 parse exception : /p1\nSystemId : /p2\nPublicId : p3\nLine : /p4\nColumn : /p5";
XMLParserERR_2003.Advice = "";

XMLParserERR_2100.Request = "Instantiate SAX parser";
XMLParserERR_2100.Diagnostic = "Invalid options definition.";
XMLParserERR_2100.Advice = "The list of option names and the list of option values must have the same size.";

XMLParserERR_2101.Request = "Instantiate SAX parser";
XMLParserERR_2101.Diagnostic = "Unsupported option \"/p1\".";
XMLParserERR_2101.Advice = "Invoke GetSupportedOptions to get the list of supported options for this parser implementation.";

XMLParserERR_2102.Request = "Instantiate SAX parser";
XMLParserERR_2102.Diagnostic = "Illegal value \"/p1\" for option \"/p2\".";
XMLParserERR_2102.Advice = "See the documentation for the authorized values for this option.";

XMLParserERR_2200.Request = "/p1";
XMLParserERR_2200.Diagnostic = "Unknown DOM error /p1 : /p2";
XMLParserERR_2200.Advice = "";

XMLParserERR_2201.Request = "/p1";
XMLParserERR_2201.Diagnostic = "INDEX_SIZE_ERR : /p1";
XMLParserERR_2201.Advice = "";

XMLParserERR_2202.Request = "/p1";
XMLParserERR_2202.Diagnostic = "DOMSTRING_SIZE_ERR : /p1";
XMLParserERR_2202.Advice = "";

XMLParserERR_2203.Request = "/p1";
XMLParserERR_2203.Diagnostic = "HIERARCHY_REQUEST_ERR : /p1";
XMLParserERR_2203.Advice = "";

XMLParserERR_2204.Request = "/p1";
XMLParserERR_2204.Diagnostic = "WRONG_DOCUMENT_ERR : /p1";
XMLParserERR_2204.Advice = "";

XMLParserERR_2205.Request = "/p1";
XMLParserERR_2205.Diagnostic = "INVALID_CHARACTER_ERR : /p1";
XMLParserERR_2205.Advice = "";

XMLParserERR_2206.Request = "/p1";
XMLParserERR_2206.Diagnostic = "NO_DATA_ALLOWED_ERR : /p1";
XMLParserERR_2206.Advice = "";

XMLParserERR_2207.Request = "/p1";
XMLParserERR_2207.Diagnostic = "NO_MODIFICATION_ALLOWED_ERR : /p1";
XMLParserERR_2207.Advice = "";

XMLParserERR_2208.Request = "/p1";
XMLParserERR_2208.Diagnostic = "NOT_FOUND_ERR : /p1";
XMLParserERR_2208.Advice = "";

XMLParserERR_2209.Request = "/p1";
XMLParserERR_2209.Diagnostic = "NOT_SUPPORTED_ERR : /p1";
XMLParserERR_2209.Advice = "";

XMLParserERR_2210.Request = "/p1";
XMLParserERR_2210.Diagnostic = "INUSE_ATTRIBUTE_ERR : /p1";
XMLParserERR_2210.Advice = "";

XMLParserERR_2211.Request = "/p1";
XMLParserERR_2211.Diagnostic = "INVALID_STATE_ERR : /p1";
XMLParserERR_2211.Advice = "";

XMLParserERR_2212.Request = "/p1";
XMLParserERR_2212.Diagnostic = "SYNTAX_ERR : /p1";
XMLParserERR_2212.Advice = "";

XMLParserERR_2213.Request = "/p1";
XMLParserERR_2213.Diagnostic = "INVALID_MODIFICATION_ERR : /p1";
XMLParserERR_2213.Advice = "";

XMLParserERR_2214.Request = "/p1";
XMLParserERR_2214.Diagnostic = "NAMESPACE_ERR : /p1";
XMLParserERR_2214.Advice = "";

XMLParserERR_2215.Request = "/p1";
XMLParserERR_2215.Diagnostic = "INVALID_ACCESS_ERR : /p1";
XMLParserERR_2215.Advice = "";

XMLParserERR_2300.Request = "/p1";
XMLParserERR_2300.Diagnostic = "Unrecognized SAX2 property name : /p1";
XMLParserERR_2300.Advice = "";

XMLParserERR_2301.Request = "/p1";
XMLParserERR_2301.Diagnostic = "Unsupported SAX2 property name : /p1";
XMLParserERR_2301.Advice = "";

XMLParserERR_2302.Request = "/p1";
XMLParserERR_2302.Diagnostic = "Unrecognized SAX2 feature name : /p1";
XMLParserERR_2302.Advice = "";

XMLParserERR_2303.Request = "/p1";
XMLParserERR_2303.Diagnostic = "Unsupported SAX2 feature name : /p1";
XMLParserERR_2303.Advice = "";

XMLParserERR_2304.Request = "/p1";
XMLParserERR_2304.Diagnostic = "SAX2 property name : /p1 cannot be modified while parsing is in progress";
XMLParserERR_2304.Advice = "";

XMLParserERR_2305.Request = "/p1";
XMLParserERR_2305.Diagnostic = "SAX2 feature name : /p1 cannot be modified while parsing is in progress";
XMLParserERR_2305.Advice = "";

XMLParserERR_2400.Request = "/p1";
XMLParserERR_2400.Diagnostic = "I/O error";
XMLParserERR_2400.Advice = "";

XMLParserERR_2401.Request = "/p1";
XMLParserERR_2401.Diagnostic = "API usage error: /p1. The requested action cannot be performed or would result in a not-well-formed XML document";
XMLParserERR_2401.Advice = "";

XMLParserERR_2402.Request = "";
XMLParserERR_2402.Diagnostic = "Unsupported character transcoding";
XMLParserERR_2402.Advice = "";

XMLParserERR_2500.Request = "Binary XML error";
XMLParserERR_2500.Diagnostic = "/p1";
XMLParserERR_2500.Advice = "";
BINARY_XML_DIAGNOSTIC = "/p1: No detailed diagnostic available";

ERR_CHARACTER_INVALID = "Illegal sequence ']]>' in character data";
ERR_CDATA_INVALID = "Illegal sequence ']]>' in CDATA section";
ERR_PI_INVALID_DATA = "Invalid characters in processing instruction data";
ERR_PI_XML = "Illegal processing instruction target";
ERR_INVALID_COMMENT = "Illegal sequence '--' in comment";
ERR_ATTRIBUTE_DEFINED = "Attribute already defined";
ERR_XMLSPACE_VALUE = "Invalid value for attribute xml:space";
ERR_XMLNS_PREFIX = "xmlns prefix is reserved for xml namespaces";
ERR_XML_PREFIX = "the xml prefix is reserved";
ERR_INVALID_VALUE = "Invalid value for option";
ERR_DECLARATION = "Cannot write the XML declaration";
ERR_DOCTYPE = "Cannot write the document type";
ERR_NO_PREFIX_DEFINED = "No defined prefix for uri";
ERR_DOCUMENT_CLOSED = "The document has already been closed";
ERR_NO_CURRENT_ELEMENT = "No current element";
ERR_NO_DOCUMENT = "No open document";
ERR_INVALID_NAME = "Invalid name";
ERR_INVALID_NCNAME = "Invalid ncname";
ERR_INVALID_PUBID = "Invalid public id";
ERR_INVALID_SYSTEMID = "Invalid system id";
ERR_INVALID_CHARACTER_ENTITY = "Invalid character entity";
ERR_INVALID_CHARS = "Invalid XML characters";

XMLParserERR_2600.Request = "XML parser instantiation error";
XMLParserERR_2600.Diagnostic = "The application has failed because the MSXML XML parser, which is a prerequisite, is not installed on your machine";
XMLParserERR_2600.Advice = "Please refer to your documentation for instructions on how to download and install the MSXML component";

XMLParserERR_2601.Request = "XML parser instantiation error";
XMLParserERR_2601.Diagnostic = "The application has failed because the MS XMLLite parser, which is a prerequisite, is not installed on your machine";
XMLParserERR_2601.Advice = "Please refer to your documentation for instructions on how to download and install the XMLLite component";

XMLParserERR_2700.Request = "CATIXMLDOMDocumentBuilder::Write";
XMLParserERR_2700.Diagnostic = "Out of memory error";
XMLParserERR_2700.Advice = "";

XMLParserERR_2800.Request = "XPath syntax error";
XMLParserERR_2800.Diagnostic = "/p1";
XMLParserERR_2800.Advice = "";

XMLParserERR_2801.Request = "XPath evaluation error";
XMLParserERR_2801.Diagnostic = "/p1";
XMLParserERR_2801.Advice = "";

XMLParserERR_2900.Request = "Get XSLT option";
XMLParserERR_2900.Diagnostic = "Option \"/p1\". is not set";
XMLParserERR_2900.Advice = "Set the XSLT option.";

XMLParserERR_2901.Request = "Set XSLT option";
XMLParserERR_2901.Diagnostic = "Unsupported option \"/p1\".";
XMLParserERR_2901.Advice = "See the documentation for the supporter option names.";

XMLParserERR_2902.Request = "Set XSLT option";
XMLParserERR_2902.Diagnostic = "Illegal value \"/p2\" for option \"/p1\".";
XMLParserERR_2902.Advice = "See the documentation for the authorized values for this option.";

XMLParserERR_2903.Request = "Get XSLT parameter";
XMLParserERR_2903.Diagnostic = "Parameter \"{/p2}/p1\". is not set";
XMLParserERR_2903.Advice = "Set the XSLT parameter.";

XMLParserERR_2910.Request = "Run XSLT";
XMLParserERR_2910.Diagnostic = "No input source specified";
XMLParserERR_2910.Advice = "Specify an input source.";

XMLParserERR_2911.Request = "Run XSLT";
XMLParserERR_2911.Diagnostic = "No output source specified";
XMLParserERR_2911.Advice = "Specify an output source.";

XMLParserERR_2912.Request = "Run XSLT";
XMLParserERR_2912.Diagnostic = "Execution error: /p1";
XMLParserERR_2912.Advice = "";

XMLParserERR_3000.Request = "/p1";
XMLParserERR_3000.Diagnostic = "API usage error: /p1.";
XMLParserERR_3000.Advice = "";

XMLParserERR_3001.Request = "/p1";
XMLParserERR_3001.Diagnostic = "Pull parser error: /p1.";
XMLParserERR_3001.Advice = "";

ERR_SUBTREE_NO_START_ELEMENT = "The reader is not positionned on a node of type NodeType_StartElement";
ERR_LOCK_BY_SUBTREE_READER = "The reader is locked by a subtree reader";
ERR_NO_CURRENT_NODE = "No current node";
ERR_INDEX = "Out of bounds attribute index";
