<meta charset="UTF-8"/>
PackageName = "PLM Functions";
CATKnowledge.ListInstances.Description="Lists the existing Instances of a given Reference in a given Context. \nIf several occurrences of a same Instance exist under the context, only one instance will be returned.\nSee also ListOccurrences ";
CATKnowledge.ListInstances.Sample="let root(VPMReference)\nlet searchInstancesOf(VPMReference)\nlet lInstances(List)\let currentInstance(VPMInstance)\n\n[...]\n\nlInstances = searchInstancesOf->ListInstances(root) \nfor currentInstance inside lInstances\n{ \n	/* Treatment on each instance */ \n}\n";

CATKnowledge.ListOccurrences.Description="Lists all Occurrences of a given Reference in a given Context. \nSee also ListInstances ";
CATKnowledge.ListOccurrences.Sample="let root(VPMReference)\nlet searchOccurrencesOf(VPMReference)\nlet lInstances(List)\let currentOccurrence(ProductOccurrence)\n\n[...]\n\nlInstances = searchOccurrencesOf->ListOccurrences(root) \nfor currentOccurrence inside lOccurrences\n{ \n	/* Treatment on each occurrence */ \n}\n";

CATKnowledge.RefreshEntities.Description="<p><span style=\"font-weight:bold;font-size:12px;\">RefreshEntities</span><span style=\"font-size:12px;\"> performs a selective refresh. </span><//p><p><span style=\"font-weight:bold;font-size:12px;\">Inputs:</span><//p><p> - <span style=\"font-weight:bold;font-size:12px;\">iPLMEntitylist</span> (List) : specifies the list of entities to refresh.<//p><p> - <span style=\"font-weight:bold;font-size:12px;\">iIsRecursive</span> (Boolean) : specifies if the refresh mode is recursive (applies to the provided entities and to their descendants) or not (applied only to the provided entities). <br/> <//p><p>Notice that the input entities can be:<br/> - VPMReferences, VPMInstances, VPMRepReferences and VPMRepInstances in the recursive mode <br/> - VPMReferences and VPMRepReferences otherwise.<//p><p>The private VPMRep are excluded from the refresh process.<//p>";
CATKnowledge.RefreshEntities.Sample="/*Whole assembly refresh */ \nLet lEntities(List) \nlet oRoot,oPrd (VPMReference) \nset oRoot = GetEditorRoots(\"VPMReference\")->GetItem(1) \nlEntities.Append(oRoot) \nRefreshEntities(lEntities,true)\n";
