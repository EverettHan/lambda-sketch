<meta charset="UTF-8"/>
AECArchitecturalElementIfc.IfcChimney = "Ifc Chimney";
AECArchitecturalElementIfc.IfcChimney.IfcChimney_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcChimney.IfcChimney_Tag = "Tag";
AECArchitecturalElementIfc.IfcChimney.IfcChimney_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcChimneyType = "Ifc Chimney type";
AECArchitecturalElementIfc.IfcChimneyType.IfcChimneyType_Tag = "Tag";
AECArchitecturalElementIfc.IfcChimneyType.IfcChimneyType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcChimneyType.IfcChimneyType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcChimneyTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcChimneyTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcCovering = "Ifc Covering";
AECArchitecturalElementIfc.IfcCovering.IfcCovering_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcCovering.IfcCovering_Tag = "Tag";
AECArchitecturalElementIfc.IfcCovering.IfcCovering_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcCoveringType = "Ifc Covering type";
AECArchitecturalElementIfc.IfcCoveringType.IfcCoveringType_Tag = "Tag";
AECArchitecturalElementIfc.IfcCoveringType.IfcCoveringType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcCoveringType.IfcCoveringType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.CEILING = "Ceiling";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.FLOORING = "Flooring";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.CLADDING = "Cladding";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.ROOFING = "Roofing";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.MOLDING = "Molding";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.SKIRTINGBOARD = "Skirting board";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.INSULATION = "Insulation";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.MEMBRANE = "Membrane";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.SLEEVING = "Sleeving";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.WRAPPING = "Wrapping";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcCoveringTypeEnum.COPING = "Coping";
AECArchitecturalElementIfc.IfcCurtainWall = "Ifc Curtain wall";
AECArchitecturalElementIfc.IfcCurtainWall.IfcCurtainWall_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcCurtainWall.IfcCurtainWall_Tag = "Tag";
AECArchitecturalElementIfc.IfcCurtainWall.IfcCurtainWall_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcCurtainWallType = "Ifc Curtain wall type";
AECArchitecturalElementIfc.IfcCurtainWallType.IfcCurtainWallType_Tag = "Tag";
AECArchitecturalElementIfc.IfcCurtainWallType.IfcCurtainWallType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcCurtainWallType.IfcCurtainWallType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcCurtainWallTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcCurtainWallTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcDoor = "Ifc Door";
AECArchitecturalElementIfc.IfcDoor.IfcDoor_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcDoor.IfcDoor_Tag = "Tag";
AECArchitecturalElementIfc.IfcDoor.IfcDoor_OverallHeight = "Overall height";
AECArchitecturalElementIfc.IfcDoor.IfcDoor_OverallWidth = "Overall width";
AECArchitecturalElementIfc.IfcDoor.IfcDoor_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcDoor.IfcDoor_OperationType = "Operation type";
AECArchitecturalElementIfc.IfcDoorStandardCase = "Ifc Door standard case";
AECArchitecturalElementIfc.IfcDoorStandardCase.IfcDoorStandardCase_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcDoorStandardCase.IfcDoorStandardCase_Tag = "Tag";
AECArchitecturalElementIfc.IfcDoorStandardCase.IfcDoorStandardCase_OverallHeight = "Overall height";
AECArchitecturalElementIfc.IfcDoorStandardCase.IfcDoorStandardCase_OverallWidth = "Overall width";
AECArchitecturalElementIfc.IfcDoorStandardCase.IfcDoorStandardCase_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcDoorStandardCase.IfcDoorStandardCase_OperationType = "Operation type";
AECArchitecturalElementIfc.IfcDoorType = "Ifc Door type";
AECArchitecturalElementIfc.IfcDoorType.IfcDoorType_Tag = "Tag";
AECArchitecturalElementIfc.IfcDoorType.IfcDoorType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcDoorType.IfcDoorType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcDoorType.IfcDoorType_OperationType = "Operation type";
AECArchitecturalElementIfc.IfcDoorType.IfcDoorType_ParameterTakesPrecedence = "Parameter takes precedence";
AECArchitecturalElementIfc.IfcDoorTypeEnum.DOOR = "Door";
AECArchitecturalElementIfc.IfcDoorTypeEnum.GATE = "Gate";
AECArchitecturalElementIfc.IfcDoorTypeEnum.TRAPDOOR = "Trap door";
AECArchitecturalElementIfc.IfcDoorTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcDoorTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcDoorTypeEnum.BOOM_BARRIER = "Boom barrier";
AECArchitecturalElementIfc.IfcDoorTypeEnum.TURNSTILE = "Turnstile";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.SINGLE_SWING_LEFT = "Single swing left";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.SINGLE_SWING_RIGHT = "Single swing right";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING = "Double door single swing";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = "Double door single swing opposite left";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = "Double door single swing opposite right";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.DOUBLE_SWING_LEFT = "Double swing left";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.DOUBLE_SWING_RIGHT = "Double swing right";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = "Double door double swing";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.SLIDING_TO_LEFT = "Sliding to left";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.SLIDING_TO_RIGHT = "Sliding to right";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.DOUBLE_DOOR_SLIDING = "Double door sliding";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.FOLDING_TO_LEFT = "Folding to left";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.FOLDING_TO_RIGHT = "Folding to right";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.DOUBLE_DOOR_FOLDING = "Double door folding";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.REVOLVING = "Revolving";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.ROLLINGUP = "Rolling up";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.SWING_FIXED_LEFT = "Swing fixed left";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.SWING_FIXED_RIGHT = "Swing fixed right";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcDoorTypeOperationEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcRailing = "Ifc Railing";
AECArchitecturalElementIfc.IfcRailing.IfcRailing_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcRailing.IfcRailing_Tag = "Tag";
AECArchitecturalElementIfc.IfcRailing.IfcRailing_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcRailingType = "Ifc Railing type";
AECArchitecturalElementIfc.IfcRailingType.IfcRailingType_Tag = "Tag";
AECArchitecturalElementIfc.IfcRailingType.IfcRailingType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcRailingType.IfcRailingType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcRailingTypeEnum.HANDRAIL = "Handrail";
AECArchitecturalElementIfc.IfcRailingTypeEnum.GUARDRAIL = "Guardrail";
AECArchitecturalElementIfc.IfcRailingTypeEnum.BALUSTRADE = "Balustrade";
AECArchitecturalElementIfc.IfcRailingTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcRailingTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcRailingTypeEnum.FENCE = "Fence";
AECArchitecturalElementIfc.IfcRamp = "Ifc Ramp";
AECArchitecturalElementIfc.IfcRamp.IfcRamp_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcRamp.IfcRamp_Tag = "Tag";
AECArchitecturalElementIfc.IfcRamp.IfcRamp_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcRampFlight = "Ifc Ramp flight";
AECArchitecturalElementIfc.IfcRampFlight.IfcRampFlight_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcRampFlight.IfcRampFlight_Tag = "Tag";
AECArchitecturalElementIfc.IfcRampFlight.IfcRampFlight_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcRampFlightType = "Ifc Ramp flight type";
AECArchitecturalElementIfc.IfcRampFlightType.IfcRampFlightType_Tag = "Tag";
AECArchitecturalElementIfc.IfcRampFlightType.IfcRampFlightType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcRampFlightType.IfcRampFlightType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcRampFlightTypeEnum.STRAIGHT = "Straight";
AECArchitecturalElementIfc.IfcRampFlightTypeEnum.SPIRAL = "Spiral";
AECArchitecturalElementIfc.IfcRampFlightTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcRampFlightTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcRampType = "Ifc Ramp type";
AECArchitecturalElementIfc.IfcRampType.IfcRampType_Tag = "Tag";
AECArchitecturalElementIfc.IfcRampType.IfcRampType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcRampType.IfcRampType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcRampTypeEnum.STRAIGHT_RUN_RAMP = "Straight run ramp";
AECArchitecturalElementIfc.IfcRampTypeEnum.TWO_STRAIGHT_RUN_RAMP = "Two-straight run ramp";
AECArchitecturalElementIfc.IfcRampTypeEnum.QUARTER_TURN_RAMP = "Quarter-turn ramp";
AECArchitecturalElementIfc.IfcRampTypeEnum.TWO_QUARTER_TURN_RAMP = "Two-quarter-turn ramp";
AECArchitecturalElementIfc.IfcRampTypeEnum.HALF_TURN_RAMP = "Half-turn ramp";
AECArchitecturalElementIfc.IfcRampTypeEnum.SPIRAL_RAMP = "Spiral ramp";
AECArchitecturalElementIfc.IfcRampTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcRampTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcRoof = "Ifc Roof";
AECArchitecturalElementIfc.IfcRoof.IfcRoof_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcRoof.IfcRoof_Tag = "Tag";
AECArchitecturalElementIfc.IfcRoof.IfcRoof_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcRoofType = "Ifc Roof type";
AECArchitecturalElementIfc.IfcRoofType.IfcRoofType_Tag = "Tag";
AECArchitecturalElementIfc.IfcRoofType.IfcRoofType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcRoofType.IfcRoofType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcRoofTypeEnum.FLAT_ROOF = "Flat roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.SHED_ROOF = "Shed roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.GABLE_ROOF = "Gable roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.HIP_ROOF = "Hip roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.HIPPED_GABLE_ROOF = "Hipped gable roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.GAMBREL_ROOF = "Gambrel roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.MANSARD_ROOF = "Mansard roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.BARREL_ROOF = "Barrel roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.RAINBOW_ROOF = "Rainbow roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.BUTTERFLY_ROOF = "Butterfly roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.PAVILION_ROOF = "Pavilion roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.DOME_ROOF = "Dome roof";
AECArchitecturalElementIfc.IfcRoofTypeEnum.FREEFORM = "Freeform";
AECArchitecturalElementIfc.IfcRoofTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcRoofTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcShadingDevice = "Ifc Shading device";
AECArchitecturalElementIfc.IfcShadingDevice.IfcShadingDevice_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcShadingDevice.IfcShadingDevice_Tag = "Tag";
AECArchitecturalElementIfc.IfcShadingDevice.IfcShadingDevice_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcShadingDeviceType = "Ifc Shading device type";
AECArchitecturalElementIfc.IfcShadingDeviceType.IfcShadingDeviceType_Tag = "Tag";
AECArchitecturalElementIfc.IfcShadingDeviceType.IfcShadingDeviceType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcShadingDeviceType.IfcShadingDeviceType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcShadingDeviceTypeEnum.JALOUSIE = "Jalousie";
AECArchitecturalElementIfc.IfcShadingDeviceTypeEnum.SHUTTER = "Shutter";
AECArchitecturalElementIfc.IfcShadingDeviceTypeEnum.AWNING = "Awning";
AECArchitecturalElementIfc.IfcShadingDeviceTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcShadingDeviceTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcStair = "Ifc Stair";
AECArchitecturalElementIfc.IfcStair.IfcStair_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcStair.IfcStair_Tag = "Tag";
AECArchitecturalElementIfc.IfcStair.IfcStair_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcStairFlight = "Ifc Stair flight";
AECArchitecturalElementIfc.IfcStairFlight.IfcStairFlight_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcStairFlight.IfcStairFlight_Tag = "Tag";
AECArchitecturalElementIfc.IfcStairFlight.IfcStairFlight_NumberOfRiser = "Number of risers";
AECArchitecturalElementIfc.IfcStairFlight.IfcStairFlight_NumberOfTreads = "Number of treads";
AECArchitecturalElementIfc.IfcStairFlight.IfcStairFlight_RiserHeight = "Riser height";
AECArchitecturalElementIfc.IfcStairFlight.IfcStairFlight_TreadLength = "Tread length";
AECArchitecturalElementIfc.IfcStairFlight.IfcStairFlight_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcStairFlightType = "Ifc Stair flight type";
AECArchitecturalElementIfc.IfcStairFlightType.IfcStairFlightType_Tag = "Tag";
AECArchitecturalElementIfc.IfcStairFlightType.IfcStairFlightType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcStairFlightType.IfcStairFlightType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcStairFlightTypeEnum.STRAIGHT = "Straight";
AECArchitecturalElementIfc.IfcStairFlightTypeEnum.WINDER = "Winder";
AECArchitecturalElementIfc.IfcStairFlightTypeEnum.SPIRAL = "Spiral";
AECArchitecturalElementIfc.IfcStairFlightTypeEnum.CURVED = "Curved";
AECArchitecturalElementIfc.IfcStairFlightTypeEnum.FREEFORM = "Freeform";
AECArchitecturalElementIfc.IfcStairFlightTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcStairFlightTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcStairType = "Ifc Stair type";
AECArchitecturalElementIfc.IfcStairType.IfcStairType_Tag = "Tag";
AECArchitecturalElementIfc.IfcStairType.IfcStairType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcStairType.IfcStairType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcStairTypeEnum.STRAIGHT_RUN_STAIR = "Straight-run stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.TWO_STRAIGHT_RUN_STAIR = "Two-straight-run stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.QUARTER_WINDING_STAIR = "Quarter-winding stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.QUARTER_TURN_STAIR = "Quarter-turn stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.HALF_WINDING_STAIR = "Half-winding stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.HALF_TURN_STAIR = "Half-turn stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.TWO_QUARTER_WINDING_STAIR = "Two-quarter-winding stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.TWO_QUARTER_TURN_STAIR = "Two-quarter-turn stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.THREE_QUARTER_WINDING_STAIR = "Three-quarter-winding stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.THREE_QUARTER_TURN_STAIR = "Three-quarter-turn stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.SPIRAL_STAIR = "Spiral-stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.DOUBLE_RETURN_STAIR = "Double-return stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.CURVED_RUN_STAIR = "Curved-run stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.TWO_CURVED_RUN_STAIR = "Two-curved-run stair";
AECArchitecturalElementIfc.IfcStairTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcStairTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcStairTypeEnum.LADDER = "Ladder";
AECArchitecturalElementIfc.IfcWindow = "Ifc Window";
AECArchitecturalElementIfc.IfcWindow.IfcWindow_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcWindow.IfcWindow_Tag = "Tag";
AECArchitecturalElementIfc.IfcWindow.IfcWindow_OverallHeight = "Overall height";
AECArchitecturalElementIfc.IfcWindow.IfcWindow_OverallWidth = "Overall width";
AECArchitecturalElementIfc.IfcWindow.IfcWindow_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcWindow.IfcWindow_PartitioningType = "Partitioning type";
AECArchitecturalElementIfc.IfcWindowStandardCase = "Ifc Window standard case";
AECArchitecturalElementIfc.IfcWindowStandardCase.IfcWindowStandardCase_ObjectType = "Object type";
AECArchitecturalElementIfc.IfcWindowStandardCase.IfcWindowStandardCase_Tag = "Tag";
AECArchitecturalElementIfc.IfcWindowStandardCase.IfcWindowStandardCase_OverallHeight = "Overall height";
AECArchitecturalElementIfc.IfcWindowStandardCase.IfcWindowStandardCase_OverallWidth = "Overall width";
AECArchitecturalElementIfc.IfcWindowStandardCase.IfcWindowStandardCase_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcWindowStandardCase.IfcWindowStandardCase_PartitioningType = "Partitioning type";
AECArchitecturalElementIfc.IfcWindowType = "Ifc Window type";
AECArchitecturalElementIfc.IfcWindowType.IfcWindowType_Tag = "Tag";
AECArchitecturalElementIfc.IfcWindowType.IfcWindowType_ElementType = "Element type";
AECArchitecturalElementIfc.IfcWindowType.IfcWindowType_PredefinedType = "Predefined type";
AECArchitecturalElementIfc.IfcWindowType.IfcWindowType_PartitioningType = "Partitioning type";
AECArchitecturalElementIfc.IfcWindowType.IfcWindowType_ParameterTakesPrecedence = "Parameter takes precedence";
AECArchitecturalElementIfc.IfcWindowTypeEnum.WINDOW = "Window";
AECArchitecturalElementIfc.IfcWindowTypeEnum.SKYLIGHT = "Skylight";
AECArchitecturalElementIfc.IfcWindowTypeEnum.LIGHTDOME = "Light dome";
AECArchitecturalElementIfc.IfcWindowTypeEnum.USERDEFINED = "User defined";
AECArchitecturalElementIfc.IfcWindowTypeEnum.NOTDEFINED = "Not defined";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.SINGLE_PANEL = "Single Panel";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.DOUBLE_PANEL_VERTICAL = "Double Panel Vertical";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.DOUBLE_PANEL_HORIZONTAL = "Double Panel Horizontal";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.TRIPLE_PANEL_VERTICAL = "Triple Panel Vertical";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.TRIPLE_PANEL_BOTTOM = "Triple Panel Horizontal";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.TRIPLE_PANEL_TOP = "Triple Panel Bottom";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.TRIPLE_PANEL_LEFT = "Triple Panel Top";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.TRIPLE_PANEL_RIGHT = "Triple Panel Left";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.TRIPLE_PANEL_HORIZONTAL = "Triple Panel Right";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.USERDEFINED = "User Defined";
AECArchitecturalElementIfc.IfcWindowTypePartitioningEnum.NOTDEFINED = "Not Defined";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon = "Ifc Chimney common";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_Status.Range.Equal.OTHER = "Other";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_Status.Range.Equal.NOTKNOWN = "Not known";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_Status.Range.Equal.UNSET = "Unset";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_NumberOfDrafts = "Number of drafts";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_ThermalTransmittance = "Thermal transmittance";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_LoadBearing = "Load bearing";
AECArchitecturalElementIfc.IfcPset_ChimneyCommon.IfcPset_ChimneyCommon_FireRating = "Fire rating";
AECArchitecturalElementIfc.IfcPset_CoveringCeiling = "Ifc Covering ceiling";
AECArchitecturalElementIfc.IfcPset_CoveringCeiling.IfcPset_CoveringCeiling_Permeability = "Permeability";
AECArchitecturalElementIfc.IfcPset_CoveringCeiling.IfcPset_CoveringCeiling_TileLength = "Tile length";
AECArchitecturalElementIfc.IfcPset_CoveringCeiling.IfcPset_CoveringCeiling_TileWidth = "Tile width";
AECArchitecturalElementIfc.IfcPset_CoveringCommon = "Ifc Covering common";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Status.Range.Equal.OTHER = "Other";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Status.Range.Equal.NOTKNOWN = "Not known";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Status.Range.Equal.UNSET = "Unset";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_FireRating = "Fire rating";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_AcousticRating = "Acoustic rating";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_FlammabilityRating = "Flammability rating";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_FragilityRating = "Fragility rating";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_SurfaceSpreadOfFlame = "Surface spread of flame";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Combustible = "Combustible";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_ThermalTransmittance = "Thermal transmittance";
AECArchitecturalElementIfc.IfcPset_CoveringCommon.IfcPset_CoveringCommon_Finish = "Finish";
AECArchitecturalElementIfc.IfcPset_CoveringFlooring = "Ifc Covering flooring";
AECArchitecturalElementIfc.IfcPset_CoveringFlooring.IfcPset_CoveringFlooring_HasNonSkidSurface = "Has non skid surface";
AECArchitecturalElementIfc.IfcPset_CoveringFlooring.IfcPset_CoveringFlooring_HasAntiStaticSurface = "Has anti static surface";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon = "Ifc Curtain wall common";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Status.Range.Equal.OTHER = "Other";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Status.Range.Equal.NOTKNOWN = "Not known";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Status.Range.Equal.UNSET = "Unset";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_AcousticRating = "Acoustic rating";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_FireRating = "Fire rating";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_Combustible = "Combustible";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_SurfaceSpreadOfFlame = "Surface spread of flame";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_ThermalTransmittance = "Thermal transmittance";
AECArchitecturalElementIfc.IfcPset_CurtainWallCommon.IfcPset_CurtainWallCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_DoorCommon = "Ifc Door common";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Status.Range.Equal.OTHER = "(other)";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Status.Range.Equal.UNSET = "(unset)";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_FireRating = "Fire rating";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_AcousticRating = "Acoustic rating";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_SecurityRating = "Security rating";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_DurabilityRating = "Durability rating";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_HygrothermalRating = "Hygrothermal rating";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_WaterTightnessRating = "Water tightness rating";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_MechanicalLoadRating = "Mechanical load rating";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_WindLoadRating = "Wind load rating";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_Infiltration = "Infiltration";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_ThermalTransmittance = "Thermal transmittance";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_GlazingAreaFraction = "Glazing area fraction";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_HandicapAccessible = "Handicap accessible";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_FireExit = "Fire exit";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_HasDrive = "Has drive";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_SelfClosing = "Self closing";
AECArchitecturalElementIfc.IfcPset_DoorCommon.IfcPset_DoorCommon_SmokeStop = "Smoke stop";
AECArchitecturalElementIfc.IfcPset_DoorTypeTurnstile = "Ifc Door type turnstile";
AECArchitecturalElementIfc.IfcPset_DoorTypeTurnstile.IfcPset_DoorTypeTurnstile_SensorMode = "Sensor mode";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType = "Ifc Door/window glazing type";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_GlassLayers = "Glass layers";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_GlassThickness1 = "Glass thickness 1";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_GlassThickness2 = "Glass thickness 2";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_GlassThickness3 = "Glass thickness 3";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_FillGas = "Fill gas";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_GlassColor = "Glass color";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_IsTempered = "Is tempered";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_IsLaminated = "Is laminated";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_IsCoated = "Is coated";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_IsWired = "Is wired";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_VisibleLightReflectance = "Visible light reflectance";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_VisibleLightTransmittance = "Visible light transmittance";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_SolarAbsorption = "Solar absorption";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_SolarReflectance = "Solar reflectance";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_SolarTransmittance = "Solar transmittance";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_SolarHeatGainTransmittance = "Solar heat gain transmittance";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_ShadingCoefficient = "Shading coefficient";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_ThermalTransmittanceSummer = "Thermal transmittance summer";
AECArchitecturalElementIfc.IfcPset_DoorWindowGlazingType.IfcPset_DoorWindowGlazingType_ThermalTransmittanceWinter = "Thermal transmittance winter";
AECArchitecturalElementIfc.IfcPset_DoorWindowShadingType = "Ifc Door/window shading type";
AECArchitecturalElementIfc.IfcPset_DoorWindowShadingType.IfcPset_DoorWindowShadingType_ShadingCoefficient = "Shading coefficient";
AECArchitecturalElementIfc.IfcPset_DoorWindowShadingType.IfcPset_DoorWindowShadingType_ExternalShadingCoefficient = "External shading coefficient";
AECArchitecturalElementIfc.IfcPset_DoorWindowShadingType.IfcPset_DoorWindowShadingType_InternalShadingCoefficient = "Internal shading coefficient";
AECArchitecturalElementIfc.IfcPset_DoorWindowShadingType.IfcPset_DoorWindowShadingType_InsetShadingCoefficient = "Inset shading coefficient";
AECArchitecturalElementIfc.IfcPset_RailingCommon = "Ifc Railing common";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Status.Range.Equal.OTHER = "Other";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Status.Range.Equal.NOTKNOWN = "Not known";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Status.Range.Equal.UNSET = "Unset";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Height = "Height";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_Diameter = "Diameter";
AECArchitecturalElementIfc.IfcPset_RailingCommon.IfcPset_RailingCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_RampCommon = "Ifc Ramp common";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_Status.Range.Equal.OTHER = "(other)";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_Status.Range.Equal.UNSET = "(unset)";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_RequiredHeadroom = "Required headroom";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_RequiredSlope = "Required slope";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_FireRating = "Fire rating";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_FireExit = "Fire exit";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_HandicapAccessible = "Handicap accessible";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_HasNonSkidSurface = "Has non skid surface";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_ThermalTransmittance = "Thermal transmittance";
AECArchitecturalElementIfc.IfcPset_RampCommon.IfcPset_RampCommon_LoadBearing = "Load bearing";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon = "Ifc Ramp flight common";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Status.Range.Equal.OTHER = "Other";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Status.Range.Equal.NOTKNOWN = "Not known";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Status.Range.Equal.UNSET = "Unset";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Headroom = "Headroom";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_ClearWidth = "Clear width";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_Slope = "Slope";
AECArchitecturalElementIfc.IfcPset_RampFlightCommon.IfcPset_RampFlightCommon_CounterSlope = "Counter slope";
AECArchitecturalElementIfc.IfcPset_RoofCommon = "Ifc Roof common";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_Status.Range.Equal.OTHER = "(other)";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_Status.Range.Equal.UNSET = "(unset)";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_AcousticRating = "Acoustic rating";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_FireRating = "Fire rating";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_ThermalTransmittance = "Thermal transmittance";
AECArchitecturalElementIfc.IfcPset_RoofCommon.IfcPset_RoofCommon_LoadBearing = "Load bearing";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon = "Ifc Shading device common";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Status.Range.Equal.OTHER = "(other)";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Status.Range.Equal.NOTKNOWN = "(unknown)";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Status.Range.Equal.UNSET = "(unset)";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_ShadingDeviceType = "Shading device type";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_ShadingDeviceType.Range.Equal.FIXED = "Fixed";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_ShadingDeviceType.Range.Equal.MOVABLE = "Movable";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_ShadingDeviceType.Range.Equal.OVERHANG = "Overhang";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_ShadingDeviceType.Range.Equal.SIDEFIN = "Side fin";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_ShadingDeviceType.Range.Equal.OTHER = "(other)";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_ShadingDeviceType.Range.Equal.NOTKNOWN = "(unknown)";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_ShadingDeviceType.Range.Equal.UNSET = "(unset)";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_MechanicalOperated = "Mechanical operated";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_ThermalTransmittance = "Thermal transmittance";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_SolarTransmittance = "Solar transmittance";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_VisibleLightTransmittance = "Visible light transmittance";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_SolarReflectance = "Solar reflectance";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_VisibleLightReflectance = "Visible light reflectance";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_Roughness = "Roughness";
AECArchitecturalElementIfc.IfcPset_ShadingDeviceCommon.IfcPset_ShadingDeviceCommon_SurfaceColor = "Surface color";
AECArchitecturalElementIfc.IfcPset_ShadingDevicePHistory = "Ifc Shading device P history";
AECArchitecturalElementIfc.IfcPset_ShadingDevicePHistory.IfcPset_ShadingDevicePHistory_TiltAngle = "Tilt angle";
AECArchitecturalElementIfc.IfcPset_ShadingDevicePHistory.IfcPset_ShadingDevicePHistory_Azimuth = "Azimuth";
AECArchitecturalElementIfc.IfcPset_StairCommon = "Ifc Stair common";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_Status.Range.Equal.OTHER = "Other";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_Status.Range.Equal.NOTKNOWN = "Not known";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_Status.Range.Equal.UNSET = "Unset";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_NumberOfRiser = "Number of riser";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_NumberOfTreads = "Number of treads";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_RiserHeight = "Riser height";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_TreadLength = "Tread length";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_NosingLength = "Nosing length";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_WalkingLineOffset = "Walking line offset";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_TreadLengthAtOffset = "Tread length at offset";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_TreadLengthAtInnerSide = "Tread length at inner side";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_WaistThickness = "Waist thickness";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_RequiredHeadroom = "Required headroom";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_FireRating = "Fire rating";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_FireExit = "Fire exit";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_HandicapAccessible = "Handicap accessible";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_HasNonSkidSurface = "Has non skid surface";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_ThermalTransmittance = "Thermal transmittance";
AECArchitecturalElementIfc.IfcPset_StairCommon.IfcPset_StairCommon_LoadBearing = "Load bearing";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon = "Ifc Stair flight common";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Status.Range.Equal.OTHER = "Other";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Status.Range.Equal.NOTKNOWN = "Not known";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Status.Range.Equal.UNSET = "Unset";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_NumberOfRiser = "Number of riser";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_NumberOfTreads = "Number of treads";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_RiserHeight = "Riser height";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_TreadLength = "Tread length";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_NosingLength = "Nosing length";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_WalkingLineOffset = "Walking line offset";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_TreadLengthAtOffset = "Tread length at offset";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_TreadLengthAtInnerSide = "Tread length at inner side";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_Headroom = "Headroom";
AECArchitecturalElementIfc.IfcPset_StairFlightCommon.IfcPset_StairFlightCommon_WaistThickness = "Waist thickness";
AECArchitecturalElementIfc.IfcPset_WindowCommon = "Ifc Window common";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Reference = "Reference";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Status = "Status";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Status.Range.Equal.NEW = "New";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Status.Range.Equal.EXISTING = "Existing";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Status.Range.Equal.DEMOLISH = "Demolish";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Status.Range.Equal.TEMPORARY = "Temporary";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Status.Range.Equal.OTHER = "Other";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Status.Range.Equal.NOTKNOWN = "Not known";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Status.Range.Equal.UNSET = "Unset";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_AcousticRating = "Acoustic rating";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_FireRating = "Fire rating";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_SecurityRating = "Security rating";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_IsExternal = "Is external";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_Infiltration = "Infiltration";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_ThermalTransmittance = "Thermal transmittance";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_GlazingAreaFraction = "Glazing area fraction";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_HasSillExternal = "Has sill external";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_HasSillInternal = "Has sill internal";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_HasDrive = "Has drive";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_SmokeStop = "Smoke stop";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_FireExit = "Fire exit";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_WaterTightnessRating = "Water tightness rating";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_MechanicalLoadRating = "Mechanical load rating";
AECArchitecturalElementIfc.IfcPset_WindowCommon.IfcPset_WindowCommon_WindLoadRating = "Wind load rating";
AECArchitecturalElementIfc.IfcQto_ChimneyBaseQuantities = "Ifc Chimney Base Quantities";
AECArchitecturalElementIfc.IfcQto_ChimneyBaseQuantities.IfcQto_ChimneyBaseQuantities_MethodOfMeasurement = "Method of measurement";
AECArchitecturalElementIfc.IfcQto_ChimneyBaseQuantities.IfcQto_ChimneyBaseQuantities_Length = "Length";
AECArchitecturalElementIfc.IfcQto_CoveringBaseQuantities = "Ifc Covering base quantities";
AECArchitecturalElementIfc.IfcQto_CoveringBaseQuantities.IfcQto_CoveringBaseQuantities_MethodOfMeasurement = "Method of measurement";
AECArchitecturalElementIfc.IfcQto_CoveringBaseQuantities.IfcQto_CoveringBaseQuantities_Width = "Width";
AECArchitecturalElementIfc.IfcQto_CoveringBaseQuantities.IfcQto_CoveringBaseQuantities_GrossArea = "Gross area";
AECArchitecturalElementIfc.IfcQto_CoveringBaseQuantities.IfcQto_CoveringBaseQuantities_NetArea = "Net area";
AECArchitecturalElementIfc.IfcQto_CurtainWallQuantities = "Ifc Curtain wall quantities";
AECArchitecturalElementIfc.IfcQto_CurtainWallQuantities.IfcQto_CurtainWallQuantities_MethodOfMeasurement = "Method of measurement";
AECArchitecturalElementIfc.IfcQto_CurtainWallQuantities.IfcQto_CurtainWallQuantities_Length = "Length";
AECArchitecturalElementIfc.IfcQto_CurtainWallQuantities.IfcQto_CurtainWallQuantities_Height = "Height";
AECArchitecturalElementIfc.IfcQto_CurtainWallQuantities.IfcQto_CurtainWallQuantities_Width = "Width";
AECArchitecturalElementIfc.IfcQto_CurtainWallQuantities.IfcQto_CurtainWallQuantities_GrossSideArea = "Gross side area";
AECArchitecturalElementIfc.IfcQto_CurtainWallQuantities.IfcQto_CurtainWallQuantities_NetSideArea = "Net side area";
AECArchitecturalElementIfc.IfcQto_DoorBaseQuantities = "Ifc Door base quantities";
AECArchitecturalElementIfc.IfcQto_DoorBaseQuantities.IfcQto_DoorBaseQuantities_MethodOfMeasurement = "Method of measurement";
AECArchitecturalElementIfc.IfcQto_DoorBaseQuantities.IfcQto_DoorBaseQuantities_Width = "Width";
AECArchitecturalElementIfc.IfcQto_DoorBaseQuantities.IfcQto_DoorBaseQuantities_Height = "Height";
AECArchitecturalElementIfc.IfcQto_DoorBaseQuantities.IfcQto_DoorBaseQuantities_Perimeter = "Perimeter";
AECArchitecturalElementIfc.IfcQto_DoorBaseQuantities.IfcQto_DoorBaseQuantities_Area = "Area";
AECArchitecturalElementIfc.IfcQto_RailingBaseQuantities = "Ifc Railing base quantities";
AECArchitecturalElementIfc.IfcQto_RailingBaseQuantities.IfcQto_RailingBaseQuantities_MethodOfMeasurement = "Method of measurement";
AECArchitecturalElementIfc.IfcQto_RailingBaseQuantities.IfcQto_RailingBaseQuantities_Length = "Length";
AECArchitecturalElementIfc.IfcQto_RampFlightBaseQuantities = "Ifc Ramp flight base quantities";
AECArchitecturalElementIfc.IfcQto_RampFlightBaseQuantities.IfcQto_RampFlightBaseQuantities_MethodOfMeasurement = "Method of measurement";
AECArchitecturalElementIfc.IfcQto_RampFlightBaseQuantities.IfcQto_RampFlightBaseQuantities_Length = "Length";
AECArchitecturalElementIfc.IfcQto_RampFlightBaseQuantities.IfcQto_RampFlightBaseQuantities_Width = "Width";
AECArchitecturalElementIfc.IfcQto_RampFlightBaseQuantities.IfcQto_RampFlightBaseQuantities_GrossArea = "Gross area";
AECArchitecturalElementIfc.IfcQto_RampFlightBaseQuantities.IfcQto_RampFlightBaseQuantities_NetArea = "Net area";
AECArchitecturalElementIfc.IfcQto_RampFlightBaseQuantities.IfcQto_RampFlightBaseQuantities_GrossVolume = "Gross volume";
AECArchitecturalElementIfc.IfcQto_RampFlightBaseQuantities.IfcQto_RampFlightBaseQuantities_NetVolume = "Net volume";
AECArchitecturalElementIfc.IfcQto_RoofBaseQuantities = "Ifc Roof base quantities";
AECArchitecturalElementIfc.IfcQto_RoofBaseQuantities.IfcQto_RoofBaseQuantities_MethodOfMeasurement = "Method of measurement";
AECArchitecturalElementIfc.IfcQto_RoofBaseQuantities.IfcQto_RoofBaseQuantities_GrossArea = "Gross area";
AECArchitecturalElementIfc.IfcQto_RoofBaseQuantities.IfcQto_RoofBaseQuantities_NetArea = "Net area";
AECArchitecturalElementIfc.IfcQto_RoofBaseQuantities.IfcQto_RoofBaseQuantities_ProjectedArea = "Projected area";
AECArchitecturalElementIfc.IfcQto_StairFlightBaseQuantities = "Ifc Stair flight base quantities";
AECArchitecturalElementIfc.IfcQto_StairFlightBaseQuantities.IfcQto_StairFlightBaseQuantities_MethodOfMeasurement = "Method of measurement";
AECArchitecturalElementIfc.IfcQto_StairFlightBaseQuantities.IfcQto_StairFlightBaseQuantities_Length = "Length";
AECArchitecturalElementIfc.IfcQto_StairFlightBaseQuantities.IfcQto_StairFlightBaseQuantities_GrossVolume = "Gross volume";
AECArchitecturalElementIfc.IfcQto_StairFlightBaseQuantities.IfcQto_StairFlightBaseQuantities_NetVolume = "Net volume";
AECArchitecturalElementIfc.IfcQto_WindowBaseQuantities = "Ifc Window base quantities";
AECArchitecturalElementIfc.IfcQto_WindowBaseQuantities.IfcQto_WindowBaseQuantities_MethodOfMeasurement = "Method of measurement";
AECArchitecturalElementIfc.IfcQto_WindowBaseQuantities.IfcQto_WindowBaseQuantities_Width = "Width";
AECArchitecturalElementIfc.IfcQto_WindowBaseQuantities.IfcQto_WindowBaseQuantities_Height = "Height";
AECArchitecturalElementIfc.IfcQto_WindowBaseQuantities.IfcQto_WindowBaseQuantities_Perimeter = "Perimeter";
AECArchitecturalElementIfc.IfcQto_WindowBaseQuantities.IfcQto_WindowBaseQuantities_Area = "Area";
