<meta charset="UTF-8"/>
CATCkeBadNbArg1=" falsche Anzahl von Argumenten in /P1 /P2: /P3 an Stelle von /P4";
CATCkeBadNbArg2=" falsche Anzahl von Argumenten in /P1 /P2";
CATCkeBadKindOfArg1=" falsche Art der Argumentnummer /P1 in /P2 /P3 \n",
" (müsste /P4 und nicht /P5 sein)";
CATCkeBadKindOfArg2=" falsche Art der Argumentnummer /P1 in /P2 /P3 ";
CATCkeBadKindOfArg3=" Variable des Typs /P1 kann nicht mit Variable des Typs /P2  verglichen werden";
CATCkeBadKindOfArg4=" eine Variable des Typs /P2 in einer Variablen des Typs /P1 kann nicht beeinflusst werden. \n Sie können die Syntax <set x=y> verwenden, wenn Sie eine Umsetzung zwischen zwei Variablen durchführen möchten.  ";
CATCkeBadKindOfArg5=" Operation /P1 ist zwischen einer Variablen des Typs /P2 und einer Variablen des Typs /P3  nicht möglich";
CATCkeBadKindOfArg6=" Operation /P1 ist für eine Variable des Typs /P2  nicht möglich";
CATCkeNonExistingMethod=" ungültiges /P1 verwendet: /P2";
CATCkeNonExistingMethod2=" ungültiges /P1 verwendet: /P2 \n (/P1 /P2 existiert, aber auf Typ /P3 statt /P4)";
CATCkeInvalidExpression2=" eine Formel, die ein /P1 zurückgibt, kann nicht für die Auswertung eines Parameters vom Typ /P2 verwendet werden";
CATCkeInvalidExpression=" ungültiger Ausdruckstyp: zulässig ist /P1";
CATCkeNonExistingType=" ungültiger Typenname: /P1 ";
CATCkeUndeterminableUnit=" die Größe von /P1 konnte nicht bestimmt werden";
CATCkeBadType=" der Typ /P1 kann nicht für die Deklaration einer lokalen Variablen verwendet werden";
CATCkeDoublyDefinedVariable=" Variable /P1 ist bereits definiert";
CATCkeParseMultiLevel=" falsche Argumente: /P1";
CATCkeParseRestrictMethod=" Methode /P1 in /P2 nicht zulässig";
CATCkeParseRestrictFunction=" Funktion /P1 kann im Kontext von /P2 nicht verwendet werden";
CATCkeParseRestrictOperator=" Operator /P1 kann im Kontext von /P2 nicht verwendet werden";
CATCkeParseRestrictKeyword=" Schlüsselwort /P1 kann im Kontext von /P2 nicht verwendet werden";
CATCkeParseRestrictType=" Typ /P1 kann im Kontext von /P2 nicht verwendet werden";
CATCkeSyntaxError="Syntaxfehler";

ExprIsNotAnOptConstraint="Ausdruck ist keine Optimierungsbedingung. Es ist ein Boolescher Ausdruck erforderlich.";
ExprIsNotACheck="Ausdruck ist keine Prüfung. Es ist ein Boolescher Ausdruck erforderlich.";
IncludesDefError="Syntaxfehler in Includes-Definition. Die korrekte Syntax lautet \"Include <Bibliotheksname>;\".";
MissingSemicolonInclude="Am Ende der Include-Definition fehlt ';'.";
IncludesRetrieveError="Enthaltene Bibliothek /P1 nicht abrufbar. Überprüfen Sie im aktuellen Kontext das Data Setup oder die Ressourcentabelle.";
IncludesRetrieveErrorTitle="Ungültiger Include";
AlreadyIncludedLibTitle="Bibliothek mehrmals eingeschlossen.";
AlreadyIncludedLib="Bibliothek /P1 ist bereits unter dem Namen /P2 eingeschlossen. Entfernen Sie eine der zwei Einschließungen.";
InvalidLibName="Es wurde keine Funktionsbibliothek mit dem Namen /P1 eingeschlossen. Überprüfen Sie den Includes-Abschnitt Ihrer Regel.";
InvalidReusableFunctionName="Es wurde keine Funktion mit dem Namen /P2 in der Bibliothek /P1 oder mit unvereinbaren Argumenten gefunden. Suchen Sie in der Bibliothek nach einer solchen Funktion.";
UnprotectedInteger="Ungültiger Typname in Variablendeklaration. Wenn Sie einen Typnamen verwenden möchten, der mit einer ganzen Zahl beginnt, fügen Sie bitte vor und hinter der Zahl jeweils ein Backquote ein (z. B. let arc(`2DArc`))";

AttributesOnIncompatibleTypes="Ein Attribut wurde das zweite Mal für dasselbe Objekt, aber mit einem anderen, inkompatiblen Typ angefordert. Verwenden Sie eine andere Variable mit dem exakten Typ oder verwenden Sie die Funktion, die den Typ dynamisch abruft (GetAttribute...)";
ExprIsNotAffectationForWithInit="Ausdruck enthält keine einfache Beeinflussung.";
